{"version":3,"sources":["j2ds.js","MathUtil.js","TextureUtil.js","Dom.js","Gui.js","Events.js","BaseNode.js","CircleNode.js","LineNode.js","RectNode.js","SpriteNode.js","TextNode.js","DeviceManager.js","ErrorManager.js","FpsManager.js","ResourceManager.js","StorageManager.js","TimeManager.js","TriggerManager.js","ViewManager.js","AudioHandler.js","InputHandler.js","TouchHandler.js","Layers.js","Scene.js","j2Ds.js"],"names":["root","factory","define","amd","module","exports","window","global","MathUtil","v2f","x","y","v2i","toInt","number","rndColor","min","max","opacity","random","omitZero","Math","floor","rad","num","PI","undefined","j2Ds","modules","utils","TextureUtil","this","prototype","createImageMap","width","height","callback","textureUtil","resources","add","image","img","loaded","document","createElement","context","getContext","getAnimation","sourceX","sourceY","sourceW","sourceH","frameCount","imageMap","ok","loadImageMap","path","crossOrigin","src","addEventListener","templates","ellipse","size","color","fillRect","fillStyle","strokeRect","lineWidth","strokeStyle","gradientL","colors","isHorizontal","gradient","createLinearGradient","step","length","i","j","addColorStop","gradientR","pos1","r1","pos2","r2","createRadialGradient","Dom","id","getElementById","name","getElementsByName","tag","parent","finder","getElementsByTagName","goURL","url","location","href","reloadURL","attach","dom","events","addEvent","appendChild","injectJavaScript","code","toString","replace","callJava","send","ajax","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","core","Gui","nodes","Events","scene:deactivate","scene:activate","scene:beforeInit","scene:afterInit","scene:beforeStart","scene:afterStart","engine:before","engine:after","scene:changedGameState","writeMode:keyPress","dom:loaded","eventType","push","now","ready","onEvent","destroyEvent","len","splice","args","err","errorManager","showError","require","BaseNode","_j2Ds","pos","visible","alpha","angle","layer","scene","box","offset","resizeBox","setLayer","layers","getLayer","setVisible","isVisible","setAlpha","getAlpha","moveTo","to","t","move","getPosition","setPosition","ceil","setSize","getSize","setParent","getDistance","sqrt","pow","getDistanceXY","abs","isIntersect","x1","x2","y1","y2","isCollision","result","isLookScene","view","turn","setRotation","getRotation","rotateTo","_to","_t","atan2","isOutScene","vector","all","moveDir","speed","cos","sin","drawBox","beginPath","rect","stroke","CircleNode","radius","call","Object","create","constructor","draw","tmpAlpha","globalAlpha","arc","fill","LineNode","points","scale","cFill","lineTo","RectNode","save","translate","rotate","restore","SpriteNode","animation","tmpSpeed","frame","flip","setFlip","drawFrame","show","drawImage","setAnimation","TextNode","text","sizePx","family","colorL","vAlign","hAlign","font","fullText","maxWidth","lines","split","measureText","drawSimpleText","textAlign","textBaseline","strokeText","fillText","getText","setText","DeviceManager","parseInt","documentElement","clientWidth","screen","clientHeight","managers","ErrorManager","mode","enabled","init","_true","runBtn","innerHTML","style","padding","align","position","zIndex","left","top","getDeviceManager","fontSize","backgroundColor","cursor","onmousedown","e","stopPropagation","onclick","runEngine","logListener","elems","pauseBtn","stopEngine","reloadBtn","onerror","string","console","log","setMode","debug","_func","stack","match","file","line","decodeURI","errMess","message","domId","count","execLine","lightSyntax","_code","_type","FpsManager","fps","frameLimit","tmp_of_fps","tmp_of_time","Date","fpsManager","update","getFPS","ResourceManager","added","failed","fail","isLoaded","getProgress","StorageManager","ls","localStorage","alert","saveNode","o","setItem","JSON","stringify","load","getItem","is","value","loadNode","parse","TimeManager","times","insert","get","TriggerManager","triggers","triggerManager","trigger","command","state","last","run","mSec","job","loop","reset","ViewManager","views","viewManager","viewport","focusNode","AudioHandler","audios","audioHandler","deactivate","activate","files","vol","audio","source","volume","sound","domEl","lock","onePlay","explicitOriginalTarget","currentSrc","setLock","play","unlock","currentTime","pause","stop","setVolume","getVolume","getState","getPlayPosition","snd","io","InputHandler","screenPos","keyDown","keyPress","keyPressed","keyUp","keyUped","mouseDown","mousePress","mousePressed","mouseUp","mouseUpped","mouseWheel","canceled","body","anyKey","anyMouse","writeMode","displayCursor","mKey","LEFT","MIDDLE","RIGHT","jKey","UP","DOWN","SPACE","CTRL","SHIFT","ALT","ESC","ENTER","MINUS","PLUS","CAPS_LOCK","BACKSPACE","TAB","Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","V","B","N","M","0","1","2","3","4","5","6","7","8","C","9","NUM_0","NUM_1","NUM_2","NUM_3","NUM_4","NUM_5","NUM_6","NUM_7","NUM_8","NUM_9","NUM_MINUS","NUM_PLUS","NUM_LOCK","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","keyList","isKeyDown","isKeyPress","isKeyUp","getScreenPosition","setWriteMode","isWriteMode","keyEvent","type","keyCode","preventDefault","char","which","charCode","String","fromCharCode","cancel","onNode","upd","dX","offsetWidth","dY","offsetHeight","onMove","offsetLeft","pageX","offsetTop","pageY","isMouseDown","isMousePress","isMouseUp","isMouseWheel","onMouseWheel","wheelDelta","detail","onMouseEvent","button","mouseUped","focus","setCursorImage","curImg","input","oncontextmenu","onselectstart","ondragstart","onmouseup","onmousemove","onkeydown","onkeyup","onkeypress","onmousewheel","TouchHandler","touchs","tapDown","tapPress","tapUp","isTapDown","isTapPress","isTapUp","getTouch","onTouchEvent","touchHandler","Layers","layersList","index","notDOM","layerName","canvas","stylePosition","shadowColor","onContext","display","setIndex","clear","clearRect","clearNode","node","setContextSettings","settings","Scene","gameStateName","canFullScreen","texture","setView","getView","setAutoDraw","toggle","drawAllNodes","setAutoClear","setGameState","gameStates","states","start","setActiveEngine","getGameState","fullScreen","tmpCanvas","tmpContext","origWidth","origHeight","fullScale","canDeactivate","cancelClear","onload","onblur","stopAll","onfocus","initCanvas","addBaseNode","addCircleNode","addLineNode","addRectNode","addSpriteNode","addTextNode","DOM","GUI","FPSManager","j2DsEngine","math","dt","sceneStartTime","sceneSkipTime","engine","getInfo","version","git","site","description","author","getFPSManager","getSceneManager","getLayerManager","getTextureManager","getAudioManager","getPaintManager","paint","getIO","getTouchIO","touch","getDOMManager","getTriggerManager","getMathManager","getGameStateManager","getViewManager","deviceManager","getErrorManager","getTimeManager","timeManager","getResourceManager","setWindow","_window","setFrameLimit","gui","createLocal","_state","end","lastTime","gameEngine","setTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame"],"mappings":"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","file":"j2ds.js","sourcesContent":[null,"/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    MathUtil.v2f = function (x, y) {\r\n        return {x: x, y: y};\r\n    };\r\n\r\n    MathUtil.v2i = function (x, y) {\r\n        return {x: (x >> 0), y: (y >> 0)};\r\n    };\r\n\r\n    MathUtil.toInt = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    MathUtil.rndColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    MathUtil.rad = function (num) {\r\n        return num * (Math.PI / 180);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.MathUtil = MathUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.MathUtil = MathUtil;\r\n    return MathUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/TextureUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TextureUtil = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    TextureUtil.prototype.createImageMap = function (width, height, callback) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            loaded: false,\r\n            width: width,\r\n            height: height\r\n        };\r\n\r\n        image.img = document.createElement('canvas');\r\n        image.context = image.img.getContext('2d');\r\n        image.img.width = image.width;\r\n        image.img.height = image.height;\r\n\r\n        callback(image.context);\r\n        image.loaded = true;\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        textureUtil.j2Ds.resources.ok('createImageMap_' + width + 'x' + height);\r\n\r\n        return image;\r\n    };\r\n\r\n    TextureUtil.prototype.loadImageMap = function (path) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            width: 0,\r\n            height: 0,\r\n            loaded: false\r\n        };\r\n\r\n        image.img = document.createElement('img');\r\n        image.crossOrigin = 'anonymous';\r\n        image.img.src = path;\r\n\r\n        image.img.addEventListener('load', function () {\r\n            image.width = image.img.width;\r\n            image.height = image.img.height;\r\n            image.loaded = true;\r\n            textureUtil.j2Ds.resources.ok(path);\r\n        });\r\n\r\n        image.img.addEventListener('error', function () {\r\n            image.width = 0;\r\n            image.height = 0;\r\n            image.loaded = false;\r\n            //textureUtil.j2Ds.resources.fail(path);\r\n        });\r\n        /* Свойства */\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return image;\r\n    };\r\n\r\n    /* -------------------- */\r\n\r\n    TextureUtil.prototype.templates = {\r\n        ellipse: function (context, size, color) { // TODO??\r\n        },\r\n        fillRect: function (context, size, color) {\r\n            context.fillStyle = color;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        strokeRect: function (context, size, color, lineWidth) {\r\n            context.strokeStyle = color;\r\n            context.lineWidth = lineWidth;\r\n            context.strokeRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientL: function (context, size, colors, isHorizontal) {\r\n            var gradient = context.createLinearGradient(0, 0, size.x, 0);\r\n            var step = 1 / colors.length;\r\n            if (!isHorizontal) {\r\n                gradient = context.createLinearGradient(0, 0, 0, size.y);\r\n            }\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientR: function (context, size, pos1, r1, pos2, r2, colors) {\r\n            var gradient = context.createRadialGradient(pos1.x, pos1.y, r1, pos2.x, pos2.y, r2);\r\n            var step = 1 / colors.length;\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextureUtil = TextureUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.TextureUtil = TextureUtil;\r\n    return TextureUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Dom', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- DOM ---------------*/\r\n    var Dom = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    Dom.prototype.id = function (id) {\r\n        return document.getElementById(id);\r\n    };\r\n\r\n    Dom.prototype.name = function (id) {\r\n        return document.getElementsByName(id)[0];\r\n    };\r\n\r\n    Dom.prototype.tag = function (id, parent) {\r\n        var finder = parent || document;\r\n        return finder.getElementsByTagName(id);\r\n    };\r\n\r\n    Dom.prototype.goURL = function (url) {\r\n        document.location.href = url;\r\n    };\r\n\r\n    Dom.prototype.reloadURL = function () {\r\n        document.location.href = document.location.href;\r\n    };\r\n\r\n    Dom.prototype.attach = function (id, parent) {\r\n        var dom = this;\r\n        this.j2Ds.events.addEvent('dom:loaded', function (parent) {\r\n            if (!parent) {\r\n                dom.tag('body')[0].appendChild(id);\r\n            } else {\r\n                dom.id(parent).appendChild(id);\r\n            }\r\n        });\r\n    };\r\n\r\n    Dom.prototype.injectJavaScript = function (code) {\r\n        code = code.toString();\r\n        code = code.replace(/[\\n\\r\\t]/g, ';');\r\n        document.location.href = 'javascript: var injectFunction = (function() {setTimeout(' + code + ', 0);}); injectFunction();';\r\n    };\r\n\r\n    Dom.prototype.callJava = function (code) {\r\n        document.location.href = 'javacall:' + code;\r\n    };\r\n\r\n    Dom.prototype.send = function (path, callback) {\r\n        var ajax = new XMLHttpRequest();\r\n        ajax.open('GET', path, true);\r\n        ajax.onreadystatechange = function () {\r\n            if (ajax.readyState == 4) {\r\n                if (ajax.status == 200) {\r\n                    callback(ajax.responseText);\r\n                }\r\n            }\r\n        };\r\n        ajax.send(null);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Dom = Dom;\r\n    if (global.j2Ds !== undefined) global.modules.core.Dom = Dom;\r\n    return Dom;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Gui', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- GUI ---------------*/\r\n    var Gui = function () {\r\n        this.nodes = {};\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Gui = Gui;\r\n    if (global.j2Ds !== undefined) global.modules.core.Gui = Gui;\r\n    return Gui;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Events', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Events = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.events = {\r\n            'scene:deactivate': [],\r\n            'scene:activate': [],\r\n\r\n            'scene:beforeInit': [],\r\n            'scene:afterInit': [],\r\n            'scene:beforeStart': [],\r\n            'scene:afterStart': [],\r\n\r\n            'engine:before': [],\r\n            'engine:after': [],\r\n\r\n            'scene:changedGameState': [],\r\n\r\n            'writeMode:keyPress': [],\r\n\r\n            'dom:loaded': []\r\n        };\r\n    };\r\n\r\n\r\n    Events.prototype.addEvent = function (eventType, callback, id) {\r\n        this.events[eventType].push({\r\n            id: id || this.j2Ds.now,\r\n            callback: callback\r\n        });\r\n        if (this.j2Ds.ready && eventType == 'dom:loaded') {\r\n            this.onEvent('dom:loaded');\r\n            return true;\r\n        }\r\n    };\r\n\r\n    Events.prototype.destroyEvent = function (eventType, id) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType][i]['id'] == id) {\r\n                events.events[eventType].splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    Events.prototype.onEvent = function (eventType, args) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType]) {\r\n                try {\r\n                    events.events[eventType][i]['callback'](args || '');\r\n                } catch (err) {\r\n                    events.j2Ds.errorManager.showError(err);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Events = Events;\r\n    if (global.j2Ds !== undefined) global.modules.core.Events = Events;\r\n    return Events;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var BaseNode = function (_j2Ds, pos, size) {\r\n        j2Ds = _j2Ds;\r\n        this.visible = true;\r\n        this.alpha = 1;\r\n        this.pos = pos;\r\n        this.size = size;\r\n        this.parent = false;\r\n        this.angle = 0;\r\n        this.layer = j2Ds.scene;\r\n        this.box = {\r\n            offset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            size: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        j2Ds.scene.nodes.push(this);\r\n    };\r\n\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.box.offset = offset;\r\n        this.box.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? j2Ds.layers.layer(layer) : j2Ds.scene;\r\n    };\r\n\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.visible = !!visible;\r\n    };\r\n\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.alpha = alpha;\r\n    };\r\n\r\n    BaseNode.prototype.getAlpha = function () {\r\n        return this.alpha;\r\n    };\r\n\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(MathUtil.v2f(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    BaseNode.prototype.setPosition = function (pos) {\r\n        if (pos) {\r\n            this.pos = MathUtil.v2f(pos.x - Math.ceil(this.size.x / 2), pos.y - Math.ceil(this.size.y / 2));\r\n        } else {\r\n            return this.pos;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.move = function (pos) {\r\n        this.pos.x += pos.x;\r\n        this.pos.y += pos.y;\r\n    };\r\n\r\n    BaseNode.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x + Math.ceil(this.size.x / 2), this.pos.y + Math.ceil(this.size.y / 2));\r\n    };\r\n\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size) {\r\n            this.size = size;\r\n        } else {\r\n            return this.size;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.size;\r\n    };\r\n\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return MathUtil.v2f(Math.abs(id.getPosition().x - this.getPosition().x), Math.abs(id.getPosition().y - this.getPosition().y));\r\n    };\r\n\r\n    BaseNode.prototype.isIntersect = function (id) {\r\n        var pos = {\r\n            x1: this.pos.x + this.box.offset.x,\r\n            x2: id.pos.x + id.box.offset.x,\r\n            y1: this.pos.y + this.box.offset.y,\r\n            y2: id.pos.y + id.box.offset.y\r\n        };\r\n\r\n        var size = {\r\n            x1: this.size.x + this.box.size.x,\r\n            x2: id.size.x + id.box.size.x,\r\n            y1: this.size.y + this.box.size.y,\r\n            y2: id.size.y + id.box.size.y\r\n        };\r\n\r\n        return (\r\n                (pos.y1 + size.y1 >= pos.y2) &&\r\n                (pos.x1 + size.x1 >= pos.x2)\r\n            ) && (\r\n                (pos.x1 < pos.x2 + size.x2) &&\r\n                (pos.y1 < pos.y2 + size.y2)\r\n            );\r\n    };\r\n\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.size.x / 2 + id.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.size.y / 2 + id.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    BaseNode.prototype.isLookScene = function () {\r\n        return !((this.pos.x > j2Ds.scene.view.pos.x + j2Ds.scene.width || this.pos.x + this.size.x < j2Ds.scene.view.pos.x)\r\n        || (this.pos.y > j2Ds.scene.view.pos.y + j2Ds.scene.height || this.pos.y + this.size.y < j2Ds.scene.view.pos.y));\r\n    };\r\n\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.angle = (this.angle % 360);\r\n        this.angle += angle;\r\n    };\r\n\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.angle = angle % 360;\r\n    };\r\n\r\n    BaseNode.prototype.getRotation = function () {\r\n        return this.angle;\r\n    };\r\n\r\n    BaseNode.prototype.rotateTo = function (_to, _t) {\r\n        _t = _t ? _t : 1;\r\n        this.setRotation((Math.atan2(\r\n                (_to.y - this.getPosition().y),\r\n                (_to.x - this.getPosition().x)\r\n            ) * (180 / Math.PI)) / _t);\r\n    };\r\n\r\n    BaseNode.prototype.isOutScene = function () {\r\n        var vector = {};\r\n\r\n        if (this.pos.x + this.size.x >= j2Ds.scene.view.pos.x + j2Ds.scene.width) {\r\n            vector.x = 1;\r\n        } else if (this.pos.x <= j2Ds.scene.view.pos.x) {\r\n            vector.x = -1;\r\n        } else {\r\n            vector.x = 0;\r\n        }\r\n\r\n        if (this.pos.y + this.size.y >= j2Ds.scene.view.pos.y + j2Ds.scene.height) {\r\n            vector.y = 1;\r\n        } else if (this.pos.y <= j2Ds.scene.view.pos.y) {\r\n            vector.y = -1;\r\n        } else {\r\n            vector.y = 0;\r\n        }\r\n\r\n        vector.all = (vector.x || vector.y);\r\n\r\n        return vector;\r\n    };\r\n\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.pos.x += speed * (Math.cos(MathUtil.rad(this.angle)));\r\n        this.pos.y += speed * (Math.sin(MathUtil.rad(this.angle)));\r\n    };\r\n\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.size.x, this.size.y);\r\n        context.stroke();\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(this.box.offset.x + this.pos.x - j2Ds.scene.view.pos.x, this.box.offset.y + this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.box.size.x + this.size.x, this.box.size.y + this.size.y);\r\n        context.stroke();\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.BaseNode = BaseNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CircleNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var CircleNode = function (_j2Ds, pos, radius, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(radius * 2, radius * 2));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.radius = radius;\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.color;\r\n\r\n            context.beginPath();\r\n            context.arc(this.pos.x - j2Ds.scene.view.pos.x + this.radius,\r\n                this.pos.y - j2Ds.scene.view.pos.y + this.radius,\r\n                this.radius, 0, 2 * Math.PI, true);\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.CircleNode = CircleNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.CircleNode = CircleNode;\r\n    return CircleNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/LineNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var LineNode = function (_j2Ds, pos, points, scale, color, width, fill, cFill) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.points = points;\r\n        this.fill = fill || false;\r\n        this.scale = scale || 0;\r\n        this.cFill = cFill;\r\n        this.lineWidth = width;\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.strokeStyle = this.color;\r\n            context.lineWidth = this.lineWidth;\r\n\r\n            context.beginPath();\r\n            context.moveTo(this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y);\r\n\r\n            for (var i = 0, len = this.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.pos.x + this.points[i][0] * this.scale - j2Ds.scene.view.pos.x,\r\n                    this.pos.y + this.points[i][1] * this.scale - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.fill) {\r\n                context.fillStyle = this.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.LineNode = LineNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.LineNode = LineNode;\r\n    return LineNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/RectNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @param _j2Ds\r\n     * @param pos\r\n     * @param size\r\n     * @param color\r\n     * @constructor\r\n     */\r\n    var RectNode = function (_j2Ds, pos, size, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.color = color;\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    RectNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.RectNode = RectNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.RectNode = RectNode;\r\n    return RectNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/SpriteNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var SpriteNode = function (_j2Ds, pos, size, animation) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.tmpSpeed = 0;\r\n        this.frame = 0;\r\n        this.animation = animation;\r\n        this.flip = {x: false, y: false};\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.flip = {x: x, y: y};\r\n    };\r\n\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.frame > this.animation.frameCount) {\r\n                this.frame = 0;\r\n            }\r\n            this.drawFrame(this.frame + 1);\r\n\r\n            if (this.tmpSpeed > speed) {\r\n                this.frame += 1;\r\n                this.tmpSpeed = 0;\r\n            }\r\n            else {\r\n                this.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    // отрисовка одного кадра\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        if (!this.animation.imageMap.loaded) return (err.show('Invalid ImageMap', 'red'));\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.scale(this.flip.x ? -1 : 1, this.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.animation.imageMap.img,\r\n                (this.animation.sourceX + (this.animation.sourceW * frame)), this.animation.sourceY,\r\n                this.animation.sourceW, this.animation.sourceH,\r\n                this.pos.x - j2Ds.scene.view.pos.x, this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    SpriteNode.prototype.setAnimation = function (id) {\r\n        if (this.animation != id) {\r\n            this.animation = id;\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.SpriteNode = SpriteNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.SpriteNode = SpriteNode;\r\n    return SpriteNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/TextNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var TextNode = function (_j2Ds, pos, text, sizePx, color, family, width, colorL) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n\r\n        this.vAlign = 'top';\r\n        this.hAlign = 'left';\r\n        this.color = color ? color : 'black';\r\n\r\n        this.family = family ? family : 'serif';\r\n        this.sizePx = sizePx ? sizePx : 20;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        this.lineWidth = width ? width : 0;\r\n        this.colorL = colorL ? colorL : 'black';\r\n\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype = Object.create(BaseNode.prototype);\r\n    TextNode.prototype.constructor = TextNode;\r\n\r\n    TextNode.prototype.setSize = function (sizePx) {\r\n        this.sizePx = sizePx;\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.getSize = function () {\r\n        return this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.drawSimpleText = function (text, pos, color, colorL) {\r\n        var context = this.layer.context;\r\n        context.fillStyle = color ? color : this.color;\r\n        context.textAlign = this.hAlign;\r\n        context.textBaseline = this.vAlign;\r\n        context.font = this.font;\r\n        context.lineWidth = this.lineWidth;\r\n        context.strokeStyle = colorL ? colorL : this.colorL;\r\n\r\n        var lines = text.split(\"\\n\");\r\n\r\n        pos = pos ? pos : this.pos;\r\n\r\n        if (this.alpha != 1) {\r\n            var tmpAlpha = context.globalAlpha;\r\n            context.globalAlpha = this.alpha;\r\n        }\r\n\r\n        for (var i = 0, len = lines.length; i < len; i += 1) {\r\n            if (this.lineWidth) {\r\n                context.strokeText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n            }\r\n            context.fillText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n        }\r\n\r\n        if (this.alpha != 1) {\r\n            context.globalAlpha = tmpAlpha;\r\n        }\r\n\r\n        context.lineWidth = 0;\r\n        context.strokeStyle = 'black';\r\n    };\r\n\r\n    TextNode.prototype.getText = function () {\r\n        return this.fullText;\r\n    };\r\n\r\n    TextNode.prototype.setText = function (text) {\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.textAlign = this.hAlign;\r\n            context.textBaseline = this.vAlign;\r\n            context.font = this.font;\r\n            context.lineWidth = this.lineWidth;\r\n            context.strokeStyle = this.colorL;\r\n\r\n            for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n                if (this.lineWidth) {\r\n                    context.strokeText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n                }\r\n                context.fillText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.strokeStyle = 'black';\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextNode = TextNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.TextNode = TextNode;\r\n    return TextNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/DeviceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var DeviceManager = function () {\r\n        return {\r\n            width: (parseInt(document.documentElement.clientWidth) < parseInt(screen.width))\r\n                ? parseInt(document.documentElement.clientWidth)\r\n                : parseInt(screen.width),\r\n            height: (parseInt(document.documentElement.clientHeight) < parseInt(screen.height))\r\n                ? parseInt(document.documentElement.clientHeight)\r\n                : parseInt(screen.height)\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.DeviceManager = DeviceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.DeviceManager = DeviceManager;\r\n    return DeviceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ErrorManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ErrorManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.mode = 'neverShow'; // values: onlyShow|stopAndShow|neverShow\r\n        this.enabled = false;\r\n    };\r\n\r\n    ErrorManager.prototype.init = function (_true) {\r\n        var errorManager = this;\r\n        errorManager.enabled = _true || true;\r\n\r\n        var runBtn = document.createElement('div');\r\n        runBtn.innerHTML = '<b>RUN</b>';\r\n        runBtn.style.padding = '5px';\r\n        runBtn.align = 'center';\r\n        runBtn.style.position = 'fixed';\r\n        runBtn.style.zIndex = 20000;\r\n        runBtn.style.left = '0px';\r\n        runBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        runBtn.style.fontSize = '8pt';\r\n        runBtn.style.backgroundColor = '#B8FFB8';\r\n        runBtn.style.height = '12px';\r\n        runBtn.style.width = '50px';\r\n        runBtn.style.cursor = 'pointer';\r\n\r\n        runBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        runBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение продолжено');\r\n            errorManager.j2Ds.runEngine(errorManager.j2Ds);\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(runBtn);\r\n        errorManager.logListener.elems.push(runBtn);\r\n\r\n\r\n        var pauseBtn = document.createElement('div');\r\n        pauseBtn.innerHTML = '<b>PAUSE</b>';\r\n        pauseBtn.style.padding = '5px';\r\n        pauseBtn.align = 'center';\r\n        pauseBtn.style.position = 'fixed';\r\n        pauseBtn.style.zIndex = 20000;\r\n        pauseBtn.style.left = '60px';\r\n        pauseBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        pauseBtn.style.fontSize = '8pt';\r\n        pauseBtn.style.backgroundColor = '#FFFFBD';\r\n        pauseBtn.style.height = '12px';\r\n        pauseBtn.style.width = '50px';\r\n        pauseBtn.style.cursor = 'pointer';\r\n\r\n        pauseBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        pauseBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение приостановлено');\r\n            errorManager.j2Ds.stopEngine();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(pauseBtn);\r\n        errorManager.logListener.elems.push(pauseBtn);\r\n\r\n        var reloadBtn = document.createElement('div');\r\n        reloadBtn.innerHTML = '<b>RELOAD</b>';\r\n        reloadBtn.style.padding = '5px';\r\n        reloadBtn.align = 'center';\r\n        reloadBtn.style.position = 'fixed';\r\n        reloadBtn.style.zIndex = 20000;\r\n        reloadBtn.style.left = '120px';\r\n        reloadBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        reloadBtn.style.fontSize = '8pt';\r\n        reloadBtn.style.backgroundColor = '#E2E2E2';\r\n        reloadBtn.style.color = 'black';\r\n        reloadBtn.style.height = '12px';\r\n        reloadBtn.style.width = '50px';\r\n        reloadBtn.style.cursor = 'pointer';\r\n\r\n        reloadBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        reloadBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.j2Ds.dom.reloadURL();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(reloadBtn);\r\n        errorManager.logListener.elems.push(reloadBtn);\r\n\r\n        errorManager.j2Ds.events.addEvent('dom:loaded', function () {\r\n            errorManager.j2Ds.window.onerror = function (e) {\r\n                errorManager.show(e);\r\n            };\r\n        });\r\n    };\r\n\r\n    ErrorManager.prototype.show = function (string) {\r\n        console.log('[j2Ds]: ' + string);\r\n    };\r\n\r\n    ErrorManager.prototype.setMode = function (mode) {\r\n        this.mode = mode;\r\n        if (mode == 'neverShow') {\r\n            this.enabled = false;\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.debug = function (string) {\r\n        if (!this.enabled) return;\r\n        this.j2Ds.stopEngine();\r\n        if (this.mode != 'neverShow') {\r\n            this.show(string || 'Точка останова достигнута');\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.showError = function (err, _func) {\r\n        if (this.mode == 'neverShow') return;\r\n\r\n        var stack = err.stack.toString();\r\n        stack = stack.split(/\\n/);\r\n\r\n        for (var i = 0, len = stack.length; i < len; i += 1) {\r\n            if (stack[i].match(/\\:\\d/)) {\r\n                stack = stack[i].split(/\\s/);\r\n                break;\r\n            }\r\n        }\r\n\r\n        stack = stack[stack.length - 1];\r\n        stack = stack.replace(/([\\(\\)]|[\\w]+:\\/\\/)/g, '');\r\n        var file = stack.split(':'),\r\n            line = file[1],\r\n            number = file[2];\r\n        file = decodeURI(file[0]);\r\n\r\n        if (file.match(/(<anonymous>|\\bj2Ds.js)/)) {\r\n            file = '<Функция-аргумент или строка>';\r\n        }\r\n\r\n        var errMess = 'Тип ошибки: \"' + err.name + '\"' +\r\n            '\\nСообщение: \"' + err.message + '\"' +\r\n            '\\nФайл с ошибкой: \"' + file + '\"' +\r\n            '\\nСтрока: ' + line +\r\n            ', символ: ' + number;\r\n\r\n        if (_func) {\r\n            errMess += '\\nОшибка в теле функции: \\n' + _func.toString();\r\n        }\r\n\r\n        this.show(errMess);\r\n\r\n        if (this.mode == 'stopAndShow') {\r\n            this.j2Ds.stopEngine();\r\n            this.show('Выполнение приостановлено');\r\n        }\r\n\r\n    };\r\n\r\n    ErrorManager.prototype.logListener = {\r\n        domId: '',\r\n        count: 0,\r\n        execLine: '',\r\n        elems: []\r\n    };\r\n\r\n    ErrorManager.prototype.lightSyntax = function (_code, _type) {\r\n        var code = ('' + _code).toString();\r\n\r\n        if (_type == 'boolean') {\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        } else if (_type == 'code') {\r\n            code = code.replace(/(this|var|typeof|new|return|if|else|for|in|while|break|do|continue|switch|case)([^a-z0-9\\$_])/gi,\r\n                '<span style=\"color: #FFC0CB;\"><b>$1</b></span>$2')\r\n                .replace(/(function|object)/gi,\r\n                    '<span style=\"color: #FFA500;\">$1</span>')\r\n                .replace(/(width|height|window|document|scene|j2Ds|value)/gi,\r\n                    '<span style=\"color: #59B5C0;\">$1</span>')\r\n                .replace(/([a-z\\_\\$][a-z0-9_]*)\\(/gi, '<span style=\"color: #FFCD70;\">$1</span>(')\r\n                .replace(/(\\{|\\}|\\]|\\[|\\|)/gi, '<span style=\"color: #FFFF00;\">$1</span>')\r\n                .replace(/('.*?')/g, '<span style=\"color: #8FFF8F;\">$1</span>')\r\n                .replace(/(#[a-z0-9]{3,8};)/, '<b style=\"color: red;\">$1</b>')\r\n                .replace(/(\\t)/g, '&nbsp;&nbsp;');\r\n\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        }\r\n\r\n        return code;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ErrorManager = ErrorManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ErrorManager = ErrorManager;\r\n    return ErrorManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/FpsManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var FpsManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.fps = this.j2Ds.frameLimit;\r\n        this.tmp_of_fps = 1;\r\n        this.tmp_of_time = Date.now();\r\n    };\r\n\r\n    FpsManager.prototype.init = function () {\r\n        var fpsManager = this;\r\n        fpsManager.enabled = true;\r\n\r\n        this.j2Ds.events.addEvent('engine:after', function () {\r\n            fpsManager.update();\r\n        });\r\n\r\n    };\r\n\r\n    FpsManager.prototype.update = function () {\r\n        if (!this.enabled) return;\r\n        this.tmp_of_fps += 1;\r\n        if (this.j2Ds.now - this.tmp_of_time >= 1000) {\r\n            this.fps = this.tmp_of_fps;\r\n            this.tmp_of_fps = 1;\r\n            this.tmp_of_time = this.j2Ds.now;\r\n        }\r\n    };\r\n\r\n    FpsManager.prototype.getFPS = function () {\r\n        return this.fps <= this.j2Ds.frameLimit ? this.fps : this.j2Ds.frameLimit;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.FpsManager = FpsManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.FpsManager = FpsManager;\r\n    return FpsManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ResourceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ResourceManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.added = 0;\r\n        this.loaded = 0;\r\n        this.failed = 0;\r\n\r\n        this.add = function () {\r\n            this.added += 1;\r\n        };\r\n\r\n        this.ok = function (file) {\r\n            this.loaded += 1;\r\n            this.j2Ds.errorManager.show('loaded: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.fail = function (file) {\r\n            this.failed += 1;\r\n            this.j2Ds.errorManager.show('error load: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.show = function () {\r\n            return {'added': this.added, 'loaded': this.loaded, 'failed': this.failed};\r\n        };\r\n\r\n        this.isLoaded = function () {\r\n            return this.added == this.loaded;\r\n        };\r\n\r\n        this.getProgress = function () {\r\n            return Math.ceil(this.loaded / this.added * 100);\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ResourceManager = ResourceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ResourceManager = ResourceManager;\r\n    return ResourceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/StorageManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var StorageManager = function (j2Ds, id) {\r\n        this.j2Ds = j2Ds;\r\n        this.id = id;\r\n        this.ls = this.j2Ds.window.localStorage ? this.j2Ds.window.localStorage : false;\r\n        if (!this.ls) alert('j2Ds ERROR in \"createLocal(' + id + ')\" \\n' + 'Объект \"localStorage\" не поддерживается.');\r\n    };\r\n\r\n    StorageManager.prototype.saveNode = function (name, o) {\r\n        if (!this.ls) return false;\r\n        this.ls.setItem(this.id + name, JSON.stringify(o));\r\n    };\r\n\r\n    StorageManager.prototype.load = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return this.ls.getItem(this.id + name);\r\n    };\r\n\r\n    StorageManager.prototype.is = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return !!(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    StorageManager.prototype.save = function (name, value) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        this.ls.setItem(this.id + name, value);\r\n    };\r\n\r\n    StorageManager.prototype.loadNode = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return JSON.parse(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.StorageManager = StorageManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.StorageManager = StorageManager;\r\n    return StorageManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TimeManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TimeManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.times = {};\r\n\r\n        this.insert = function (id) {\r\n            if (!this.times[id]) {\r\n                this.times[id] = this.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        this.get = function (id) {\r\n            return this.times[id];\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TimeManager = TimeManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TimeManager = TimeManager;\r\n    return TimeManager;\r\n}));\r\n\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TriggerManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TriggerManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.enabled = false;\r\n        this.triggers = {};\r\n    };\r\n\r\n    TriggerManager.prototype.add = function (id, callback) {\r\n        var triggerManager = this;\r\n        var trigger = {\r\n            command: callback,\r\n            count: 0,\r\n            state: 'stop',\r\n            last: false\r\n        };\r\n\r\n        trigger.run = function (mSec) {\r\n            if (this.state == 'job') {\r\n                this.command();\r\n                return;\r\n            }\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'job';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.job = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec && this.state != 'run') {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.loop = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.reset = function () {\r\n            this.count = 0;\r\n            this.state = 'stop';\r\n            this.last = false;\r\n        };\r\n\r\n        this.triggers[id] = trigger;\r\n        return trigger;\r\n    };\r\n\r\n    TriggerManager.prototype.get = function (id) {\r\n        return this.triggers[id];\r\n    };\r\n\r\n    TriggerManager.prototype.init = function () {\r\n        this.enabled = true;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TriggerManager = TriggerManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TriggerManager = TriggerManager;\r\n    return TriggerManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ViewManager', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var ViewManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.views = {};\r\n    };\r\n\r\n    ViewManager.prototype.add = function (id, pos) {\r\n        var viewManager = this;\r\n        var viewport = {\r\n            focusNode: false\r\n        };\r\n\r\n        viewport.pos = pos ? MathUtil.v2f(pos.x, pos.y) : MathUtil.v2f(0, 0);\r\n\r\n        viewport.setPosition = function (pos) {\r\n            if (!pos) return this;\r\n            this.pos = MathUtil.v2f(pos.x - viewManager.j2Ds.scene.width / 2, pos.y - viewManager.j2Ds.scene.height / 2);\r\n        };\r\n\r\n        viewport.getPosition = function () {\r\n            return this.pos;\r\n        };\r\n\r\n        viewport.move = function (pos) {\r\n            this.pos.x += pos.x;\r\n            this.pos.y += pos.y;\r\n        };\r\n\r\n        viewManager.j2Ds.viewManager.views[id] = viewport;\r\n        return viewport;\r\n    };\r\n\r\n    ViewManager.prototype.get = function (id) {\r\n        return this.j2Ds.viewManager.views[id];\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ViewManager = ViewManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ViewManager = ViewManager;\r\n    return ViewManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/AudioHandler', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var AudioHandler = function () {\r\n        this.audios = {};\r\n        this.enabled = false\r\n    };\r\n\r\n    AudioHandler.prototype.init = function () {\r\n        var audioHandler = this;\r\n        this.enabled = true;\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:deactivate', function () {\r\n            audioHandler.deactivate();\r\n        });\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:activate', function () {\r\n            audioHandler.activate();\r\n        });\r\n\r\n    };\r\n\r\n    AudioHandler.prototype.load = function (id, files, vol) {\r\n        var audioHandler = this;\r\n        audioHandler.j2Ds.resources.add();\r\n        var audio = document.createElement('audio');\r\n\r\n        for (var i = 0, len = files.length; i < len; i += 1) {\r\n            var source = document.createElement('source');\r\n            source.src = files[i];\r\n            audio.appendChild(source);\r\n        }\r\n\r\n        audio.id = 'audio_' + id;\r\n\r\n        if (vol) {\r\n            audio.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n        }\r\n\r\n        var sound = {\r\n            id: id,\r\n            files: files,\r\n            domEl: audio, // DOMElement\r\n            ready: false,\r\n            len: 0,\r\n            state: 'stop',\r\n            lock: false,\r\n            volume: audio.volume,\r\n            onePlay: false\r\n        };\r\n\r\n        sound.domEl.addEventListener('loadeddata', function (e) {\r\n            sound.ready = true;\r\n            var file = e.explicitOriginalTarget || e.path[0];\r\n            audioHandler.j2Ds.resources.ok(file.currentSrc);\r\n        });\r\n\r\n        sound.domEl.addEventListener('error', function (e) {\r\n            sound.setLock(true);\r\n            //var file = e.srcElement || e.target;\r\n            //audioHandler.j2Ds.resources.fail(file.src);\r\n        });\r\n\r\n        sound.domEl.addEventListener('ended', function () {\r\n            sound.state = 'stop';\r\n        });\r\n\r\n        sound.play = function (unlock) {\r\n            if (unlock) {\r\n                this.setLock(false);\r\n            }\r\n            if (this.lock) return;\r\n            if (this.state == 'play') {\r\n                this.domEl.currentTime = 0;\r\n            }\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.loop = function () {\r\n            if (this.lock) return;\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.pause = function (lock) {\r\n            if (this.state == 'play') {\r\n                this.setLock(lock);\r\n                this.domEl.pause();\r\n                this.state = 'pause';\r\n            }\r\n        };\r\n\r\n        sound.stop = function (lock) {\r\n            this.domEl.pause();\r\n            this.domEl.currentTime = 0;\r\n            this.state = 'stop';\r\n            if (lock) {\r\n                this.setLock(lock);\r\n            }\r\n        };\r\n\r\n        sound.setLock = function (lock) {\r\n            this.lock = lock ? true : false;\r\n        };\r\n\r\n        sound.setVolume = function (vol) {\r\n            this.domEl.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n            this.volume = this.domEl.volume;\r\n        };\r\n\r\n        sound.getVolume = function (id) {\r\n            return this.volume;\r\n        };\r\n\r\n        sound.getState = function (id) {\r\n            return this.state;\r\n        };\r\n\r\n        sound.getPlayPosition = function () {\r\n            return this.domEl.currentTime;\r\n        };\r\n\r\n        sound.domEl.load();\r\n\r\n        this.audios[id] = sound;\r\n        return sound;\r\n    };\r\n\r\n    AudioHandler.prototype.get = function (id) {\r\n        return this.audios[id];\r\n    };\r\n\r\n    AudioHandler.prototype.pause = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].pause(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.stop = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].stop(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.play = function (unlock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].play(unlock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.deactivate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'play') {\r\n                this.audios[snd].pause();\r\n                this.audios[snd].state = 'deactivated';\r\n            }\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.activate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'deactivated') {\r\n                this.audios[snd].play();\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.AudioHandler = AudioHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.AudioHandler = AudioHandler;\r\n    return AudioHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var InputHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.pos = {x: 0, y: 0};\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.keyDown = [];\r\n        this.keyPress = [];\r\n        this.keyPressed = [];\r\n        this.keyUp = [];\r\n        this.keyUped = false;\r\n        this.mouseDown = [];\r\n        this.mousePress = [];\r\n        this.mousePressed = [];\r\n        this.mouseUp = [];\r\n        this.mouseUpped = false;\r\n        this.mouseWheel = 0;\r\n        this.canceled = false;\r\n        this.body = false;\r\n        this.anyKey = false;\r\n        this.anyMouse = false;\r\n        this.writeMode = false;\r\n        this.displayCursor = '';\r\n        this.visible = true;\r\n        this.enabled = false;\r\n    };\r\n\r\n    InputHandler.prototype.mKey = {\r\n        'LEFT': 1,\r\n        'MIDDLE': 2,\r\n        'RIGHT': 3\r\n    };\r\n\r\n    InputHandler.prototype.jKey = {\r\n        'LEFT': 37,\r\n        'RIGHT': 39,\r\n        'UP': 38,\r\n        'DOWN': 40,\r\n        'SPACE': 32,\r\n        'CTRL': 17,\r\n        'SHIFT': 16,\r\n        'ALT': 18,\r\n        'ESC': 27,\r\n        'ENTER': 13,\r\n        'MINUS': 189,\r\n        'PLUS': 187,\r\n        'CAPS_LOCK': 20,\r\n        'BACKSPACE': 8,\r\n        'TAB': 9,\r\n        'Q': 81,\r\n        'W': 87,\r\n        'E': 69,\r\n        'R': 82,\r\n        'T': 84,\r\n        'Y': 89,\r\n        'U': 85,\r\n        'I': 73,\r\n        'O': 79,\r\n        'P': 80,\r\n        'A': 65,\r\n        'S': 83,\r\n        'D': 68,\r\n        'F': 70,\r\n        'G': 71,\r\n        'H': 72,\r\n        'J': 74,\r\n        'K': 75,\r\n        'L': 76,\r\n        'Z': 90,\r\n        'X': 88,\r\n        'V': 86,\r\n        'B': 66,\r\n        'N': 78,\r\n        'M': 77,\r\n        '0': 48,\r\n        '1': 49,\r\n        '2': 50,\r\n        '3': 51,\r\n        '4': 52,\r\n        '5': 53,\r\n        '6': 54,\r\n        '7': 55,\r\n        '8': 56,\r\n        'C': 67,\r\n        '9': 57,\r\n        'NUM_0': 45,\r\n        'NUM_1': 35,\r\n        'NUM_2': 40,\r\n        'NUM_3': 34,\r\n        'NUM_4': 37,\r\n        'NUM_5': 12,\r\n        'NUM_6': 39,\r\n        'NUM_7': 36,\r\n        'NUM_8': 38,\r\n        'NUM_9': 33,\r\n        'NUM_MINUS': 109,\r\n        'NUM_PLUS': 107,\r\n        'NUM_LOCK': 144,\r\n        'F1': 112,\r\n        'F2': 113,\r\n        'F3': 114,\r\n        'F4': 115,\r\n        'F5': 116,\r\n        'F6': 117,\r\n        'F7': 118,\r\n        'F8': 119,\r\n        'F9': 120,\r\n        'F10': 121,\r\n        'F11': 122,\r\n        'F12': 123\r\n    };\r\n\r\n    InputHandler.prototype.keyList = function () {\r\n        var o = [];\r\n        for (var i in this.jKey) {\r\n            o.push(i);\r\n        }\r\n        return o;\r\n    };\r\n\r\n    InputHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n        this.keyPress = [];\r\n        this.keyUp = [];\r\n        this.mousePress = [];\r\n        this.mouseUp = [];\r\n        this.mouseWheel = 0;\r\n    };\r\n\r\n    InputHandler.prototype.isKeyDown = function (code) {\r\n        return this.keyDown[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyPress = function (code) {\r\n        return this.keyPress[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyUp = function (code) {\r\n        return this.keyUp[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    InputHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    InputHandler.prototype.setWriteMode = function (_true) {\r\n        this.writeMode = _true;\r\n    };\r\n\r\n    InputHandler.prototype.isWriteMode = function () {\r\n        return this.writeMode;\r\n    };\r\n\r\n    InputHandler.prototype.keyEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        if (e.type == 'keydown') {\r\n            if (!this.keyPressed[e.keyCode]) {\r\n                this.keyPress[e.keyCode] = true;\r\n                this.keyPressed[e.keyCode] = true;\r\n            }\r\n            if (!this.writeMode) {\r\n                e.preventDefault();\r\n            } else {\r\n                this.j2Ds.events.onEvent('writeMode:keyPress', '');\r\n            }\r\n        } else if (e.type == 'keyup') {\r\n            if (this.keyPressed[e.keyCode]) {\r\n                e.preventDefault();\r\n                this.keyPress[e.keyCode] = false;\r\n                this.keyPressed[e.keyCode] = false;\r\n                this.keyUp[e.keyCode] = true;\r\n                this.keyUped = true;\r\n            }\r\n        } else if (e.type == 'keypress' && (this.writeMode)) {\r\n            var char = '';\r\n            if (e.which != 0 && e.charCode != 0) {\r\n                if (e.which >= 32) {\r\n                    char = String.fromCharCode(e.which);\r\n                }\r\n            }\r\n            this.j2Ds.events.onEvent('writeMode:keyPress', char);\r\n        }\r\n\r\n        this.keyDown[e.keyCode] = (e.type == 'keydown') && (!this.canceled);\r\n        this.anyKey = e.keyCode;\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.cancel = function (id) {\r\n        if (!id) {\r\n            this.canceled = true;\r\n            this.keyDown = [];\r\n            this.mouseDown = [];\r\n        }\r\n        else {\r\n            this.keyDown[this.jKey[id]] = false;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.onNode = function (id) {\r\n        if (!id.layer.visible) return false;\r\n        return (this.pos.x > id.pos.x && this.pos.x < id.pos.x + id.size.x) &&\r\n            (this.pos.y > id.pos.y && this.pos.y < id.pos.y + id.size.y);\r\n    };\r\n\r\n    InputHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n        this.x = (this.screenPos.x / dX);\r\n        this.y = (this.screenPos.y / dY);\r\n        this.pos.x = this.j2Ds.scene.view.pos.x + this.x;\r\n        this.pos.y = this.j2Ds.scene.view.pos.y + this.y;\r\n    };\r\n\r\n    InputHandler.prototype.onMove = function (e) {\r\n        this.screenPos.x = -this.j2Ds.scene.offsetLeft + e.pageX;\r\n        this.screenPos.y = -this.j2Ds.scene.offsetTop + e.pageY;\r\n    };\r\n\r\n    InputHandler.prototype.isMouseDown = function (code) {\r\n        return this.mouseDown[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMousePress = function (code) {\r\n        return this.mousePress[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseUp = function (code) {\r\n        return this.mouseUp[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseWheel = function (code) {\r\n        return (code == 'UP' && this.mouseWheel > 0) ||\r\n            (code == 'DOWN' && this.mouseWheel < 0)\r\n    };\r\n\r\n    InputHandler.prototype.onMouseWheel = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        this.mouseWheel = ((e.wheelDelta) ? e.wheelDelta : -e.detail);\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.onMouseEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        if (!e.which && e.button) {\r\n            if (e.button & 1) e.which = 1;\r\n            else if (e.button & 4) e.which = 2;\r\n            else if (e.button & 2) e.which = 3;\r\n        }\r\n\r\n        if (e.type == 'mousedown') {\r\n            if (!this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = true;\r\n                this.mousePressed[e.which] = true;\r\n            }\r\n        } else if (e.type == 'mouseup') {\r\n            if (this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = false;\r\n                this.mousePressed[e.which] = false;\r\n                this.mouseUp[e.which] = true;\r\n                this.mouseUped = true;\r\n            }\r\n        }\r\n\r\n        this.mouseDown[e.which] = (e.type == 'mousedown') && (!this.canceled);\r\n\r\n        this.j2Ds.window.focus();\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.setCursorImage = function (curImg) {\r\n        this.j2Ds.dom.tag('body')[0].style.cursor = 'url(\"' + curImg + '\"), auto';\r\n    };\r\n\r\n    InputHandler.prototype.setVisible = function (_true) {\r\n        this.visible = _true;\r\n        if (!_true) {\r\n            this.displayCursor = this.j2Ds.dom.tag('body')[0].style.cursor;\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = 'none';\r\n        } else {\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = this.displayCursor;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    InputHandler.prototype.init = function () {\r\n        var input = this;\r\n        input.enabled = true;\r\n\r\n        input.j2Ds.events.addEvent('engine:before', function () {\r\n            input.upd();\r\n        });\r\n\r\n        input.j2Ds.events.addEvent('engine:after', function () {\r\n            input.reset();\r\n        });\r\n\r\n\r\n        input.j2Ds.events.addEvent('dom:loaded', function () {\r\n            input.j2Ds.window.oncontextmenu = function () {\r\n                return false;\r\n            };\r\n            input.j2Ds.window.onselectstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.ondragstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.onmousedown = input.onMouseEvent;\r\n            input.j2Ds.window.onmouseup = function (e) {\r\n                input.canceled = false;\r\n                input.onMouseEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousemove = function (e) {\r\n                input.onMove(e);\r\n            };\r\n            input.j2Ds.window.onkeydown = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeyup = function (e) {\r\n                input.canceled = false;\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeypress = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousewheel = function (e) {\r\n                input.onMouseWheel(e);\r\n            };\r\n\r\n            if (input.j2Ds.window.addEventListener) {\r\n                input.j2Ds.window.addEventListener(\"DOMMouseScroll\", function (e) {\r\n                    input.onMouseWheel(e);\r\n                }, false);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.InputHandler = InputHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.InputHandler = InputHandler;\r\n    return InputHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/TouchHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var TouchHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.pos = {x: 0, y: 0};\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.canceled = false;\r\n        this.touchs = [];\r\n        this.tapDown = false;\r\n        this.tapPress = false;\r\n        this.tapUp = false;\r\n        this.body = false;\r\n    };\r\n\r\n    TouchHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.cancel = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.isTapDown = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapPress = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapUp = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.getTouch = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.onTouchEvent = function () {\r\n        if (!this.enabled) return false;\r\n\r\n    };\r\n\r\n\r\n    TouchHandler.prototype.init = function () {\r\n        var touchHandler = this;\r\n        touchHandler.enabled = true;\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:before', function () {\r\n            touchHandler.upd();\r\n        });\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:after', function () {\r\n            touchHandler.reset();\r\n        });\r\n\r\n\r\n        touchHandler.j2Ds.events.addEvent('dom:loaded', function () {\r\n\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TouchHandler = TouchHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.TouchHandler = TouchHandler;\r\n    return TouchHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Layers', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Layers = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.layersList = {};\r\n    };\r\n\r\n    Layers.prototype.layer = function (id) {\r\n        return this.layersList[id];\r\n    };\r\n\r\n    Layers.prototype.add = function (id, index, notDOM) {\r\n        if (!!this.layersList[id]) return false;\r\n\r\n        var layer = {\r\n            layerName: id\r\n        };\r\n\r\n        if (!notDOM) {\r\n            layer.canvas = document.createElement('canvas');\r\n        } else {\r\n            layer.canvas = this.j2Ds.dom.id(id);\r\n        }\r\n\r\n        layer.canvas.style.position = this.j2Ds.scene.stylePosition;\r\n\r\n        layer.canvas.id = id;\r\n\r\n        layer.canvas.style.zIndex = 1000 + index;\r\n        layer.canvas.style.left = this.j2Ds.scene.offsetLeft + 'px';\r\n        layer.canvas.style.top = this.j2Ds.scene.offsetTop + 'px';\r\n\r\n        layer.canvas.width = this.j2Ds.scene.width;\r\n        layer.canvas.height = this.j2Ds.scene.height;\r\n        layer.width = this.j2Ds.scene.width;\r\n        layer.height = this.j2Ds.scene.height;\r\n        layer.context = layer.canvas.getContext('2d');\r\n        layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n        layer.alpha = 1;\r\n        layer.angle = 0;\r\n        layer.visible = 1;\r\n\r\n        layer.onContext = function (callback) {\r\n            callback(this.context);\r\n        };\r\n\r\n        layer.fill = function (color) {\r\n            this.context.fillStyle = color;\r\n            this.context.fillRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.setAlpha = function (alpha) {\r\n            this.canvas.style.opacity = alpha;\r\n            this.alpha = alpha;\r\n        };\r\n\r\n        layer.getAlpha = function () {\r\n            return this.alpha;\r\n        };\r\n\r\n        layer.setVisible = function (visible) {\r\n            if (visible) {\r\n                this.canvas.style.display = 'block';\r\n                this.visible = true;\r\n            } else {\r\n                this.canvas.style.display = 'none';\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        layer.isVisible = function () {\r\n            return this.visible;\r\n        };\r\n\r\n        layer.setIndex = function (index) {\r\n            this.canvas.style.zIndex = 1000 + index;\r\n        };\r\n\r\n        layer.clear = function () {\r\n            this.context.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.clearNode = function (node) {\r\n            var layer = this;\r\n            if (node.isLookScene()) {\r\n                this.context.clearRect(\r\n                    node.pos.x - layer.j2Ds.scene.view.pos.x,\r\n                    node.pos.y - layer.j2Ds.scene.view.pos.y,\r\n                    node.size.x,\r\n                    node.size.y\r\n                );\r\n            }\r\n        };\r\n\r\n        layer.setContextSettings = function (settings) {\r\n            for (var i in settings) {\r\n                if (typeof this.context[i] !== 'undefined') {\r\n                    this.context[i] = settings[i];\r\n                }\r\n            }\r\n        };\r\n\r\n        layer.clearRect = function (pos, size) {\r\n            var layer = this;\r\n            this.context.clearRect(pos.x - layer.j2Ds.scene.view.pos.x, pos.y - layer.j2Ds.scene.view.pos.y, size.x, size.y);\r\n        };\r\n\r\n        this.layersList[id] = layer;\r\n\r\n        if (!notDOM) {\r\n            this.j2Ds.dom.attach(this.layersList[id].canvas);\r\n        }\r\n\r\n        return layer;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Layers = Layers;\r\n    if (global.j2Ds !== undefined) global.modules.core.Layers = Layers;\r\n    return Layers;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Scene', [\r\n            'nodes/BaseNode',\r\n            'nodes/CircleNode',\r\n            'nodes/LineNode',\r\n            'nodes/RectNode',\r\n            'nodes/SpriteNode',\r\n            'nodes/TextNode',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('nodes/BaseNode'),\r\n            require('nodes/CircleNode'),\r\n            require('nodes/LineNode'),\r\n            require('nodes/RectNode'),\r\n            require('nodes/SpriteNode'),\r\n            require('nodes/TextNode'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.nodes.BaseNode,\r\n            root.modules.nodes.CircleNode,\r\n            root.modules.nodes.LineNode,\r\n            root.modules.nodes.RectNode,\r\n            root.modules.nodes.SpriteNode,\r\n            root.modules.nodes.TextNode,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (BaseNode,\r\n              CircleNode,\r\n              LineNode,\r\n              RectNode,\r\n              SpriteNode,\r\n              TextNode,\r\n              TextureUtil) {\r\n        \"use strict\";\r\n\r\n        var Scene = function (j2Ds) {\r\n            j2Ds = this.j2Ds = j2Ds;\r\n\r\n            this.nodes = [];\r\n            this.layerName = 'sceneNode';\r\n            this.stylePosition = 'fixed';\r\n            this.layers = j2Ds.layers;\r\n            this.view = false;\r\n            this.gameStateName = false;\r\n            this.canFullScreen = true;\r\n\r\n            this.texture = new TextureUtil(this.j2Ds);\r\n        };\r\n\r\n        /*функции*/\r\n\r\n        Scene.prototype.setView = function (id) {\r\n            this.view = this.j2Ds.viewManager.views[id];\r\n        };\r\n\r\n        Scene.prototype.getView = function () {\r\n            return this.view;\r\n        };\r\n\r\n        Scene.prototype.setAutoDraw = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:after', function () {\r\n                    scene.drawAllNodes();\r\n                }, 'autoDraw');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:after', 'autoDraw');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setAutoClear = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:before', function () {\r\n                    scene.clear();\r\n                }, 'autoClear');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:before', 'autoClear');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setGameState = function (name) {\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name].state) {\r\n                this.j2Ds.setActiveEngine(this.j2Ds.gameStates.states[name].state);\r\n            }\r\n            this.gameStateName = name;\r\n            this.j2Ds.events.onEvent('scene:changedGameState');\r\n        };\r\n\r\n        Scene.prototype.getGameState = function () {\r\n            return this.gameStateName;\r\n        };\r\n\r\n        Scene.prototype.start = function (name, frameLimit) {\r\n            this.j2Ds.events.onEvent('scene:beforeStart');\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name]) {\r\n                this.j2Ds.start(this.j2Ds.gameStates.states[name].state, frameLimit);\r\n            }\r\n            this.j2Ds.events.onEvent('scene:afterStart');\r\n        };\r\n\r\n        Scene.prototype.fullScreen = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            var tmpCanvas = document.createElement('canvas'); // Нужны для копирования содержимого\r\n            var tmpContext = tmpCanvas.getContext('2d');      // При изменении размера\r\n            if (_true) {\r\n                this.origWidth = this.width;\r\n                this.origHeight = this.height;\r\n                this.width = this.j2Ds.getDeviceManager().width;\r\n                this.height = this.j2Ds.getDeviceManager().height;\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i];\r\n                    tmpCanvas.width = layer.width;\r\n                    tmpCanvas.height = layer.height;\r\n                    tmpContext.drawImage(layer.canvas, 0, 0);\r\n                    layer.canvas.width = this.width;\r\n                    layer.canvas.height = this.height;\r\n                    layer.width = this.width;\r\n                    layer.height = this.height;\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n\r\n                    layer.context.drawImage(tmpCanvas, 0, 0, layer.width, layer.height);\r\n                }\r\n            } else {\r\n                this.width = this.origWidth;\r\n                this.height = this.origHeight;\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i];\r\n                    layer.width = this.origWidth;\r\n                    layer.height = this.origHeight;\r\n                    layer.canvas.width = this.origWidth;\r\n                    layer.canvas.height = this.origHeight;\r\n                    this.offsetWidth = this.origWidth;\r\n                    this.offsetHeight = this.origHeight;\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.fullScale = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            if (_true) {\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i].canvas;\r\n                    layer.style.width = this.j2Ds.getDeviceManager().width + 'px';\r\n                    layer.style.height = this.j2Ds.getDeviceManager().height + 'px';\r\n                    this.offsetWidth = this.j2Ds.getDeviceManager().width;\r\n                    this.offsetHeight = this.j2Ds.getDeviceManager().height;\r\n                }\r\n            } else {\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i].canvas;\r\n                    layer.style.width = this.width + 'px';\r\n                    layer.style.height = this.height + 'px';\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.clear = function () {\r\n            this.getLayer().clear();\r\n        };\r\n\r\n        Scene.prototype.getLayer = function () {\r\n            return this.j2Ds.layers.layer(this.layerName);\r\n        };\r\n\r\n        Scene.prototype.drawAllNodes = function () {\r\n            for (var i = 0, len = this.nodes.length; i < len; i += 1) {\r\n                if (this.nodes[i].draw) {\r\n                    this.nodes[i].draw();\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.init = function (width, height, canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = width;\r\n            scene.height = height;\r\n\r\n            scene.origWidth = width;\r\n            scene.origHeight = height;\r\n\r\n            scene.offsetWidth = width;\r\n            scene.offsetHeight = height;\r\n\r\n            scene.offsetLeft = 0;\r\n            scene.offsetTop = 0;\r\n\r\n\r\n            scene.j2Ds.canDeactivate = canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add('sceneNode', 0);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(scene.layerName).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(scene.layerName).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.layersList) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        Scene.prototype.initCanvas = function (id, canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.canFullScreen = false;\r\n\r\n            scene.layerName = id;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = parseInt(scene.j2Ds.dom.id(id).width);\r\n            scene.height = parseInt(scene.j2Ds.dom.id(id).height);\r\n\r\n            scene.origWidth = scene.width;\r\n            scene.origHeight = scene.height;\r\n\r\n            scene.offsetWidth = parseInt(scene.j2Ds.dom.id(id).offsetWidth);\r\n            scene.offsetHeight = parseInt(scene.j2Ds.dom.id(id).offsetHeight);\r\n\r\n            scene.offsetLeft = parseInt(scene.j2Ds.dom.id(id).offsetLeft);\r\n            scene.offsetTop = parseInt(scene.j2Ds.dom.id(id).offsetTop);\r\n\r\n            scene.stylePosition = scene.j2Ds.dom.id(id).style.position == 'fixed' ? 'fixed' : 'absolute';\r\n\r\n            scene.j2Ds.canDeactivate = canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add(id, 0, 1);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(id).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(id).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.layersList) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        /* Nodes */\r\n        Scene.prototype.addBaseNode = function (pos, size) {\r\n            return new BaseNode(this.j2Ds, pos, size);\r\n        };\r\n\r\n        Scene.prototype.addCircleNode = function (pos, radius, color) {\r\n            return new CircleNode(this.j2Ds, pos, radius, color);\r\n        };\r\n\r\n        Scene.prototype.addLineNode = function (pos, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.j2Ds, pos, points, scale, color, width, fill, cFill);\r\n        };\r\n\r\n        Scene.prototype.addRectNode = function (pos, size, color) {\r\n            return new RectNode(this.j2Ds, pos, size, color);\r\n        };\r\n\r\n        Scene.prototype.addSpriteNode = function (pos, size, animation) {\r\n            return new SpriteNode(this.j2Ds, pos, size, animation);\r\n        };\r\n\r\n        Scene.prototype.addTextNode = function (pos, text, sizePx, color, family, width, colorL) {\r\n            return new TextNode(this.j2Ds, pos, text, sizePx, color, family, width, colorL);\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Scene = Scene;\r\n        if (global.j2Ds !== undefined) global.modules.core.Scene = Scene;\r\n        return Scene;\r\n    }));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2Ds', [\r\n            'core/Dom',\r\n            'core/Gui',\r\n            'core/Events',\r\n            'core/Layers',\r\n            'core/Scene',\r\n\r\n            'io/AudioHandler',\r\n            'io/InputHandler',\r\n            'io/TouchHandler',\r\n\r\n            'managers/DeviceManager',\r\n            'managers/ErrorManager',\r\n            'managers/FpsManager',\r\n            'managers/ResourceManager',\r\n            'managers/StorageManager',\r\n            'managers/TimeManager',\r\n            'managers/TriggerManager',\r\n            'managers/ViewManager',\r\n\r\n            'utils/MathUtil',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('core/Dom'),\r\n            require('core/Gui'),\r\n            require('core/Events'),\r\n            require('core/Layers'),\r\n            require('core/Scene'),\r\n\r\n            require('io/AudioHandler'),\r\n            require('io/InputHandler'),\r\n            require('io/TouchHandler'),\r\n\r\n            require('managers/DeviceManager'),\r\n            require('managers/ErrorManager'),\r\n            require('managers/FpsManager'),\r\n            require('managers/ResourceManager'),\r\n            require('managers/StorageManager'),\r\n            require('managers/TimeManager'),\r\n            require('managers/TriggerManager'),\r\n            require('managers/ViewManager'),\r\n\r\n            require('utils/MathUtil'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.core.Dom,\r\n            root.modules.core.Gui,\r\n            root.modules.core.Events,\r\n            root.modules.core.Layers,\r\n            root.modules.core.Scene,\r\n\r\n            root.modules.io.AudioHandler,\r\n            root.modules.io.InputHandler,\r\n            root.modules.io.TouchHandler,\r\n\r\n            root.modules.managers.DeviceManager,\r\n            root.modules.managers.ErrorManager,\r\n            root.modules.managers.FpsManager,\r\n            root.modules.managers.ResourceManager,\r\n            root.modules.managers.StorageManager,\r\n            root.modules.managers.TimeManager,\r\n            root.modules.managers.TriggerManager,\r\n            root.modules.managers.ViewManager,\r\n\r\n            root.modules.utils.MathUtil,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (DOM,\r\n              GUI,\r\n              Events,\r\n              Layers,\r\n              Scene,\r\n              AudioHandler,\r\n              InputHandler,\r\n              TouchHandler,\r\n              DeviceManager,\r\n              ErrorManager,\r\n              FPSManager,\r\n              ResourceManager,\r\n              StorageManager,\r\n              TimeManager,\r\n              TriggerManager,\r\n              ViewManager,\r\n              MathUtil) {\r\n        \"use strict\";\r\n\r\n        var frameLimit = 60;\r\n\r\n        /*------------------ 2D движок --------------------*/\r\n        var j2DsEngine = function () {\r\n            this.vector = {}; //TODO:: is need?\r\n            this.math = {}; //TODO:: is need?\r\n            this.dom = {};\r\n            this.now = Date.now();\r\n            this.dt = 0;\r\n            this.stopAll = 0;\r\n            this.frameLimit = 60;\r\n            this.sceneStartTime = 0;\r\n            this.sceneSkipTime = 0;\r\n            this.engine = function () {\r\n                this.errorManager.show('Не инициализировано ни одно игровое состояние', 'red');\r\n                this.stopEngine();\r\n            };\r\n            this.ready = false;\r\n            this.window = window;\r\n            this.canDeactivate = true;\r\n\r\n            /* Getters & Setters */\r\n\r\n            this.getInfo = function () {\r\n                return {\r\n                    'name': 'j2Ds',\r\n                    'version': '0.6.3',\r\n                    'git': 'https://github.com/SkanerSoft/j2Ds',\r\n                    'site': 'http://j2ds.ru',\r\n                    'description': 'HTML5 2D Game Engine',\r\n                    'author': 'Skaner'\r\n                };\r\n            };\r\n\r\n            this.getFPSManager = function () {\r\n                this.fpsManager.init();\r\n                return this.fpsManager;\r\n            };\r\n\r\n            this.getSceneManager = function () {\r\n                return this.scene;\r\n            };\r\n\r\n            this.getLayerManager = function () {\r\n                return this.layers;\r\n            };\r\n\r\n            this.getTextureManager = function () {\r\n                return this.scene.texture;\r\n            };\r\n\r\n            this.getAudioManager = function () {\r\n                this.audio.init();\r\n                return this.audio;\r\n            };\r\n\r\n            this.getPaintManager = function () {\r\n                return this.paint;\r\n            };\r\n\r\n            this.getIO = function () {\r\n                this.input.init();\r\n                return this.input;\r\n            };\r\n\r\n            this.getTouchIO = function () {\r\n                this.touch.init();\r\n                return this.touch;\r\n            };\r\n\r\n            this.getDOMManager = function () {\r\n                return this.dom;\r\n            };\r\n\r\n            this.getTriggerManager = function () {\r\n                this.trigger.init();\r\n                return this.trigger;\r\n            };\r\n\r\n            this.getMathManager = function () {\r\n                return MathUtil;\r\n            };\r\n\r\n            this.getGameStateManager = function () {\r\n                return this.gameStates;\r\n            };\r\n\r\n            this.getViewManager = function () {\r\n                return this.viewManager;\r\n            };\r\n\r\n            this.getDeviceManager = function () {\r\n                return this.deviceManager;\r\n            };\r\n\r\n            this.getErrorManager = function () {\r\n                this.errorManager.init();\r\n                return this.errorManager;\r\n            };\r\n\r\n            this.getTimeManager = function () {\r\n                return this.timeManager;\r\n            };\r\n\r\n            this.getResourceManager = function () {\r\n                return this.resources;\r\n            };\r\n\r\n            this.setWindow = function (_window) {\r\n                this.window = _window ? _window : window;\r\n            };\r\n\r\n            this.setFrameLimit = function (fps) {\r\n                this.frameLimit = (fps > 0 && fps <= 60) ? fps : 60;\r\n                frameLimit = this.frameLimit;\r\n            };\r\n\r\n            this.setActiveEngine = function (engine) {\r\n                this.engine = typeof engine == 'function'\r\n                    ? engine\r\n                    : this.errorManager.show('Error in \"GameStateManager\"');\r\n            };\r\n\r\n            this.events = new Events(this);\r\n            this.dom = new DOM(this);\r\n            this.gui = new GUI(this);\r\n            this.resources = new ResourceManager(this);\r\n            this.trigger = new TriggerManager(this);\r\n            this.timeManager = new TimeManager(this);\r\n            this.deviceManager = DeviceManager();\r\n            this.errorManager = new ErrorManager(this);\r\n            this.fpsManager = new FPSManager(this);\r\n            this.input = new InputHandler(this);\r\n            this.layers = new Layers(this);\r\n            this.viewManager = new ViewManager(this);\r\n            this.scene = new Scene(this);\r\n\r\n            this.createLocal = function (id) {\r\n                new StorageManager(this, id);\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.gameStates = {\r\n            states: {},\r\n\r\n            add: function (name, _state, start, end) {\r\n                var state = {};\r\n                state.state = _state;\r\n                state.start = start || false;\r\n                state.end = end || false;\r\n\r\n                this.states[name] = state;\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.start = function (engine, frameLimit) {\r\n            this.setActiveEngine(engine);\r\n            this.frameLimit = frameLimit || 60;\r\n            this.sceneSkipTime = 1000.0 / this.frameLimit;\r\n            this.lastTime = Date.now();\r\n            this.dt = 0;\r\n            this.sceneStartTime = this.lastTime;\r\n            this.gameEngine(this);\r\n        };\r\n\r\n        j2DsEngine.prototype.gameEngine = function (j2Ds) {\r\n            j2Ds.now = Date.now();\r\n            setTimeout(function () {\r\n                if (!j2Ds.stopAll) {\r\n                    j2Ds.dt = (j2Ds.now - j2Ds.lastTime) / 100.0;\r\n                    j2Ds.sceneStartTime = j2Ds.now;\r\n                    if (j2Ds.dt > j2Ds.sceneSkipTime / 2) j2Ds.dt = 0;\r\n\r\n                    j2Ds.events.onEvent('engine:before');\r\n\r\n                    try {\r\n                        j2Ds.engine();\r\n                    } catch (err) {\r\n                        j2Ds.errorManager.showError(err);\r\n                    }\r\n\r\n                    j2Ds.events.onEvent('engine:after');\r\n\r\n                    j2Ds.lastTime = j2Ds.now;\r\n\r\n                    requestAnimationFrame(function () {\r\n                        j2Ds.gameEngine(j2Ds);\r\n                    });\r\n                }\r\n            }, (j2Ds.frameLimit < 60 ? j2Ds.sceneSkipTime : 0));\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return window.requestAnimationFrame ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame ||\r\n                function (callback) {\r\n                    window.setTimeout(callback, 1000 / frameLimit);\r\n                };\r\n        })();\r\n\r\n        j2DsEngine.prototype.stopEngine = function () {\r\n            if (!this.canDeactivate) return;\r\n            this.stopAll = true;\r\n        };\r\n\r\n        j2DsEngine.prototype.runEngine = function (j2Ds) {\r\n            j2Ds = j2Ds || this;\r\n            if (!j2Ds.canDeactivate) return;\r\n            if (!j2Ds.stopAll) return;\r\n            j2Ds.stopAll = false;\r\n            requestAnimationFrame(function () {\r\n                j2Ds.gameEngine(j2Ds);\r\n            });\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.modules.core.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.j2Ds = new j2DsEngine();\r\n        return j2DsEngine;\r\n    }\r\n));\r\n"],"sourceRoot":"/source/"}