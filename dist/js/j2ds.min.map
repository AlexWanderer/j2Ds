{"version":3,"sources":["j2ds.js","MathUtil.js","TextureUtil.js","Dom.js","Gui.js","Events.js","BaseNode.js","CircleNode.js","LineNode.js","RectNode.js","SpriteNode.js","TextNode.js","DeviceManager.js","ErrorManager.js","FpsManager.js","ResourceManager.js","StorageManager.js","TimeManager.js","TriggerManager.js","ViewManager.js","AudioHandler.js","InputHandler.js","TouchHandler.js","Layers.js","Scene.js","j2Ds.js"],"names":["root","factory","define","amd","module","exports","window","global","MathUtil","v2f","x","y","v2i","toInt","number","rndColor","min","max","opacity","random","omitZero","Math","floor","rad","num","PI","is4VerticesIntersect","a","b","isLineIntersect","c","d","fcc1","rotationDirection","fcc2","fcc3","fcc4","p1x","p1y","p2x","p2y","p3x","p3y","undefined","j2Ds","modules","utils","TextureUtil","this","prototype","createImageMap","width","height","callback","textureUtil","resources","add","image","img","loaded","document","createElement","context","getContext","getAnimation","sourceX","sourceY","sourceW","sourceH","frameCount","imageMap","ok","loadImageMap","path","crossOrigin","src","addEventListener","templates","ellipse","size","color","fillRect","fillStyle","strokeRect","lineWidth","strokeStyle","gradientL","colors","isHorizontal","gradient","createLinearGradient","step","length","i","j","addColorStop","gradientR","pos1","r1","pos2","r2","createRadialGradient","Dom","id","getElementById","name","getElementsByName","tag","parent","finder","getElementsByTagName","goURL","url","location","href","reloadURL","attach","dom","events","addEvent","appendChild","injectJavaScript","code","toString","replace","callJava","send","ajax","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","core","Gui","nodes","Events","scene:deactivate","scene:activate","scene:beforeInit","scene:afterInit","scene:beforeStart","scene:afterStart","engine:before","engine:after","scene:changedGameState","writeMode:keyPress","dom:loaded","eventType","push","now","ready","onEvent","destroyEvent","len","splice","args","err","errorManager","showError","require","BaseNode","_j2Ds","pos","visible","alpha","angle","layer","scene","box","offset","resizeBox","setLayer","layers","getLayer","setVisible","isVisible","setAlpha","getAlpha","moveTo","to","t","move","getPosition","setPosition","ceil","setSize","getSize","setParent","getDistance","sqrt","pow","getDistanceXY","abs","getBox","node","x1","x2","y1","y2","getBoxVertices","dx","view","dy","sin","cos","toFixed","checkBoxIntersect","node1","node2","isIntersect","Array","isCollision","result","isLookScene","turn","setRotation","getRotation","rotateTo","_to","_t","atan2","isOutScene","vector","all","moveDir","speed","drawBox","save","translate","rotate","beginPath","rect","stroke","restore","CircleNode","radius","call","Object","create","constructor","draw","tmpAlpha","globalAlpha","arc","fill","LineNode","points","scale","cFill","lineTo","RectNode","SpriteNode","animation","tmpSpeed","frame","flip","setFlip","drawFrame","show","drawImage","setAnimation","TextNode","text","sizePx","family","colorL","vAlign","hAlign","font","fullText","maxWidth","lines","split","measureText","drawSimpleText","textAlign","textBaseline","strokeText","fillText","getText","setText","DeviceManager","parseInt","documentElement","clientWidth","screen","clientHeight","managers","ErrorManager","mode","enabled","init","_true","runBtn","innerHTML","style","padding","align","position","zIndex","left","top","getDeviceManager","fontSize","backgroundColor","cursor","onmousedown","e","stopPropagation","onclick","runEngine","logListener","elems","pauseBtn","stopEngine","reloadBtn","onerror","string","console","log","setMode","debug","_func","stack","match","file","line","decodeURI","errMess","message","domId","count","execLine","lightSyntax","_code","_type","FpsManager","fps","frameLimit","tmp_of_fps","tmp_of_time","Date","fpsManager","update","getFPS","ResourceManager","added","failed","fail","isLoaded","getProgress","StorageManager","ls","localStorage","alert","saveNode","o","setItem","JSON","stringify","load","getItem","is","value","loadNode","parse","TimeManager","times","insert","get","TriggerManager","triggers","triggerManager","trigger","command","state","last","run","mSec","job","loop","reset","ViewManager","views","viewManager","viewport","focusNode","AudioHandler","audios","audioHandler","deactivate","activate","files","vol","audio","source","volume","sound","domEl","lock","onePlay","explicitOriginalTarget","currentSrc","setLock","play","unlock","currentTime","pause","stop","setVolume","getVolume","getState","getPlayPosition","snd","io","InputHandler","screenPos","keyDown","keyPress","keyPressed","keyUp","keyUped","mouseDown","mousePress","mousePressed","mouseUp","mouseUpped","mouseWheel","canceled","body","anyKey","anyMouse","writeMode","displayCursor","mKey","LEFT","MIDDLE","RIGHT","jKey","UP","DOWN","SPACE","CTRL","SHIFT","ALT","ESC","ENTER","MINUS","PLUS","CAPS_LOCK","BACKSPACE","TAB","Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","V","B","N","M","0","1","2","3","4","5","6","7","8","C","9","NUM_0","NUM_1","NUM_2","NUM_3","NUM_4","NUM_5","NUM_6","NUM_7","NUM_8","NUM_9","NUM_MINUS","NUM_PLUS","NUM_LOCK","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","keyList","isKeyDown","isKeyPress","isKeyUp","getScreenPosition","setWriteMode","isWriteMode","keyEvent","type","keyCode","preventDefault","char","which","charCode","String","fromCharCode","cancel","onNode","upd","dX","offsetWidth","dY","offsetHeight","onMove","offsetLeft","pageX","offsetTop","pageY","isMouseDown","isMousePress","isMouseUp","isMouseWheel","onMouseWheel","wheelDelta","detail","onMouseEvent","button","mouseUped","focus","setCursorImage","curImg","input","oncontextmenu","onselectstart","ondragstart","onmouseup","onmousemove","onkeydown","onkeyup","onkeypress","onmousewheel","TouchHandler","touchs","tapDown","tapPress","tapUp","isTapDown","isTapPress","isTapUp","getTouch","onTouchEvent","touchHandler","Layers","layersList","index","notDOM","layerName","canvas","stylePosition","shadowColor","onContext","display","setIndex","clear","clearRect","clearNode","setContextSettings","settings","Scene","gameStateName","canFullScreen","texture","setView","getView","setAutoDraw","toggle","drawAllNodes","setAutoClear","setGameState","gameStates","states","start","setActiveEngine","getGameState","fullScreen","tmpCanvas","tmpContext","origWidth","origHeight","fullScale","canDeactivate","cancelClear","onload","onblur","stopAll","onfocus","initCanvas","addBaseNode","addCircleNode","addLineNode","addRectNode","addSpriteNode","addTextNode","DOM","GUI","FPSManager","j2DsEngine","math","dt","sceneStartTime","sceneSkipTime","engine","getInfo","version","git","site","description","author","getFPSManager","getSceneManager","getLayerManager","getTextureManager","getAudioManager","getPaintManager","paint","getIO","getTouchIO","touch","getDOMManager","getTriggerManager","getMathManager","getGameStateManager","getViewManager","deviceManager","getErrorManager","getTimeManager","timeManager","getResourceManager","setWindow","_window","setFrameLimit","gui","createLocal","_state","end","lastTime","gameEngine","setTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame"],"mappings":"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","file":"j2ds.js","sourcesContent":[null,"/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    MathUtil.v2f = function (x, y) {\r\n        return {x: x, y: y};\r\n    };\r\n\r\n    MathUtil.v2i = function (x, y) {\r\n        return {x: (x >> 0), y: (y >> 0)};\r\n    };\r\n\r\n    MathUtil.toInt = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    MathUtil.rndColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    MathUtil.rad = function (num) {\r\n        return num * (Math.PI / 180);\r\n    };\r\n\r\n    MathUtil.is4VerticesIntersect = function checkLineIntersection(a, b) {\r\n        return !!(MathUtil.isLineIntersect(a.a, a.b, b.a, b.b) ||\r\n        MathUtil.isLineIntersect(a.a, a.b, b.b, b.c) ||\r\n        MathUtil.isLineIntersect(a.a, a.b, b.c, b.d) ||\r\n        MathUtil.isLineIntersect(a.a, a.b, b.d, b.a) ||\r\n\r\n        MathUtil.isLineIntersect(a.b, a.c, b.a, b.b) ||\r\n        MathUtil.isLineIntersect(a.b, a.c, b.b, b.c) ||\r\n        MathUtil.isLineIntersect(a.b, a.c, b.c, b.d) ||\r\n        MathUtil.isLineIntersect(a.b, a.c, b.d, b.a) ||\r\n\r\n        MathUtil.isLineIntersect(a.c, a.d, b.a, b.b) ||\r\n        MathUtil.isLineIntersect(a.c, a.d, b.b, b.c) ||\r\n        MathUtil.isLineIntersect(a.c, a.d, b.c, b.d) ||\r\n        MathUtil.isLineIntersect(a.c, a.d, b.d, b.a) ||\r\n\r\n        MathUtil.isLineIntersect(a.d, a.a, b.a, b.b) ||\r\n        MathUtil.isLineIntersect(a.d, a.a, b.b, b.c) ||\r\n        MathUtil.isLineIntersect(a.d, a.a, b.c, b.d) ||\r\n        MathUtil.isLineIntersect(a.d, a.a, b.d, b.a));\r\n        \r\n    };\r\n\r\n    MathUtil.isLineIntersect = function checkLineIntersection(a, b, c, d) {\r\n        var fcc1 = MathUtil.rotationDirection(a.x, a.y, b.x, b.y, d.x, d.y);\r\n        var fcc2 = MathUtil.rotationDirection(a.x, a.y, b.x, b.y, c.x, c.y);\r\n        var fcc3 = MathUtil.rotationDirection(a.x, a.y, c.x, c.y, d.x, d.y);\r\n        var fcc4 = MathUtil.rotationDirection(b.x, b.y, c.x, c.y, d.x, d.y);\r\n\r\n        if (fcc1 == 0 && fcc2 == 0 && fcc3 == 0 && fcc4 == 0) return false;\r\n        return fcc1 != fcc2 && fcc3 != fcc4;\r\n    };\r\n\r\n    MathUtil.rotationDirection = function (p1x, p1y, p2x, p2y, p3x, p3y) {\r\n        if (((p3y - p1y) * (p2x - p1x)) > ((p2y - p1y) * (p3x - p1x)))\r\n            return 1;\r\n        else if (((p3y - p1y) * (p2x - p1x)) == ((p2y - p1y) * (p3x - p1x)))\r\n            return 0;\r\n        return -1;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.MathUtil = MathUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.MathUtil = MathUtil;\r\n    return MathUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/TextureUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TextureUtil = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    TextureUtil.prototype.createImageMap = function (width, height, callback) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            loaded: false,\r\n            width: width,\r\n            height: height\r\n        };\r\n\r\n        image.img = document.createElement('canvas');\r\n        image.context = image.img.getContext('2d');\r\n        image.img.width = image.width;\r\n        image.img.height = image.height;\r\n\r\n        callback(image.context);\r\n        image.loaded = true;\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        textureUtil.j2Ds.resources.ok('createImageMap_' + width + 'x' + height);\r\n\r\n        return image;\r\n    };\r\n\r\n    TextureUtil.prototype.loadImageMap = function (path) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            width: 0,\r\n            height: 0,\r\n            loaded: false\r\n        };\r\n\r\n        image.img = document.createElement('img');\r\n        image.crossOrigin = 'anonymous';\r\n        image.img.src = path;\r\n\r\n        image.img.addEventListener('load', function () {\r\n            image.width = image.img.width;\r\n            image.height = image.img.height;\r\n            image.loaded = true;\r\n            textureUtil.j2Ds.resources.ok(path);\r\n        });\r\n\r\n        image.img.addEventListener('error', function () {\r\n            image.width = 0;\r\n            image.height = 0;\r\n            image.loaded = false;\r\n            //textureUtil.j2Ds.resources.fail(path);\r\n        });\r\n        /* Свойства */\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return image;\r\n    };\r\n\r\n    /* -------------------- */\r\n\r\n    TextureUtil.prototype.templates = {\r\n        ellipse: function (context, size, color) { // TODO??\r\n        },\r\n        fillRect: function (context, size, color) {\r\n            context.fillStyle = color;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        strokeRect: function (context, size, color, lineWidth) {\r\n            context.strokeStyle = color;\r\n            context.lineWidth = lineWidth;\r\n            context.strokeRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientL: function (context, size, colors, isHorizontal) {\r\n            var gradient = context.createLinearGradient(0, 0, size.x, 0);\r\n            var step = 1 / colors.length;\r\n            if (!isHorizontal) {\r\n                gradient = context.createLinearGradient(0, 0, 0, size.y);\r\n            }\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientR: function (context, size, pos1, r1, pos2, r2, colors) {\r\n            var gradient = context.createRadialGradient(pos1.x, pos1.y, r1, pos2.x, pos2.y, r2);\r\n            var step = 1 / colors.length;\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextureUtil = TextureUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.TextureUtil = TextureUtil;\r\n    return TextureUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Dom', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- DOM ---------------*/\r\n    var Dom = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    Dom.prototype.id = function (id) {\r\n        return document.getElementById(id);\r\n    };\r\n\r\n    Dom.prototype.name = function (id) {\r\n        return document.getElementsByName(id)[0];\r\n    };\r\n\r\n    Dom.prototype.tag = function (id, parent) {\r\n        var finder = parent || document;\r\n        return finder.getElementsByTagName(id);\r\n    };\r\n\r\n    Dom.prototype.goURL = function (url) {\r\n        document.location.href = url;\r\n    };\r\n\r\n    Dom.prototype.reloadURL = function () {\r\n        document.location.href = document.location.href;\r\n    };\r\n\r\n    Dom.prototype.attach = function (id, parent) {\r\n        var dom = this;\r\n        this.j2Ds.events.addEvent('dom:loaded', function (parent) {\r\n            if (!parent) {\r\n                dom.tag('body')[0].appendChild(id);\r\n            } else {\r\n                dom.id(parent).appendChild(id);\r\n            }\r\n        });\r\n    };\r\n\r\n    Dom.prototype.injectJavaScript = function (code) {\r\n        code = code.toString();\r\n        code = code.replace(/[\\n\\r\\t]/g, ';');\r\n        document.location.href = 'javascript: var injectFunction = (function() {setTimeout(' + code + ', 0);}); injectFunction();';\r\n    };\r\n\r\n    Dom.prototype.callJava = function (code) {\r\n        document.location.href = 'javacall:' + code;\r\n    };\r\n\r\n    Dom.prototype.send = function (path, callback) {\r\n        var ajax = new XMLHttpRequest();\r\n        ajax.open('GET', path, true);\r\n        ajax.onreadystatechange = function () {\r\n            if (ajax.readyState == 4) {\r\n                if (ajax.status == 200) {\r\n                    callback(ajax.responseText);\r\n                }\r\n            }\r\n        };\r\n        ajax.send(null);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Dom = Dom;\r\n    if (global.j2Ds !== undefined) global.modules.core.Dom = Dom;\r\n    return Dom;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Gui', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- GUI ---------------*/\r\n    var Gui = function () {\r\n        this.nodes = {};\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Gui = Gui;\r\n    if (global.j2Ds !== undefined) global.modules.core.Gui = Gui;\r\n    return Gui;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Events', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Events = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.events = {\r\n            'scene:deactivate': [],\r\n            'scene:activate': [],\r\n\r\n            'scene:beforeInit': [],\r\n            'scene:afterInit': [],\r\n            'scene:beforeStart': [],\r\n            'scene:afterStart': [],\r\n\r\n            'engine:before': [],\r\n            'engine:after': [],\r\n\r\n            'scene:changedGameState': [],\r\n\r\n            'writeMode:keyPress': [],\r\n\r\n            'dom:loaded': []\r\n        };\r\n    };\r\n\r\n\r\n    Events.prototype.addEvent = function (eventType, callback, id) {\r\n        this.events[eventType].push({\r\n            id: id || this.j2Ds.now,\r\n            callback: callback\r\n        });\r\n        if (this.j2Ds.ready && eventType == 'dom:loaded') {\r\n            this.onEvent('dom:loaded');\r\n            return true;\r\n        }\r\n    };\r\n\r\n    Events.prototype.destroyEvent = function (eventType, id) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType][i]['id'] == id) {\r\n                events.events[eventType].splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    Events.prototype.onEvent = function (eventType, args) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType]) {\r\n                try {\r\n                    events.events[eventType][i]['callback'](args || '');\r\n                } catch (err) {\r\n                    events.j2Ds.errorManager.showError(err);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Events = Events;\r\n    if (global.j2Ds !== undefined) global.modules.core.Events = Events;\r\n    return Events;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var BaseNode = function (_j2Ds, pos, size) {\r\n        j2Ds = _j2Ds;\r\n        this.visible = true;\r\n        this.alpha = 1;\r\n        this.pos = pos;\r\n        this.size = size;\r\n        this.parent = false;\r\n        this.angle = 0;\r\n        this.layer = j2Ds.scene;\r\n        this.box = {\r\n            offset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            size: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        j2Ds.scene.nodes.push(this);\r\n    };\r\n\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.box.offset = offset;\r\n        this.box.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? j2Ds.layers.layer(layer) : j2Ds.scene;\r\n    };\r\n\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.visible = !!visible;\r\n    };\r\n\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.alpha = alpha;\r\n    };\r\n\r\n    BaseNode.prototype.getAlpha = function () {\r\n        return this.alpha;\r\n    };\r\n\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(MathUtil.v2f(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    BaseNode.prototype.setPosition = function (pos) {\r\n        if (pos) {\r\n            this.pos = MathUtil.v2f(pos.x - Math.ceil(this.size.x / 2), pos.y - Math.ceil(this.size.y / 2));\r\n        } else {\r\n            return this.pos;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.move = function (pos) {\r\n        this.pos.x += pos.x;\r\n        this.pos.y += pos.y;\r\n    };\r\n\r\n    BaseNode.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x + Math.ceil(this.size.x / 2), this.pos.y + Math.ceil(this.size.y / 2));\r\n    };\r\n\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size) {\r\n            this.size = size;\r\n        } else {\r\n            return this.size;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.size;\r\n    };\r\n\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return MathUtil.v2f(Math.abs(id.getPosition().x - this.getPosition().x), Math.abs(id.getPosition().y - this.getPosition().y));\r\n    };\r\n\r\n    BaseNode.prototype.getBox = function (node) {\r\n        return {\r\n            x1: node.pos.x + node.box.offset.x,\r\n            x2: node.pos.x + node.box.offset.x + node.size.x + node.box.size.x,\r\n            y1: node.pos.y + node.box.offset.y,\r\n            y2: node.pos.y + node.box.offset.y + node.size.y + node.box.size.y\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.getBoxVertices = function (node) {\r\n        var angle = MathUtil.rad(node.angle);\r\n\r\n        var dx = node.box.offset.x + node.box.size.x / 2 + node.getPosition().x - j2Ds.scene.view.pos.x;\r\n        var dy = node.box.offset.y + node.box.size.y / 2 + node.getPosition().y - j2Ds.scene.view.pos.y;\r\n\r\n        var box = this.getBox(node);\r\n\r\n        return {\r\n            a: {\r\n                x: (dx + (box.y1 - dy) * Math.sin(angle) + (box.x2 - dx) * Math.cos(angle)).toFixed(2),\r\n                y: (dy + (box.y1 - dy) * Math.cos(angle) - (box.x2 - dx) * Math.sin(angle))\r\n            },\r\n            b: {\r\n                x: (dx + (box.y2 - dy) * Math.sin(angle) + (box.x2 - dx) * Math.cos(angle)).toFixed(2),\r\n                y: (dy + (box.y2 - dy) * Math.cos(angle) - (box.x2 - dx) * Math.sin(angle)).toFixed(2)\r\n            },\r\n            c: {\r\n                x: (dx + (box.x2 - dy) * Math.sin(angle) + (box.x1 - dx) * Math.cos(angle)).toFixed(2),\r\n                y: (dy + (box.x2 - dy) * Math.cos(angle) - (box.x1 - dx) * Math.sin(angle)).toFixed(2)\r\n            },\r\n            d: {\r\n                x: (dx + (box.y1 - dy) * Math.sin(angle) + (box.x1 - dx) * Math.cos(angle)).toFixed(2),\r\n                y: (dy + (box.y1 - dy) * Math.cos(angle) - (box.x1 - dx) * Math.sin(angle)).toFixed(2)\r\n            }\r\n        }\r\n    };\r\n\r\n    var checkBoxIntersect = function (node1, node2) {\r\n        var a, b;\r\n        if (node1.angle === 0 && node2.angle === 0) {\r\n            a = node1.getBox(node1);\r\n            b = node1.getBox(node2);\r\n\r\n            return !(a.y1 > b.y2 || a.y2 < b.y1 || a.x2 < b.x1 || a.x1 > b.x2);\r\n        } else {\r\n            a = node1.getBoxVertices(node1);\r\n            b = node1.getBoxVertices(node2);\r\n\r\n            return MathUtil.is4VerticesIntersect(a, b);\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.isIntersect = function (node2) {\r\n        var node1 = this;\r\n\r\n        if (node2 instanceof BaseNode) {\r\n            return checkBoxIntersect(node1, node2);\r\n        } else if (node2 instanceof Array && node2.length > 0 && node2[0] instanceof BaseNode) {\r\n            for (var i = 0; i < node2.length; i++) {\r\n                if (checkBoxIntersect(node1, node2[i])) return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.size.x / 2 + id.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.size.y / 2 + id.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    BaseNode.prototype.isLookScene = function () {\r\n        return !((this.pos.x > j2Ds.scene.view.pos.x + j2Ds.scene.width || this.pos.x + this.size.x < j2Ds.scene.view.pos.x)\r\n        || (this.pos.y > j2Ds.scene.view.pos.y + j2Ds.scene.height || this.pos.y + this.size.y < j2Ds.scene.view.pos.y));\r\n    };\r\n\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.angle = (this.angle % 360);\r\n        this.angle += angle;\r\n    };\r\n\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.angle = angle % 360;\r\n    };\r\n\r\n    BaseNode.prototype.getRotation = function () {\r\n        return this.angle;\r\n    };\r\n\r\n    BaseNode.prototype.rotateTo = function (_to, _t) {\r\n        _t = _t ? _t : 1;\r\n        this.setRotation((Math.atan2(\r\n                (_to.y - this.getPosition().y),\r\n                (_to.x - this.getPosition().x)\r\n            ) * (180 / Math.PI)) / _t);\r\n    };\r\n\r\n    BaseNode.prototype.isOutScene = function () {\r\n        var vector = {};\r\n\r\n        if (this.pos.x + this.size.x >= j2Ds.scene.view.pos.x + j2Ds.scene.width) {\r\n            vector.x = 1;\r\n        } else if (this.pos.x <= j2Ds.scene.view.pos.x) {\r\n            vector.x = -1;\r\n        } else {\r\n            vector.x = 0;\r\n        }\r\n\r\n        if (this.pos.y + this.size.y >= j2Ds.scene.view.pos.y + j2Ds.scene.height) {\r\n            vector.y = 1;\r\n        } else if (this.pos.y <= j2Ds.scene.view.pos.y) {\r\n            vector.y = -1;\r\n        } else {\r\n            vector.y = 0;\r\n        }\r\n\r\n        vector.all = (vector.x || vector.y);\r\n\r\n        return vector;\r\n    };\r\n\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.pos.x += speed * (Math.cos(MathUtil.rad(this.angle)));\r\n        this.pos.y += speed * (Math.sin(MathUtil.rad(this.angle)));\r\n    };\r\n\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n\r\n        if (this.angle) {\r\n            context.save();\r\n            context.translate(\r\n                this.getPosition().x - j2Ds.scene.view.pos.x,\r\n                this.getPosition().y - j2Ds.scene.view.pos.y\r\n            );\r\n            context.rotate(MathUtil.rad(this.angle));\r\n            context.translate(\r\n                -(this.getPosition().x - j2Ds.scene.view.pos.x),\r\n                -(this.getPosition().y - j2Ds.scene.view.pos.y)\r\n            );\r\n        }\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.size.x, this.size.y);\r\n        context.stroke();\r\n\r\n        if (this.angle) {\r\n            context.restore();\r\n            context.save();\r\n            context.translate(\r\n                this.box.offset.x + this.box.size.x / 2 + this.getPosition().x - j2Ds.scene.view.pos.x,\r\n                this.box.offset.y + this.box.size.y / 2 + this.getPosition().y - j2Ds.scene.view.pos.y\r\n            );\r\n            context.rotate(MathUtil.rad(this.angle));\r\n            context.translate(\r\n                -(this.box.offset.x + this.box.size.x / 2 + this.getPosition().x - j2Ds.scene.view.pos.x),\r\n                -(this.box.offset.y + this.box.size.y / 2 + this.getPosition().y - j2Ds.scene.view.pos.y)\r\n            );\r\n        }\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.box.offset.x + this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.box.offset.y + this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.box.size.x + this.size.x,\r\n            this.box.size.y + this.size.y);\r\n        context.stroke();\r\n\r\n        if (this.angle) {\r\n            context.restore();\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.BaseNode = BaseNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CircleNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var CircleNode = function (_j2Ds, pos, radius, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(radius * 2, radius * 2));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.radius = radius;\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.color;\r\n\r\n            context.beginPath();\r\n            context.arc(this.pos.x - j2Ds.scene.view.pos.x + this.radius,\r\n                this.pos.y - j2Ds.scene.view.pos.y + this.radius,\r\n                this.radius, 0, 2 * Math.PI, true);\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.CircleNode = CircleNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.CircleNode = CircleNode;\r\n    return CircleNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/LineNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var LineNode = function (_j2Ds, pos, points, scale, color, width, fill, cFill) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.points = points;\r\n        this.fill = fill || false;\r\n        this.scale = scale || 0;\r\n        this.cFill = cFill;\r\n        this.lineWidth = width;\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.strokeStyle = this.color;\r\n            context.lineWidth = this.lineWidth;\r\n\r\n            context.beginPath();\r\n            context.moveTo(this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y);\r\n\r\n            for (var i = 0, len = this.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.pos.x + this.points[i][0] * this.scale - j2Ds.scene.view.pos.x,\r\n                    this.pos.y + this.points[i][1] * this.scale - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.fill) {\r\n                context.fillStyle = this.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.LineNode = LineNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.LineNode = LineNode;\r\n    return LineNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/RectNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @param _j2Ds\r\n     * @param pos\r\n     * @param size\r\n     * @param color\r\n     * @constructor\r\n     */\r\n    var RectNode = function (_j2Ds, pos, size, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.color = color;\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    RectNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.RectNode = RectNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.RectNode = RectNode;\r\n    return RectNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/SpriteNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var SpriteNode = function (_j2Ds, pos, size, animation) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.tmpSpeed = 0;\r\n        this.frame = 0;\r\n        this.animation = animation;\r\n        this.flip = {x: false, y: false};\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.flip = {x: x, y: y};\r\n    };\r\n\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.frame > this.animation.frameCount) {\r\n                this.frame = 0;\r\n            }\r\n            this.drawFrame(this.frame + 1);\r\n\r\n            if (this.tmpSpeed > speed) {\r\n                this.frame += 1;\r\n                this.tmpSpeed = 0;\r\n            }\r\n            else {\r\n                this.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    // отрисовка одного кадра\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        if (!this.animation.imageMap.loaded) return (err.show('Invalid ImageMap', 'red'));\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.scale(this.flip.x ? -1 : 1, this.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.animation.imageMap.img,\r\n                (this.animation.sourceX + (this.animation.sourceW * frame)), this.animation.sourceY,\r\n                this.animation.sourceW, this.animation.sourceH,\r\n                this.pos.x - j2Ds.scene.view.pos.x, this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    SpriteNode.prototype.setAnimation = function (id) {\r\n        if (this.animation != id) {\r\n            this.animation = id;\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.SpriteNode = SpriteNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.SpriteNode = SpriteNode;\r\n    return SpriteNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/TextNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var TextNode = function (_j2Ds, pos, text, sizePx, color, family, width, colorL) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n\r\n        this.vAlign = 'top';\r\n        this.hAlign = 'left';\r\n        this.color = color ? color : 'black';\r\n\r\n        this.family = family ? family : 'serif';\r\n        this.sizePx = sizePx ? sizePx : 20;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        this.lineWidth = width ? width : 0;\r\n        this.colorL = colorL ? colorL : 'black';\r\n\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype = Object.create(BaseNode.prototype);\r\n    TextNode.prototype.constructor = TextNode;\r\n\r\n    TextNode.prototype.setSize = function (sizePx) {\r\n        this.sizePx = sizePx;\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.getSize = function () {\r\n        return this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.drawSimpleText = function (text, pos, color, colorL) {\r\n        var context = this.layer.context;\r\n        context.fillStyle = color ? color : this.color;\r\n        context.textAlign = this.hAlign;\r\n        context.textBaseline = this.vAlign;\r\n        context.font = this.font;\r\n        context.lineWidth = this.lineWidth;\r\n        context.strokeStyle = colorL ? colorL : this.colorL;\r\n\r\n        var lines = text.split(\"\\n\");\r\n\r\n        pos = pos ? pos : this.pos;\r\n\r\n        if (this.alpha != 1) {\r\n            var tmpAlpha = context.globalAlpha;\r\n            context.globalAlpha = this.alpha;\r\n        }\r\n\r\n        for (var i = 0, len = lines.length; i < len; i += 1) {\r\n            if (this.lineWidth) {\r\n                context.strokeText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n            }\r\n            context.fillText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n        }\r\n\r\n        if (this.alpha != 1) {\r\n            context.globalAlpha = tmpAlpha;\r\n        }\r\n\r\n        context.lineWidth = 0;\r\n        context.strokeStyle = 'black';\r\n    };\r\n\r\n    TextNode.prototype.getText = function () {\r\n        return this.fullText;\r\n    };\r\n\r\n    TextNode.prototype.setText = function (text) {\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.textAlign = this.hAlign;\r\n            context.textBaseline = this.vAlign;\r\n            context.font = this.font;\r\n            context.lineWidth = this.lineWidth;\r\n            context.strokeStyle = this.colorL;\r\n\r\n            for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n                if (this.lineWidth) {\r\n                    context.strokeText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n                }\r\n                context.fillText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.strokeStyle = 'black';\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextNode = TextNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.TextNode = TextNode;\r\n    return TextNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/DeviceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var DeviceManager = function () {\r\n        return {\r\n            width: (parseInt(document.documentElement.clientWidth) < parseInt(screen.width))\r\n                ? parseInt(document.documentElement.clientWidth)\r\n                : parseInt(screen.width),\r\n            height: (parseInt(document.documentElement.clientHeight) < parseInt(screen.height))\r\n                ? parseInt(document.documentElement.clientHeight)\r\n                : parseInt(screen.height)\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.DeviceManager = DeviceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.DeviceManager = DeviceManager;\r\n    return DeviceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ErrorManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ErrorManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.mode = 'neverShow'; // values: onlyShow|stopAndShow|neverShow\r\n        this.enabled = false;\r\n    };\r\n\r\n    ErrorManager.prototype.init = function (_true) {\r\n        var errorManager = this;\r\n        errorManager.enabled = _true || true;\r\n\r\n        var runBtn = document.createElement('div');\r\n        runBtn.innerHTML = '<b>RUN</b>';\r\n        runBtn.style.padding = '5px';\r\n        runBtn.align = 'center';\r\n        runBtn.style.position = 'fixed';\r\n        runBtn.style.zIndex = 20000;\r\n        runBtn.style.left = '0px';\r\n        runBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        runBtn.style.fontSize = '8pt';\r\n        runBtn.style.backgroundColor = '#B8FFB8';\r\n        runBtn.style.height = '12px';\r\n        runBtn.style.width = '50px';\r\n        runBtn.style.cursor = 'pointer';\r\n\r\n        runBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        runBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение продолжено');\r\n            errorManager.j2Ds.runEngine(errorManager.j2Ds);\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(runBtn);\r\n        errorManager.logListener.elems.push(runBtn);\r\n\r\n\r\n        var pauseBtn = document.createElement('div');\r\n        pauseBtn.innerHTML = '<b>PAUSE</b>';\r\n        pauseBtn.style.padding = '5px';\r\n        pauseBtn.align = 'center';\r\n        pauseBtn.style.position = 'fixed';\r\n        pauseBtn.style.zIndex = 20000;\r\n        pauseBtn.style.left = '60px';\r\n        pauseBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        pauseBtn.style.fontSize = '8pt';\r\n        pauseBtn.style.backgroundColor = '#FFFFBD';\r\n        pauseBtn.style.height = '12px';\r\n        pauseBtn.style.width = '50px';\r\n        pauseBtn.style.cursor = 'pointer';\r\n\r\n        pauseBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        pauseBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение приостановлено');\r\n            errorManager.j2Ds.stopEngine();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(pauseBtn);\r\n        errorManager.logListener.elems.push(pauseBtn);\r\n\r\n        var reloadBtn = document.createElement('div');\r\n        reloadBtn.innerHTML = '<b>RELOAD</b>';\r\n        reloadBtn.style.padding = '5px';\r\n        reloadBtn.align = 'center';\r\n        reloadBtn.style.position = 'fixed';\r\n        reloadBtn.style.zIndex = 20000;\r\n        reloadBtn.style.left = '120px';\r\n        reloadBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        reloadBtn.style.fontSize = '8pt';\r\n        reloadBtn.style.backgroundColor = '#E2E2E2';\r\n        reloadBtn.style.color = 'black';\r\n        reloadBtn.style.height = '12px';\r\n        reloadBtn.style.width = '50px';\r\n        reloadBtn.style.cursor = 'pointer';\r\n\r\n        reloadBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        reloadBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.j2Ds.dom.reloadURL();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(reloadBtn);\r\n        errorManager.logListener.elems.push(reloadBtn);\r\n\r\n        errorManager.j2Ds.events.addEvent('dom:loaded', function () {\r\n            errorManager.j2Ds.window.onerror = function (e) {\r\n                errorManager.show(e);\r\n            };\r\n        });\r\n    };\r\n\r\n    ErrorManager.prototype.show = function (string) {\r\n        console.log('[j2Ds]: ' + string);\r\n    };\r\n\r\n    ErrorManager.prototype.setMode = function (mode) {\r\n        this.mode = mode;\r\n        if (mode == 'neverShow') {\r\n            this.enabled = false;\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.debug = function (string) {\r\n        if (!this.enabled) return;\r\n        this.j2Ds.stopEngine();\r\n        if (this.mode != 'neverShow') {\r\n            this.show(string || 'Точка останова достигнута');\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.showError = function (err, _func) {\r\n        if (this.mode == 'neverShow') return;\r\n\r\n        var stack = err.stack.toString();\r\n        stack = stack.split(/\\n/);\r\n\r\n        for (var i = 0, len = stack.length; i < len; i += 1) {\r\n            if (stack[i].match(/\\:\\d/)) {\r\n                stack = stack[i].split(/\\s/);\r\n                break;\r\n            }\r\n        }\r\n\r\n        stack = stack[stack.length - 1];\r\n        stack = stack.replace(/([\\(\\)]|[\\w]+:\\/\\/)/g, '');\r\n        var file = stack.split(':'),\r\n            line = file[1],\r\n            number = file[2];\r\n        file = decodeURI(file[0]);\r\n\r\n        if (file.match(/(<anonymous>|\\bj2Ds.js)/)) {\r\n            file = '<Функция-аргумент или строка>';\r\n        }\r\n\r\n        var errMess = 'Тип ошибки: \"' + err.name + '\"' +\r\n            '\\nСообщение: \"' + err.message + '\"' +\r\n            '\\nФайл с ошибкой: \"' + file + '\"' +\r\n            '\\nСтрока: ' + line +\r\n            ', символ: ' + number;\r\n\r\n        if (_func) {\r\n            errMess += '\\nОшибка в теле функции: \\n' + _func.toString();\r\n        }\r\n\r\n        this.show(errMess);\r\n\r\n        if (this.mode == 'stopAndShow') {\r\n            this.j2Ds.stopEngine();\r\n            this.show('Выполнение приостановлено');\r\n        }\r\n\r\n    };\r\n\r\n    ErrorManager.prototype.logListener = {\r\n        domId: '',\r\n        count: 0,\r\n        execLine: '',\r\n        elems: []\r\n    };\r\n\r\n    ErrorManager.prototype.lightSyntax = function (_code, _type) {\r\n        var code = ('' + _code).toString();\r\n\r\n        if (_type == 'boolean') {\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        } else if (_type == 'code') {\r\n            code = code.replace(/(this|var|typeof|new|return|if|else|for|in|while|break|do|continue|switch|case)([^a-z0-9\\$_])/gi,\r\n                '<span style=\"color: #FFC0CB;\"><b>$1</b></span>$2')\r\n                .replace(/(function|object)/gi,\r\n                    '<span style=\"color: #FFA500;\">$1</span>')\r\n                .replace(/(width|height|window|document|scene|j2Ds|value)/gi,\r\n                    '<span style=\"color: #59B5C0;\">$1</span>')\r\n                .replace(/([a-z\\_\\$][a-z0-9_]*)\\(/gi, '<span style=\"color: #FFCD70;\">$1</span>(')\r\n                .replace(/(\\{|\\}|\\]|\\[|\\|)/gi, '<span style=\"color: #FFFF00;\">$1</span>')\r\n                .replace(/('.*?')/g, '<span style=\"color: #8FFF8F;\">$1</span>')\r\n                .replace(/(#[a-z0-9]{3,8};)/, '<b style=\"color: red;\">$1</b>')\r\n                .replace(/(\\t)/g, '&nbsp;&nbsp;');\r\n\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        }\r\n\r\n        return code;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ErrorManager = ErrorManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ErrorManager = ErrorManager;\r\n    return ErrorManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/FpsManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var FpsManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.fps = this.j2Ds.frameLimit;\r\n        this.tmp_of_fps = 1;\r\n        this.tmp_of_time = Date.now();\r\n    };\r\n\r\n    FpsManager.prototype.init = function () {\r\n        var fpsManager = this;\r\n        fpsManager.enabled = true;\r\n\r\n        this.j2Ds.events.addEvent('engine:after', function () {\r\n            fpsManager.update();\r\n        });\r\n\r\n    };\r\n\r\n    FpsManager.prototype.update = function () {\r\n        if (!this.enabled) return;\r\n        this.tmp_of_fps += 1;\r\n        if (this.j2Ds.now - this.tmp_of_time >= 1000) {\r\n            this.fps = this.tmp_of_fps;\r\n            this.tmp_of_fps = 1;\r\n            this.tmp_of_time = this.j2Ds.now;\r\n        }\r\n    };\r\n\r\n    FpsManager.prototype.getFPS = function () {\r\n        return this.fps <= this.j2Ds.frameLimit ? this.fps : this.j2Ds.frameLimit;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.FpsManager = FpsManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.FpsManager = FpsManager;\r\n    return FpsManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ResourceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ResourceManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.added = 0;\r\n        this.loaded = 0;\r\n        this.failed = 0;\r\n\r\n        this.add = function () {\r\n            this.added += 1;\r\n        };\r\n\r\n        this.ok = function (file) {\r\n            this.loaded += 1;\r\n            this.j2Ds.errorManager.show('loaded: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.fail = function (file) {\r\n            this.failed += 1;\r\n            this.j2Ds.errorManager.show('error load: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.show = function () {\r\n            return {'added': this.added, 'loaded': this.loaded, 'failed': this.failed};\r\n        };\r\n\r\n        this.isLoaded = function () {\r\n            return this.added == this.loaded;\r\n        };\r\n\r\n        this.getProgress = function () {\r\n            return Math.ceil(this.loaded / this.added * 100);\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ResourceManager = ResourceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ResourceManager = ResourceManager;\r\n    return ResourceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/StorageManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var StorageManager = function (j2Ds, id) {\r\n        this.j2Ds = j2Ds;\r\n        this.id = id;\r\n        this.ls = this.j2Ds.window.localStorage ? this.j2Ds.window.localStorage : false;\r\n        if (!this.ls) alert('j2Ds ERROR in \"createLocal(' + id + ')\" \\n' + 'Объект \"localStorage\" не поддерживается.');\r\n    };\r\n\r\n    StorageManager.prototype.saveNode = function (name, o) {\r\n        if (!this.ls) return false;\r\n        this.ls.setItem(this.id + name, JSON.stringify(o));\r\n    };\r\n\r\n    StorageManager.prototype.load = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return this.ls.getItem(this.id + name);\r\n    };\r\n\r\n    StorageManager.prototype.is = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return !!(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    StorageManager.prototype.save = function (name, value) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        this.ls.setItem(this.id + name, value);\r\n    };\r\n\r\n    StorageManager.prototype.loadNode = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return JSON.parse(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.StorageManager = StorageManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.StorageManager = StorageManager;\r\n    return StorageManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TimeManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TimeManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.times = {};\r\n\r\n        this.insert = function (id) {\r\n            if (!this.times[id]) {\r\n                this.times[id] = this.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        this.get = function (id) {\r\n            return this.times[id];\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TimeManager = TimeManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TimeManager = TimeManager;\r\n    return TimeManager;\r\n}));\r\n\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TriggerManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TriggerManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.enabled = false;\r\n        this.triggers = {};\r\n    };\r\n\r\n    TriggerManager.prototype.add = function (id, callback) {\r\n        var triggerManager = this;\r\n        var trigger = {\r\n            command: callback,\r\n            count: 0,\r\n            state: 'stop',\r\n            last: false\r\n        };\r\n\r\n        trigger.run = function (mSec) {\r\n            if (this.state == 'job') {\r\n                this.command();\r\n                return;\r\n            }\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'job';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.job = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec && this.state != 'run') {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.loop = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.reset = function () {\r\n            this.count = 0;\r\n            this.state = 'stop';\r\n            this.last = false;\r\n        };\r\n\r\n        this.triggers[id] = trigger;\r\n        return trigger;\r\n    };\r\n\r\n    TriggerManager.prototype.get = function (id) {\r\n        return this.triggers[id];\r\n    };\r\n\r\n    TriggerManager.prototype.init = function () {\r\n        this.enabled = true;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TriggerManager = TriggerManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TriggerManager = TriggerManager;\r\n    return TriggerManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ViewManager', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var ViewManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.views = {};\r\n    };\r\n\r\n    ViewManager.prototype.add = function (id, pos) {\r\n        var viewManager = this;\r\n        var viewport = {\r\n            focusNode: false\r\n        };\r\n\r\n        viewport.pos = pos ? MathUtil.v2f(pos.x, pos.y) : MathUtil.v2f(0, 0);\r\n\r\n        viewport.setPosition = function (pos) {\r\n            if (!pos) return this;\r\n            this.pos = MathUtil.v2f(pos.x - viewManager.j2Ds.scene.width / 2, pos.y - viewManager.j2Ds.scene.height / 2);\r\n        };\r\n\r\n        viewport.getPosition = function () {\r\n            return this.pos;\r\n        };\r\n\r\n        viewport.move = function (pos) {\r\n            this.pos.x += pos.x;\r\n            this.pos.y += pos.y;\r\n        };\r\n\r\n        viewManager.j2Ds.viewManager.views[id] = viewport;\r\n        return viewport;\r\n    };\r\n\r\n    ViewManager.prototype.get = function (id) {\r\n        return this.j2Ds.viewManager.views[id];\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ViewManager = ViewManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ViewManager = ViewManager;\r\n    return ViewManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/AudioHandler', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var AudioHandler = function () {\r\n        this.audios = {};\r\n        this.enabled = false\r\n    };\r\n\r\n    AudioHandler.prototype.init = function () {\r\n        var audioHandler = this;\r\n        this.enabled = true;\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:deactivate', function () {\r\n            audioHandler.deactivate();\r\n        });\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:activate', function () {\r\n            audioHandler.activate();\r\n        });\r\n\r\n    };\r\n\r\n    AudioHandler.prototype.load = function (id, files, vol) {\r\n        var audioHandler = this;\r\n        audioHandler.j2Ds.resources.add();\r\n        var audio = document.createElement('audio');\r\n\r\n        for (var i = 0, len = files.length; i < len; i += 1) {\r\n            var source = document.createElement('source');\r\n            source.src = files[i];\r\n            audio.appendChild(source);\r\n        }\r\n\r\n        audio.id = 'audio_' + id;\r\n\r\n        if (vol) {\r\n            audio.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n        }\r\n\r\n        var sound = {\r\n            id: id,\r\n            files: files,\r\n            domEl: audio, // DOMElement\r\n            ready: false,\r\n            len: 0,\r\n            state: 'stop',\r\n            lock: false,\r\n            volume: audio.volume,\r\n            onePlay: false\r\n        };\r\n\r\n        sound.domEl.addEventListener('loadeddata', function (e) {\r\n            sound.ready = true;\r\n            var file = e.explicitOriginalTarget || e.path[0];\r\n            audioHandler.j2Ds.resources.ok(file.currentSrc);\r\n        });\r\n\r\n        sound.domEl.addEventListener('error', function (e) {\r\n            sound.setLock(true);\r\n            //var file = e.srcElement || e.target;\r\n            //audioHandler.j2Ds.resources.fail(file.src);\r\n        });\r\n\r\n        sound.domEl.addEventListener('ended', function () {\r\n            sound.state = 'stop';\r\n        });\r\n\r\n        sound.play = function (unlock) {\r\n            if (unlock) {\r\n                this.setLock(false);\r\n            }\r\n            if (this.lock) return;\r\n            if (this.state == 'play') {\r\n                this.domEl.currentTime = 0;\r\n            }\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.loop = function () {\r\n            if (this.lock) return;\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.pause = function (lock) {\r\n            if (this.state == 'play') {\r\n                this.setLock(lock);\r\n                this.domEl.pause();\r\n                this.state = 'pause';\r\n            }\r\n        };\r\n\r\n        sound.stop = function (lock) {\r\n            this.domEl.pause();\r\n            this.domEl.currentTime = 0;\r\n            this.state = 'stop';\r\n            if (lock) {\r\n                this.setLock(lock);\r\n            }\r\n        };\r\n\r\n        sound.setLock = function (lock) {\r\n            this.lock = lock ? true : false;\r\n        };\r\n\r\n        sound.setVolume = function (vol) {\r\n            this.domEl.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n            this.volume = this.domEl.volume;\r\n        };\r\n\r\n        sound.getVolume = function (id) {\r\n            return this.volume;\r\n        };\r\n\r\n        sound.getState = function (id) {\r\n            return this.state;\r\n        };\r\n\r\n        sound.getPlayPosition = function () {\r\n            return this.domEl.currentTime;\r\n        };\r\n\r\n        sound.domEl.load();\r\n\r\n        this.audios[id] = sound;\r\n        return sound;\r\n    };\r\n\r\n    AudioHandler.prototype.get = function (id) {\r\n        return this.audios[id];\r\n    };\r\n\r\n    AudioHandler.prototype.pause = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].pause(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.stop = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].stop(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.play = function (unlock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].play(unlock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.deactivate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'play') {\r\n                this.audios[snd].pause();\r\n                this.audios[snd].state = 'deactivated';\r\n            }\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.activate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'deactivated') {\r\n                this.audios[snd].play();\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.AudioHandler = AudioHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.AudioHandler = AudioHandler;\r\n    return AudioHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var InputHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.pos = {x: 0, y: 0};\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.keyDown = [];\r\n        this.keyPress = [];\r\n        this.keyPressed = [];\r\n        this.keyUp = [];\r\n        this.keyUped = false;\r\n        this.mouseDown = [];\r\n        this.mousePress = [];\r\n        this.mousePressed = [];\r\n        this.mouseUp = [];\r\n        this.mouseUpped = false;\r\n        this.mouseWheel = 0;\r\n        this.canceled = false;\r\n        this.body = false;\r\n        this.anyKey = false;\r\n        this.anyMouse = false;\r\n        this.writeMode = false;\r\n        this.displayCursor = '';\r\n        this.visible = true;\r\n        this.enabled = false;\r\n    };\r\n\r\n    InputHandler.prototype.mKey = {\r\n        'LEFT': 1,\r\n        'MIDDLE': 2,\r\n        'RIGHT': 3\r\n    };\r\n\r\n    InputHandler.prototype.jKey = {\r\n        'LEFT': 37,\r\n        'RIGHT': 39,\r\n        'UP': 38,\r\n        'DOWN': 40,\r\n        'SPACE': 32,\r\n        'CTRL': 17,\r\n        'SHIFT': 16,\r\n        'ALT': 18,\r\n        'ESC': 27,\r\n        'ENTER': 13,\r\n        'MINUS': 189,\r\n        'PLUS': 187,\r\n        'CAPS_LOCK': 20,\r\n        'BACKSPACE': 8,\r\n        'TAB': 9,\r\n        'Q': 81,\r\n        'W': 87,\r\n        'E': 69,\r\n        'R': 82,\r\n        'T': 84,\r\n        'Y': 89,\r\n        'U': 85,\r\n        'I': 73,\r\n        'O': 79,\r\n        'P': 80,\r\n        'A': 65,\r\n        'S': 83,\r\n        'D': 68,\r\n        'F': 70,\r\n        'G': 71,\r\n        'H': 72,\r\n        'J': 74,\r\n        'K': 75,\r\n        'L': 76,\r\n        'Z': 90,\r\n        'X': 88,\r\n        'V': 86,\r\n        'B': 66,\r\n        'N': 78,\r\n        'M': 77,\r\n        '0': 48,\r\n        '1': 49,\r\n        '2': 50,\r\n        '3': 51,\r\n        '4': 52,\r\n        '5': 53,\r\n        '6': 54,\r\n        '7': 55,\r\n        '8': 56,\r\n        'C': 67,\r\n        '9': 57,\r\n        'NUM_0': 45,\r\n        'NUM_1': 35,\r\n        'NUM_2': 40,\r\n        'NUM_3': 34,\r\n        'NUM_4': 37,\r\n        'NUM_5': 12,\r\n        'NUM_6': 39,\r\n        'NUM_7': 36,\r\n        'NUM_8': 38,\r\n        'NUM_9': 33,\r\n        'NUM_MINUS': 109,\r\n        'NUM_PLUS': 107,\r\n        'NUM_LOCK': 144,\r\n        'F1': 112,\r\n        'F2': 113,\r\n        'F3': 114,\r\n        'F4': 115,\r\n        'F5': 116,\r\n        'F6': 117,\r\n        'F7': 118,\r\n        'F8': 119,\r\n        'F9': 120,\r\n        'F10': 121,\r\n        'F11': 122,\r\n        'F12': 123\r\n    };\r\n\r\n    InputHandler.prototype.keyList = function () {\r\n        var o = [];\r\n        for (var i in this.jKey) {\r\n            o.push(i);\r\n        }\r\n        return o;\r\n    };\r\n\r\n    InputHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n        this.keyPress = [];\r\n        this.keyUp = [];\r\n        this.mousePress = [];\r\n        this.mouseUp = [];\r\n        this.mouseWheel = 0;\r\n    };\r\n\r\n    InputHandler.prototype.isKeyDown = function (code) {\r\n        return this.keyDown[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyPress = function (code) {\r\n        return this.keyPress[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyUp = function (code) {\r\n        return this.keyUp[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    InputHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    InputHandler.prototype.setWriteMode = function (_true) {\r\n        this.writeMode = _true;\r\n    };\r\n\r\n    InputHandler.prototype.isWriteMode = function () {\r\n        return this.writeMode;\r\n    };\r\n\r\n    InputHandler.prototype.keyEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        if (e.type == 'keydown') {\r\n            if (!this.keyPressed[e.keyCode]) {\r\n                this.keyPress[e.keyCode] = true;\r\n                this.keyPressed[e.keyCode] = true;\r\n            }\r\n            if (!this.writeMode) {\r\n                e.preventDefault();\r\n            } else {\r\n                this.j2Ds.events.onEvent('writeMode:keyPress', '');\r\n            }\r\n        } else if (e.type == 'keyup') {\r\n            if (this.keyPressed[e.keyCode]) {\r\n                e.preventDefault();\r\n                this.keyPress[e.keyCode] = false;\r\n                this.keyPressed[e.keyCode] = false;\r\n                this.keyUp[e.keyCode] = true;\r\n                this.keyUped = true;\r\n            }\r\n        } else if (e.type == 'keypress' && (this.writeMode)) {\r\n            var char = '';\r\n            if (e.which != 0 && e.charCode != 0) {\r\n                if (e.which >= 32) {\r\n                    char = String.fromCharCode(e.which);\r\n                }\r\n            }\r\n            this.j2Ds.events.onEvent('writeMode:keyPress', char);\r\n        }\r\n\r\n        this.keyDown[e.keyCode] = (e.type == 'keydown') && (!this.canceled);\r\n        this.anyKey = e.keyCode;\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.cancel = function (id) {\r\n        if (!id) {\r\n            this.canceled = true;\r\n            this.keyDown = [];\r\n            this.mouseDown = [];\r\n        }\r\n        else {\r\n            this.keyDown[this.jKey[id]] = false;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.onNode = function (id) {\r\n        if (!id.layer.visible) return false;\r\n        return (this.pos.x > id.pos.x && this.pos.x < id.pos.x + id.size.x) &&\r\n            (this.pos.y > id.pos.y && this.pos.y < id.pos.y + id.size.y);\r\n    };\r\n\r\n    InputHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n        this.x = (this.screenPos.x / dX);\r\n        this.y = (this.screenPos.y / dY);\r\n        this.pos.x = this.j2Ds.scene.view.pos.x + this.x;\r\n        this.pos.y = this.j2Ds.scene.view.pos.y + this.y;\r\n    };\r\n\r\n    InputHandler.prototype.onMove = function (e) {\r\n        this.screenPos.x = -this.j2Ds.scene.offsetLeft + e.pageX;\r\n        this.screenPos.y = -this.j2Ds.scene.offsetTop + e.pageY;\r\n    };\r\n\r\n    InputHandler.prototype.isMouseDown = function (code) {\r\n        return this.mouseDown[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMousePress = function (code) {\r\n        return this.mousePress[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseUp = function (code) {\r\n        return this.mouseUp[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseWheel = function (code) {\r\n        return (code == 'UP' && this.mouseWheel > 0) ||\r\n            (code == 'DOWN' && this.mouseWheel < 0)\r\n    };\r\n\r\n    InputHandler.prototype.onMouseWheel = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        this.mouseWheel = ((e.wheelDelta) ? e.wheelDelta : -e.detail);\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.onMouseEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        if (!e.which && e.button) {\r\n            if (e.button & 1) e.which = 1;\r\n            else if (e.button & 4) e.which = 2;\r\n            else if (e.button & 2) e.which = 3;\r\n        }\r\n\r\n        if (e.type == 'mousedown') {\r\n            if (!this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = true;\r\n                this.mousePressed[e.which] = true;\r\n            }\r\n        } else if (e.type == 'mouseup') {\r\n            if (this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = false;\r\n                this.mousePressed[e.which] = false;\r\n                this.mouseUp[e.which] = true;\r\n                this.mouseUped = true;\r\n            }\r\n        }\r\n\r\n        this.mouseDown[e.which] = (e.type == 'mousedown') && (!this.canceled);\r\n\r\n        this.j2Ds.window.focus();\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.setCursorImage = function (curImg) {\r\n        this.j2Ds.dom.tag('body')[0].style.cursor = 'url(\"' + curImg + '\"), auto';\r\n    };\r\n\r\n    InputHandler.prototype.setVisible = function (_true) {\r\n        this.visible = _true;\r\n        if (!_true) {\r\n            this.displayCursor = this.j2Ds.dom.tag('body')[0].style.cursor;\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = 'none';\r\n        } else {\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = this.displayCursor;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    InputHandler.prototype.init = function () {\r\n        var input = this;\r\n        input.enabled = true;\r\n\r\n        input.j2Ds.events.addEvent('engine:before', function () {\r\n            input.upd();\r\n        });\r\n\r\n        input.j2Ds.events.addEvent('engine:after', function () {\r\n            input.reset();\r\n        });\r\n\r\n\r\n        input.j2Ds.events.addEvent('dom:loaded', function () {\r\n            input.j2Ds.window.oncontextmenu = function () {\r\n                return false;\r\n            };\r\n            input.j2Ds.window.onselectstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.ondragstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.onmousedown = input.onMouseEvent;\r\n            input.j2Ds.window.onmouseup = function (e) {\r\n                input.canceled = false;\r\n                input.onMouseEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousemove = function (e) {\r\n                input.onMove(e);\r\n            };\r\n            input.j2Ds.window.onkeydown = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeyup = function (e) {\r\n                input.canceled = false;\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeypress = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousewheel = function (e) {\r\n                input.onMouseWheel(e);\r\n            };\r\n\r\n            if (input.j2Ds.window.addEventListener) {\r\n                input.j2Ds.window.addEventListener(\"DOMMouseScroll\", function (e) {\r\n                    input.onMouseWheel(e);\r\n                }, false);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.InputHandler = InputHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.InputHandler = InputHandler;\r\n    return InputHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/TouchHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var TouchHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.pos = {x: 0, y: 0};\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.canceled = false;\r\n        this.touchs = [];\r\n        this.tapDown = false;\r\n        this.tapPress = false;\r\n        this.tapUp = false;\r\n        this.body = false;\r\n    };\r\n\r\n    TouchHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.cancel = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.isTapDown = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapPress = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapUp = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.getTouch = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.onTouchEvent = function () {\r\n        if (!this.enabled) return false;\r\n\r\n    };\r\n\r\n\r\n    TouchHandler.prototype.init = function () {\r\n        var touchHandler = this;\r\n        touchHandler.enabled = true;\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:before', function () {\r\n            touchHandler.upd();\r\n        });\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:after', function () {\r\n            touchHandler.reset();\r\n        });\r\n\r\n\r\n        touchHandler.j2Ds.events.addEvent('dom:loaded', function () {\r\n\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TouchHandler = TouchHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.TouchHandler = TouchHandler;\r\n    return TouchHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Layers', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Layers = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.layersList = {};\r\n    };\r\n\r\n    Layers.prototype.layer = function (id) {\r\n        return this.layersList[id];\r\n    };\r\n\r\n    Layers.prototype.add = function (id, index, notDOM) {\r\n        if (!!this.layersList[id]) return false;\r\n\r\n        var layer = {\r\n            layerName: id\r\n        };\r\n\r\n        if (!notDOM) {\r\n            layer.canvas = document.createElement('canvas');\r\n        } else {\r\n            layer.canvas = this.j2Ds.dom.id(id);\r\n        }\r\n\r\n        layer.canvas.style.position = this.j2Ds.scene.stylePosition;\r\n\r\n        layer.canvas.id = id;\r\n\r\n        layer.canvas.style.zIndex = 1000 + index;\r\n        layer.canvas.style.left = this.j2Ds.scene.offsetLeft + 'px';\r\n        layer.canvas.style.top = this.j2Ds.scene.offsetTop + 'px';\r\n\r\n        layer.canvas.width = this.j2Ds.scene.width;\r\n        layer.canvas.height = this.j2Ds.scene.height;\r\n        layer.width = this.j2Ds.scene.width;\r\n        layer.height = this.j2Ds.scene.height;\r\n        layer.context = layer.canvas.getContext('2d');\r\n        layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n        layer.alpha = 1;\r\n        layer.angle = 0;\r\n        layer.visible = 1;\r\n\r\n        layer.onContext = function (callback) {\r\n            callback(this.context);\r\n        };\r\n\r\n        layer.fill = function (color) {\r\n            this.context.fillStyle = color;\r\n            this.context.fillRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.setAlpha = function (alpha) {\r\n            this.canvas.style.opacity = alpha;\r\n            this.alpha = alpha;\r\n        };\r\n\r\n        layer.getAlpha = function () {\r\n            return this.alpha;\r\n        };\r\n\r\n        layer.setVisible = function (visible) {\r\n            if (visible) {\r\n                this.canvas.style.display = 'block';\r\n                this.visible = true;\r\n            } else {\r\n                this.canvas.style.display = 'none';\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        layer.isVisible = function () {\r\n            return this.visible;\r\n        };\r\n\r\n        layer.setIndex = function (index) {\r\n            this.canvas.style.zIndex = 1000 + index;\r\n        };\r\n\r\n        layer.clear = function () {\r\n            this.context.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.clearNode = function (node) {\r\n            var layer = this;\r\n            if (node.isLookScene()) {\r\n                this.context.clearRect(\r\n                    node.pos.x - layer.j2Ds.scene.view.pos.x,\r\n                    node.pos.y - layer.j2Ds.scene.view.pos.y,\r\n                    node.size.x,\r\n                    node.size.y\r\n                );\r\n            }\r\n        };\r\n\r\n        layer.setContextSettings = function (settings) {\r\n            for (var i in settings) {\r\n                if (typeof this.context[i] !== 'undefined') {\r\n                    this.context[i] = settings[i];\r\n                }\r\n            }\r\n        };\r\n\r\n        layer.clearRect = function (pos, size) {\r\n            var layer = this;\r\n            this.context.clearRect(pos.x - layer.j2Ds.scene.view.pos.x, pos.y - layer.j2Ds.scene.view.pos.y, size.x, size.y);\r\n        };\r\n\r\n        this.layersList[id] = layer;\r\n\r\n        if (!notDOM) {\r\n            this.j2Ds.dom.attach(this.layersList[id].canvas);\r\n        }\r\n\r\n        return layer;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Layers = Layers;\r\n    if (global.j2Ds !== undefined) global.modules.core.Layers = Layers;\r\n    return Layers;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Scene', [\r\n            'nodes/BaseNode',\r\n            'nodes/CircleNode',\r\n            'nodes/LineNode',\r\n            'nodes/RectNode',\r\n            'nodes/SpriteNode',\r\n            'nodes/TextNode',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('nodes/BaseNode'),\r\n            require('nodes/CircleNode'),\r\n            require('nodes/LineNode'),\r\n            require('nodes/RectNode'),\r\n            require('nodes/SpriteNode'),\r\n            require('nodes/TextNode'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.nodes.BaseNode,\r\n            root.modules.nodes.CircleNode,\r\n            root.modules.nodes.LineNode,\r\n            root.modules.nodes.RectNode,\r\n            root.modules.nodes.SpriteNode,\r\n            root.modules.nodes.TextNode,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (BaseNode,\r\n              CircleNode,\r\n              LineNode,\r\n              RectNode,\r\n              SpriteNode,\r\n              TextNode,\r\n              TextureUtil) {\r\n        \"use strict\";\r\n\r\n        var Scene = function (j2Ds) {\r\n            j2Ds = this.j2Ds = j2Ds;\r\n\r\n            this.nodes = [];\r\n            this.layerName = 'sceneNode';\r\n            this.stylePosition = 'fixed';\r\n            this.layers = j2Ds.layers;\r\n            this.view = false;\r\n            this.gameStateName = false;\r\n            this.canFullScreen = true;\r\n\r\n            this.texture = new TextureUtil(this.j2Ds);\r\n        };\r\n\r\n        /*функции*/\r\n\r\n        Scene.prototype.setView = function (id) {\r\n            this.view = this.j2Ds.viewManager.views[id];\r\n        };\r\n\r\n        Scene.prototype.getView = function () {\r\n            return this.view;\r\n        };\r\n\r\n        Scene.prototype.setAutoDraw = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:after', function () {\r\n                    scene.drawAllNodes();\r\n                }, 'autoDraw');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:after', 'autoDraw');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setAutoClear = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:before', function () {\r\n                    scene.clear();\r\n                }, 'autoClear');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:before', 'autoClear');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setGameState = function (name) {\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name].state) {\r\n                this.j2Ds.setActiveEngine(this.j2Ds.gameStates.states[name].state);\r\n            }\r\n            this.gameStateName = name;\r\n            this.j2Ds.events.onEvent('scene:changedGameState');\r\n        };\r\n\r\n        Scene.prototype.getGameState = function () {\r\n            return this.gameStateName;\r\n        };\r\n\r\n        Scene.prototype.start = function (name, frameLimit) {\r\n            this.j2Ds.events.onEvent('scene:beforeStart');\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name]) {\r\n                this.j2Ds.start(this.j2Ds.gameStates.states[name].state, frameLimit);\r\n            }\r\n            this.j2Ds.events.onEvent('scene:afterStart');\r\n        };\r\n\r\n        Scene.prototype.fullScreen = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            var tmpCanvas = document.createElement('canvas'); // Нужны для копирования содержимого\r\n            var tmpContext = tmpCanvas.getContext('2d');      // При изменении размера\r\n            if (_true) {\r\n                this.origWidth = this.width;\r\n                this.origHeight = this.height;\r\n                this.width = this.j2Ds.getDeviceManager().width;\r\n                this.height = this.j2Ds.getDeviceManager().height;\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i];\r\n                    tmpCanvas.width = layer.width;\r\n                    tmpCanvas.height = layer.height;\r\n                    tmpContext.drawImage(layer.canvas, 0, 0);\r\n                    layer.canvas.width = this.width;\r\n                    layer.canvas.height = this.height;\r\n                    layer.width = this.width;\r\n                    layer.height = this.height;\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n\r\n                    layer.context.drawImage(tmpCanvas, 0, 0, layer.width, layer.height);\r\n                }\r\n            } else {\r\n                this.width = this.origWidth;\r\n                this.height = this.origHeight;\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i];\r\n                    layer.width = this.origWidth;\r\n                    layer.height = this.origHeight;\r\n                    layer.canvas.width = this.origWidth;\r\n                    layer.canvas.height = this.origHeight;\r\n                    this.offsetWidth = this.origWidth;\r\n                    this.offsetHeight = this.origHeight;\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.fullScale = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            if (_true) {\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i].canvas;\r\n                    layer.style.width = this.j2Ds.getDeviceManager().width + 'px';\r\n                    layer.style.height = this.j2Ds.getDeviceManager().height + 'px';\r\n                    this.offsetWidth = this.j2Ds.getDeviceManager().width;\r\n                    this.offsetHeight = this.j2Ds.getDeviceManager().height;\r\n                }\r\n            } else {\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i].canvas;\r\n                    layer.style.width = this.width + 'px';\r\n                    layer.style.height = this.height + 'px';\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.clear = function () {\r\n            this.getLayer().clear();\r\n        };\r\n\r\n        Scene.prototype.getLayer = function () {\r\n            return this.j2Ds.layers.layer(this.layerName);\r\n        };\r\n\r\n        Scene.prototype.drawAllNodes = function () {\r\n            for (var i = 0, len = this.nodes.length; i < len; i += 1) {\r\n                if (this.nodes[i].draw) {\r\n                    this.nodes[i].draw();\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.init = function (width, height, canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = width;\r\n            scene.height = height;\r\n\r\n            scene.origWidth = width;\r\n            scene.origHeight = height;\r\n\r\n            scene.offsetWidth = width;\r\n            scene.offsetHeight = height;\r\n\r\n            scene.offsetLeft = 0;\r\n            scene.offsetTop = 0;\r\n\r\n\r\n            scene.j2Ds.canDeactivate = canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add('sceneNode', 0);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(scene.layerName).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(scene.layerName).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.layersList) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        Scene.prototype.initCanvas = function (id, canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.canFullScreen = false;\r\n\r\n            scene.layerName = id;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = parseInt(scene.j2Ds.dom.id(id).width);\r\n            scene.height = parseInt(scene.j2Ds.dom.id(id).height);\r\n\r\n            scene.origWidth = scene.width;\r\n            scene.origHeight = scene.height;\r\n\r\n            scene.offsetWidth = parseInt(scene.j2Ds.dom.id(id).offsetWidth);\r\n            scene.offsetHeight = parseInt(scene.j2Ds.dom.id(id).offsetHeight);\r\n\r\n            scene.offsetLeft = parseInt(scene.j2Ds.dom.id(id).offsetLeft);\r\n            scene.offsetTop = parseInt(scene.j2Ds.dom.id(id).offsetTop);\r\n\r\n            scene.stylePosition = scene.j2Ds.dom.id(id).style.position == 'fixed' ? 'fixed' : 'absolute';\r\n\r\n            scene.j2Ds.canDeactivate = canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add(id, 0, 1);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(id).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(id).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.layersList) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        /* Nodes */\r\n        Scene.prototype.addBaseNode = function (pos, size) {\r\n            return new BaseNode(this.j2Ds, pos, size);\r\n        };\r\n\r\n        Scene.prototype.addCircleNode = function (pos, radius, color) {\r\n            return new CircleNode(this.j2Ds, pos, radius, color);\r\n        };\r\n\r\n        Scene.prototype.addLineNode = function (pos, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.j2Ds, pos, points, scale, color, width, fill, cFill);\r\n        };\r\n\r\n        Scene.prototype.addRectNode = function (pos, size, color) {\r\n            return new RectNode(this.j2Ds, pos, size, color);\r\n        };\r\n\r\n        Scene.prototype.addSpriteNode = function (pos, size, animation) {\r\n            return new SpriteNode(this.j2Ds, pos, size, animation);\r\n        };\r\n\r\n        Scene.prototype.addTextNode = function (pos, text, sizePx, color, family, width, colorL) {\r\n            return new TextNode(this.j2Ds, pos, text, sizePx, color, family, width, colorL);\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Scene = Scene;\r\n        if (global.j2Ds !== undefined) global.modules.core.Scene = Scene;\r\n        return Scene;\r\n    }));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2Ds', [\r\n            'core/Dom',\r\n            'core/Gui',\r\n            'core/Events',\r\n            'core/Layers',\r\n            'core/Scene',\r\n\r\n            'io/AudioHandler',\r\n            'io/InputHandler',\r\n            'io/TouchHandler',\r\n\r\n            'managers/DeviceManager',\r\n            'managers/ErrorManager',\r\n            'managers/FpsManager',\r\n            'managers/ResourceManager',\r\n            'managers/StorageManager',\r\n            'managers/TimeManager',\r\n            'managers/TriggerManager',\r\n            'managers/ViewManager',\r\n\r\n            'utils/MathUtil',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('core/Dom'),\r\n            require('core/Gui'),\r\n            require('core/Events'),\r\n            require('core/Layers'),\r\n            require('core/Scene'),\r\n\r\n            require('io/AudioHandler'),\r\n            require('io/InputHandler'),\r\n            require('io/TouchHandler'),\r\n\r\n            require('managers/DeviceManager'),\r\n            require('managers/ErrorManager'),\r\n            require('managers/FpsManager'),\r\n            require('managers/ResourceManager'),\r\n            require('managers/StorageManager'),\r\n            require('managers/TimeManager'),\r\n            require('managers/TriggerManager'),\r\n            require('managers/ViewManager'),\r\n\r\n            require('utils/MathUtil'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.core.Dom,\r\n            root.modules.core.Gui,\r\n            root.modules.core.Events,\r\n            root.modules.core.Layers,\r\n            root.modules.core.Scene,\r\n\r\n            root.modules.io.AudioHandler,\r\n            root.modules.io.InputHandler,\r\n            root.modules.io.TouchHandler,\r\n\r\n            root.modules.managers.DeviceManager,\r\n            root.modules.managers.ErrorManager,\r\n            root.modules.managers.FpsManager,\r\n            root.modules.managers.ResourceManager,\r\n            root.modules.managers.StorageManager,\r\n            root.modules.managers.TimeManager,\r\n            root.modules.managers.TriggerManager,\r\n            root.modules.managers.ViewManager,\r\n\r\n            root.modules.utils.MathUtil,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (DOM,\r\n              GUI,\r\n              Events,\r\n              Layers,\r\n              Scene,\r\n              AudioHandler,\r\n              InputHandler,\r\n              TouchHandler,\r\n              DeviceManager,\r\n              ErrorManager,\r\n              FPSManager,\r\n              ResourceManager,\r\n              StorageManager,\r\n              TimeManager,\r\n              TriggerManager,\r\n              ViewManager,\r\n              MathUtil) {\r\n        \"use strict\";\r\n\r\n        var frameLimit = 60;\r\n\r\n        /*------------------ 2D движок --------------------*/\r\n        var j2DsEngine = function () {\r\n            this.vector = {}; //TODO:: is need?\r\n            this.math = {}; //TODO:: is need?\r\n            this.dom = {};\r\n            this.now = Date.now();\r\n            this.dt = 0;\r\n            this.stopAll = 0;\r\n            this.frameLimit = 60;\r\n            this.sceneStartTime = 0;\r\n            this.sceneSkipTime = 0;\r\n            this.engine = function () {\r\n                this.errorManager.show('Не инициализировано ни одно игровое состояние', 'red');\r\n                this.stopEngine();\r\n            };\r\n            this.ready = false;\r\n            this.window = window;\r\n            this.canDeactivate = true;\r\n\r\n            /* Getters & Setters */\r\n\r\n            this.getInfo = function () {\r\n                return {\r\n                    'name': 'j2Ds',\r\n                    'version': '0.6.3',\r\n                    'git': 'https://github.com/SkanerSoft/j2Ds',\r\n                    'site': 'http://j2ds.ru',\r\n                    'description': 'HTML5 2D Game Engine',\r\n                    'author': 'Skaner'\r\n                };\r\n            };\r\n\r\n            this.getFPSManager = function () {\r\n                this.fpsManager.init();\r\n                return this.fpsManager;\r\n            };\r\n\r\n            this.getSceneManager = function () {\r\n                return this.scene;\r\n            };\r\n\r\n            this.getLayerManager = function () {\r\n                return this.layers;\r\n            };\r\n\r\n            this.getTextureManager = function () {\r\n                return this.scene.texture;\r\n            };\r\n\r\n            this.getAudioManager = function () {\r\n                this.audio.init();\r\n                return this.audio;\r\n            };\r\n\r\n            this.getPaintManager = function () {\r\n                return this.paint;\r\n            };\r\n\r\n            this.getIO = function () {\r\n                this.input.init();\r\n                return this.input;\r\n            };\r\n\r\n            this.getTouchIO = function () {\r\n                this.touch.init();\r\n                return this.touch;\r\n            };\r\n\r\n            this.getDOMManager = function () {\r\n                return this.dom;\r\n            };\r\n\r\n            this.getTriggerManager = function () {\r\n                this.trigger.init();\r\n                return this.trigger;\r\n            };\r\n\r\n            this.getMathManager = function () {\r\n                return MathUtil;\r\n            };\r\n\r\n            this.getGameStateManager = function () {\r\n                return this.gameStates;\r\n            };\r\n\r\n            this.getViewManager = function () {\r\n                return this.viewManager;\r\n            };\r\n\r\n            this.getDeviceManager = function () {\r\n                return this.deviceManager;\r\n            };\r\n\r\n            this.getErrorManager = function () {\r\n                this.errorManager.init();\r\n                return this.errorManager;\r\n            };\r\n\r\n            this.getTimeManager = function () {\r\n                return this.timeManager;\r\n            };\r\n\r\n            this.getResourceManager = function () {\r\n                return this.resources;\r\n            };\r\n\r\n            this.setWindow = function (_window) {\r\n                this.window = _window ? _window : window;\r\n            };\r\n\r\n            this.setFrameLimit = function (fps) {\r\n                this.frameLimit = (fps > 0 && fps <= 60) ? fps : 60;\r\n                frameLimit = this.frameLimit;\r\n            };\r\n\r\n            this.setActiveEngine = function (engine) {\r\n                this.engine = typeof engine == 'function'\r\n                    ? engine\r\n                    : this.errorManager.show('Error in \"GameStateManager\"');\r\n            };\r\n\r\n            this.events = new Events(this);\r\n            this.dom = new DOM(this);\r\n            this.gui = new GUI(this);\r\n            this.resources = new ResourceManager(this);\r\n            this.trigger = new TriggerManager(this);\r\n            this.timeManager = new TimeManager(this);\r\n            this.deviceManager = DeviceManager();\r\n            this.errorManager = new ErrorManager(this);\r\n            this.fpsManager = new FPSManager(this);\r\n            this.input = new InputHandler(this);\r\n            this.layers = new Layers(this);\r\n            this.viewManager = new ViewManager(this);\r\n            this.scene = new Scene(this);\r\n\r\n            this.createLocal = function (id) {\r\n                new StorageManager(this, id);\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.gameStates = {\r\n            states: {},\r\n\r\n            add: function (name, _state, start, end) {\r\n                var state = {};\r\n                state.state = _state;\r\n                state.start = start || false;\r\n                state.end = end || false;\r\n\r\n                this.states[name] = state;\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.start = function (engine, frameLimit) {\r\n            this.setActiveEngine(engine);\r\n            this.frameLimit = frameLimit || 60;\r\n            this.sceneSkipTime = 1000.0 / this.frameLimit;\r\n            this.lastTime = Date.now();\r\n            this.dt = 0;\r\n            this.sceneStartTime = this.lastTime;\r\n            this.gameEngine(this);\r\n        };\r\n\r\n        j2DsEngine.prototype.gameEngine = function (j2Ds) {\r\n            j2Ds.now = Date.now();\r\n            setTimeout(function () {\r\n                if (!j2Ds.stopAll) {\r\n                    j2Ds.dt = (j2Ds.now - j2Ds.lastTime) / 100.0;\r\n                    j2Ds.sceneStartTime = j2Ds.now;\r\n                    if (j2Ds.dt > j2Ds.sceneSkipTime / 2) j2Ds.dt = 0;\r\n\r\n                    j2Ds.events.onEvent('engine:before');\r\n\r\n                    try {\r\n                        j2Ds.engine();\r\n                    } catch (err) {\r\n                        j2Ds.errorManager.showError(err);\r\n                    }\r\n\r\n                    j2Ds.events.onEvent('engine:after');\r\n\r\n                    j2Ds.lastTime = j2Ds.now;\r\n\r\n                    requestAnimationFrame(function () {\r\n                        j2Ds.gameEngine(j2Ds);\r\n                    });\r\n                }\r\n            }, (j2Ds.frameLimit < 60 ? j2Ds.sceneSkipTime : 0));\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return window.requestAnimationFrame ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame ||\r\n                function (callback) {\r\n                    window.setTimeout(callback, 1000 / frameLimit);\r\n                };\r\n        })();\r\n\r\n        j2DsEngine.prototype.stopEngine = function () {\r\n            if (!this.canDeactivate) return;\r\n            this.stopAll = true;\r\n        };\r\n\r\n        j2DsEngine.prototype.runEngine = function (j2Ds) {\r\n            j2Ds = j2Ds || this;\r\n            if (!j2Ds.canDeactivate) return;\r\n            if (!j2Ds.stopAll) return;\r\n            j2Ds.stopAll = false;\r\n            requestAnimationFrame(function () {\r\n                j2Ds.gameEngine(j2Ds);\r\n            });\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.modules.core.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.j2Ds = new j2DsEngine();\r\n        return j2DsEngine;\r\n    }\r\n));\r\n"],"sourceRoot":"/source/"}