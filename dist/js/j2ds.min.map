{"version":3,"sources":["j2ds.js","MathUtil.js","TextureUtil.js","Dom.js","Gui.js","Events.js","BaseNode.js","CircleNode.js","LineNode.js","RectNode.js","SpriteNode.js","TextNode.js","DeviceManager.js","ErrorManager.js","FpsManager.js","ResourceManager.js","StorageManager.js","TimeManager.js","TriggerManager.js","ViewManager.js","AudioHandler.js","InputHandler.js","TouchHandler.js","Layers.js","Scene.js","j2Ds.js"],"names":["root","factory","define","amd","module","exports","window","global","MathUtil","v2f","x","y","v2i","toInt","number","rndColor","min","max","opacity","random","omitZero","Math","floor","rad","num","PI","undefined","j2Ds","modules","utils","TextureUtil","this","prototype","createImageMap","_w","_h","callback","textureUtil","resources","add","image","img","loaded","width","height","document","createElement","context","getContext","getAnimation","sourceX","sourceY","sourceW","sourceH","frameCount","imageMap","ok","w","h","loadImageMap","path","crossOrigin","src","addEventListener","o","templates","ellipse","size","color","fillRect","fillStyle","strokeRect","lineWidth","strokeStyle","gradientL","colors","isHorizontal","gradient","createLinearGradient","step","length","i","j","addColorStop","gradientR","pos1","r1","pos2","r2","createRadialGradient","Dom","id","_id","getElementById","name","getElementsByName","tag","_parent","finder","getElementsByTagName","goURL","_url","location","href","reloadURL","attach","dom","events","addEvent","appendChild","injectJavaScript","_code","code","toString","replace","callJava","send","_path","_func","ajax","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","core","Gui","nodes","Events","scene:deactivate","scene:activate","scene:beforeInit","scene:afterInit","scene:beforeStart","scene:afterStart","engine:before","engine:after","scene:changedGameState","writeMode:keyPress","dom:loaded","eventType","push","now","ready","onEvent","destroyEvent","len","splice","args","err","errorManager","showError","require","BaseNode","_j2Ds","pos","visible","alpha","parent","angle","layer","scene","box","offset","resizeBox","setLayer","layers","getLayer","setVisible","isVisible","setAlpha","getAlpha","moveTo","to","t","move","getPosition","setPosition","ceil","setSize","getSize","setParent","getDistance","sqrt","pow","getDistanceXY","abs","isIntersect","x1","x2","y1","y2","isCollision","result","isLookScene","view","turn","setRotation","getRotation","rotateTo","_to","_t","atan2","isOutScene","vector","all","moveDir","speed","cos","sin","drawBox","beginPath","rect","stroke","CircleNode","radius","call","Object","create","constructor","draw","tmpAlpha","globalAlpha","arc","fill","LineNode","points","scale","cFill","lineTo","RectNode","save","translate","rotate","restore","SpriteNode","animation","tmpSpeed","frame","flip","setFlip","drawFrame","show","drawImage","setAnimation","TextNode","text","sizePx","family","colorL","vAlign","hAlign","font","fullText","maxWidth","lines","split","measureText","drawSimpleText","textAlign","textBaseline","strokeText","fillText","getText","setText","DeviceManager","parseInt","documentElement","clientWidth","screen","clientHeight","managers","ErrorManager","mode","enabled","init","_true","runBtn","innerHTML","style","padding","align","position","zIndex","left","top","getDeviceManager","fontSize","backgroundColor","cursor","onmousedown","e","stopPropagation","onclick","runEngine","logListener","elems","pauseBtn","stopEngine","reloadBtn","onerror","string","console","log","setMode","debug","stack","match","file","line","decodeURI","errMess","message","domId","count","execLine","lightSyntax","_type","FpsManager","fps","frameLimit","tmp_of_fps","tmp_of_time","Date","fpsManager","update","getFPS","ResourceManager","added","failed","fail","isLoaded","getProgress","StorageManager","ls","localStorage","alert","saveNode","setItem","JSON","stringify","load","getItem","is","value","loadNode","parse","TimeManager","times","insert","get","TriggerManager","triggers","triggerManager","trigger","command","state","last","run","mSec","job","loop","reset","ViewManager","views","viewManager","viewport","focusNode","AudioHandler","audios","audioHandler","deactivate","activate","files","vol","audio","source","volume","sound","domEl","lock","onePlay","explicitOriginalTarget","currentSrc","setLock","play","unlock","currentTime","pause","stop","setVolume","getVolume","getState","getPlayPosition","snd","io","InputHandler","screenPos","keyDown","keyPress","keyPressed","keyUp","keyUped","mouseDown","mousePress","mousePressed","mouseUp","mouseUpped","mouseWheel","canceled","body","anyKey","anyMouse","writeMode","displayCursor","mKey","LEFT","MIDDLE","RIGHT","jKey","UP","DOWN","SPACE","CTRL","SHIFT","ALT","ESC","ENTER","MINUS","PLUS","CAPS_LOCK","BACKSPACE","TAB","Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","V","B","N","M","0","1","2","3","4","5","6","7","8","C","9","NUM_0","NUM_1","NUM_2","NUM_3","NUM_4","NUM_5","NUM_6","NUM_7","NUM_8","NUM_9","NUM_MINUS","NUM_PLUS","NUM_LOCK","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","keyList","isKeyDown","isKeyPress","isKeyUp","getScreenPosition","setWriteMode","isWriteMode","keyEvent","type","keyCode","preventDefault","char","which","charCode","String","fromCharCode","cancel","onNode","upd","dX","offsetWidth","dY","offsetHeight","onMove","offsetLeft","pageX","offsetTop","pageY","isMouseDown","isMousePress","isMouseUp","isMouseWheel","onMouseWheel","wheelDelta","detail","onMouseEvent","button","mouseUped","focus","setCursorImage","curImg","input","oncontextmenu","onselectstart","ondragstart","onmouseup","onmousemove","onkeydown","onkeyup","onkeypress","onmousewheel","TouchHandler","touchs","tapDown","tapPress","tapUp","isTapDown","isTapPress","isTapUp","getTouch","onTouchEvent","touchHandler","Layers","layersList","index","notDOM","layerName","canvas","stylePosition","shadowColor","onContext","display","setIndex","clear","clearRect","clearNode","node","setContextSettings","settings","Scene","gameStateName","canFullScreen","texture","setView","getView","setAutoDraw","toggle","drawAllNodes","setAutoClear","setGameState","gameStates","states","start","setActiveEngine","getGameState","fullScreen","tmpCanvas","tmpContext","origWidth","origHeight","list","fullScale","_canDeactivate","canDeactivate","cancelClear","onload","onblur","stopAll","onfocus","initCanvas","addBaseNode","addCircleNode","addLineNode","addRectNode","addSpriteNode","addTextNode","DOM","GUI","FPSManager","j2DsEngine","math","dt","sceneStartTime","sceneSkipTime","engine","getInfo","version","git","site","description","author","getFPSManager","getSceneManager","getLayerManager","getTextureManager","getAudioManager","getPaintManager","paint","getIO","getTouchIO","touch","getDOMManager","getTriggerManager","getMathManager","getGameStateManager","getViewManager","deviceManager","getErrorManager","getTimeManager","timeManager","getResourceManager","setWindow","_window","setFrameLimit","gui","createLocal","_state","end","lastTime","gameEngine","setTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame"],"mappings":"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","file":"j2ds.js","sourcesContent":[null,"/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    MathUtil.v2f = function (x, y) {\r\n        return {x: x, y: y};\r\n    };\r\n\r\n    MathUtil.v2i = function (x, y) {\r\n        return {x: (x >> 0), y: (y >> 0)};\r\n    };\r\n\r\n    MathUtil.toInt = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    MathUtil.rndColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    MathUtil.rad = function (num) {\r\n        return num * (Math.PI / 180);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.MathUtil = MathUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.MathUtil = MathUtil;\r\n    return MathUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/TextureUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TextureUtil = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    TextureUtil.prototype.createImageMap = function (_w, _h, callback) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            loaded: false,\r\n            width: _w,\r\n            height: _h\r\n        };\r\n\r\n        image.img = document.createElement('canvas');\r\n        image.context = image.img.getContext('2d');\r\n        image.img.width = image.width;\r\n        image.img.height = image.height;\r\n\r\n        callback(image.context);\r\n        image.loaded = true;\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        textureUtil.j2Ds.resources.ok('createImageMap_' + w + 'x' + h);\r\n\r\n        return image;\r\n    };\r\n\r\n    TextureUtil.prototype.loadImageMap = function (path) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            width: 0,\r\n            height: 0,\r\n            loaded: false\r\n        };\r\n\r\n        image.img = document.createElement('img');\r\n        image.crossOrigin = 'anonymous';\r\n        image.img.src = path;\r\n\r\n        image.img.addEventListener('load', function () {\r\n            image.width = o.img.width;\r\n            image.height = o.img.height;\r\n            image.loaded = true;\r\n            textureUtil.j2Ds.resources.ok(path);\r\n        });\r\n\r\n        image.img.addEventListener('error', function () {\r\n            image.width = 0;\r\n            image.height = 0;\r\n            image.loaded = false;\r\n            //textureUtil.j2Ds.resources.fail(path);\r\n        });\r\n        /* Свойства */\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return image;\r\n    };\r\n\r\n    /* -------------------- */\r\n\r\n    TextureUtil.prototype.templates = {\r\n        ellipse: function (context, size, color) { // TODO??\r\n        },\r\n        fillRect: function (context, size, color) {\r\n            context.fillStyle = color;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        strokeRect: function (context, size, color, lineWidth) {\r\n            context.strokeStyle = color;\r\n            context.lineWidth = lineWidth;\r\n            context.strokeRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientL: function (context, size, colors, isHorizontal) {\r\n            var gradient = context.createLinearGradient(0, 0, size.x, 0);\r\n            var step = 1 / colors.length;\r\n            if (!isHorizontal) {\r\n                gradient = context.createLinearGradient(0, 0, 0, size.y);\r\n            }\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientR: function (context, size, pos1, r1, pos2, r2, colors) {\r\n            var gradient = context.createRadialGradient(pos1.x, pos1.y, r1, pos2.x, pos2.y, r2);\r\n            var step = 1 / colors.length;\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextureUtil = TextureUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.TextureUtil = TextureUtil;\r\n    return TextureUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Dom', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- DOM ---------------*/\r\n    var Dom = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    Dom.prototype.id = function (_id) {\r\n        return document.getElementById(_id);\r\n    };\r\n\r\n    Dom.prototype.name = function (_id) {\r\n        return document.getElementsByName(_id)[0];\r\n    };\r\n\r\n    Dom.prototype.tag = function (_id, _parent) {\r\n        var finder = _parent || document;\r\n        return finder.getElementsByTagName(_id);\r\n    };\r\n\r\n    Dom.prototype.goURL = function (_url) {\r\n        document.location.href = _url;\r\n    };\r\n\r\n    Dom.prototype.reloadURL = function () {\r\n        document.location.href = document.location.href;\r\n    };\r\n\r\n    Dom.prototype.attach = function (_id, _parent) {\r\n        var dom = this;\r\n        this.j2Ds.events.addEvent('dom:loaded', function (_parent) {\r\n            if (!_parent) {\r\n                dom.tag('body')[0].appendChild(_id);\r\n            } else {\r\n                dom.id(_parent).appendChild(_id);\r\n            }\r\n        });\r\n    };\r\n\r\n    Dom.prototype.injectJavaScript = function (_code) {\r\n        var code = _code.toString();\r\n        code = code.replace(/[\\n\\r\\t]/g, ';');\r\n        document.location.href = 'javascript: var injectFunction = (function() {setTimeout(' + code + ', 0);}); injectFunction();';\r\n    };\r\n\r\n    Dom.prototype.callJava = function (_code) {\r\n        document.location.href = 'javacall:' + _code;\r\n    };\r\n\r\n    Dom.prototype.send = function (_path, _func) {\r\n        var ajax = new XMLHttpRequest();\r\n        ajax.open('GET', _path, true);\r\n        ajax.onreadystatechange = function () {\r\n            if (ajax.readyState == 4) {\r\n                if (ajax.status == 200) {\r\n                    _func(ajax.responseText);\r\n                }\r\n            }\r\n        };\r\n        ajax.send(null);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Dom = Dom;\r\n    if (global.j2Ds !== undefined) global.modules.core.Dom = Dom;\r\n    return Dom;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Gui', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- GUI ---------------*/\r\n    var Gui = function () {\r\n        this.nodes = {};\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Gui = Gui;\r\n    if (global.j2Ds !== undefined) global.modules.core.Gui = Gui;\r\n    return Gui;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Events', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Events = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.events = {\r\n            'scene:deactivate': [],\r\n            'scene:activate': [],\r\n\r\n            'scene:beforeInit': [],\r\n            'scene:afterInit': [],\r\n            'scene:beforeStart': [],\r\n            'scene:afterStart': [],\r\n\r\n            'engine:before': [],\r\n            'engine:after': [],\r\n\r\n            'scene:changedGameState': [],\r\n\r\n            'writeMode:keyPress': [],\r\n\r\n            'dom:loaded': []\r\n        };\r\n    };\r\n\r\n\r\n    Events.prototype.addEvent = function (eventType, callback, id) {\r\n        this.events[eventType].push({\r\n            id: id || this.j2Ds.now,\r\n            callback: callback\r\n        });\r\n        if (this.j2Ds.ready && eventType == 'dom:loaded') {\r\n            this.onEvent('dom:loaded');\r\n            return true;\r\n        }\r\n    };\r\n\r\n    Events.prototype.destroyEvent = function (eventType, id) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType][i]['id'] == id) {\r\n                events.events[eventType].splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    Events.prototype.onEvent = function (eventType, args) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType]) {\r\n                try {\r\n                    events.events[eventType][i]['callback'](args || '');\r\n                } catch (err) {\r\n                    events.j2Ds.errorManager.showError(err);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Events = Events;\r\n    if (global.j2Ds !== undefined) global.modules.core.Events = Events;\r\n    return Events;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var BaseNode = function (_j2Ds, pos, size) {\r\n        j2Ds = _j2Ds;\r\n        this.visible = true;\r\n        this.alpha = 1;\r\n        this.pos = pos;\r\n        this.size = size;\r\n        this.parent = false;\r\n        this.angle = 0;\r\n        this.layer = j2Ds.scene;\r\n        this.box = {\r\n            offset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            size: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        j2Ds.scene.nodes.push(this);\r\n    };\r\n\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.box.offset = offset;\r\n        this.box.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? j2Ds.layers.layer(layer) : j2Ds.scene;\r\n    };\r\n\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.visible = !!visible;\r\n    };\r\n\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.alpha = alpha;\r\n    };\r\n\r\n    BaseNode.prototype.getAlpha = function () {\r\n        return this.alpha;\r\n    };\r\n\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(MathUtil.v2f(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    BaseNode.prototype.setPosition = function (pos) {\r\n        if (pos) {\r\n            this.pos = MathUtil.v2f(pos.x - Math.ceil(this.size.x / 2), pos.y - Math.ceil(this.size.y / 2));\r\n        } else {\r\n            return this.pos;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.move = function (pos) {\r\n        this.pos.x += pos.x;\r\n        this.pos.y += pos.y;\r\n    };\r\n\r\n    BaseNode.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x + Math.ceil(this.size.x / 2), this.pos.y + Math.ceil(this.size.y / 2));\r\n    };\r\n\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size) {\r\n            this.size = size;\r\n        } else {\r\n            return this.size;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.size;\r\n    };\r\n\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return MathUtil.v2f(Math.abs(id.getPosition().x - this.getPosition().x), Math.abs(id.getPosition().y - this.getPosition().y));\r\n    };\r\n\r\n    BaseNode.prototype.isIntersect = function (id) {\r\n        var pos = {\r\n            x1: this.pos.x + this.box.offset.x,\r\n            x2: id.pos.x + id.box.offset.x,\r\n            y1: this.pos.y + this.box.offset.y,\r\n            y2: id.pos.y + id.box.offset.y\r\n        };\r\n\r\n        var size = {\r\n            x1: this.size.x + this.box.size.x,\r\n            x2: id.size.x + id.box.size.x,\r\n            y1: this.size.y + this.box.size.y,\r\n            y2: id.size.y + id.box.size.y\r\n        };\r\n\r\n        return (\r\n                (pos.y1 + size.y1 >= pos.y2) &&\r\n                (pos.x1 + size.x1 >= pos.x2)\r\n            ) && (\r\n                (pos.x1 < pos.x2 + size.x2) &&\r\n                (pos.y1 < pos.y2 + size.y2)\r\n            );\r\n    };\r\n\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.size.x / 2 + id.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.size.y / 2 + id.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    BaseNode.prototype.isLookScene = function () {\r\n        return (this.pos.x > j2Ds.scene.view.pos.x + j2Ds.scene.width || this.pos.x + this.size.x < j2Ds.scene.view.pos.x)\r\n            || (this.pos.y > j2Ds.scene.view.pos.y + j2Ds.scene.height || this.pos.y + this.size.y < j2Ds.scene.view.pos.y);\r\n    };\r\n\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.angle = (this.angle % 360);\r\n        this.angle += angle;\r\n    };\r\n\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.angle = angle % 360;\r\n    };\r\n\r\n    BaseNode.prototype.getRotation = function () {\r\n        return this.angle;\r\n    };\r\n\r\n    BaseNode.prototype.rotateTo = function (_to, _t) {\r\n        _t = _t ? _t : 1;\r\n        this.setRotation((Math.atan2(\r\n                (_to.y - this.getPosition().y),\r\n                (_to.x - this.getPosition().x)\r\n            ) * (180 / Math.PI)) / _t);\r\n    };\r\n\r\n    BaseNode.prototype.isOutScene = function () {\r\n        var vector = {};\r\n\r\n        if (this.pos.x + this.size.x >= j2Ds.scene.view.pos.x + j2Ds.scene.width) {\r\n            vector.x = 1;\r\n        } else if (this.pos.x <= j2Ds.scene.view.pos.x) {\r\n            vector.x = -1;\r\n        } else {\r\n            vector.x = 0;\r\n        }\r\n\r\n        if (this.pos.y + this.size.y >= j2Ds.scene.view.pos.y + j2Ds.scene.height) {\r\n            vector.y = 1;\r\n        } else if (this.pos.y <= j2Ds.scene.view.pos.y) {\r\n            vector.y = -1;\r\n        } else {\r\n            vector.y = 0;\r\n        }\r\n\r\n        vector.all = (vector.x || vector.y);\r\n\r\n        return vector;\r\n    };\r\n\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.pos.x += speed * (Math.cos(MathUtil.rad(this.angle)));\r\n        this.pos.y += speed * (Math.sin(MathUtil.rad(this.angle)));\r\n    };\r\n\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.size.x, this.size.y);\r\n        context.stroke();\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(this.box.offset.x + this.pos.x - j2Ds.scene.view.pos.x, this.box.offset.y + this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.box.size.x + this.size.x, this.box.size.y + this.size.y);\r\n        context.stroke();\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.BaseNode = BaseNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CircleNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var CircleNode = function (_j2Ds, pos, radius, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(radius * 2, radius * 2));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.radius = radius;\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.color;\r\n\r\n            context.beginPath();\r\n            context.arc(this.pos.x - j2Ds.scene.view.pos.x + this.radius,\r\n                this.pos.y - j2Ds.scene.view.pos.y + this.radius,\r\n                this.radius, 0, 2 * Math.PI, true);\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.CircleNode = CircleNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.CircleNode = CircleNode;\r\n    return CircleNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/LineNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var LineNode = function (_j2Ds, pos, points, scale, color, width, fill, cFill) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.points = points;\r\n        this.fill = fill || false;\r\n        this.scale = scale || 0;\r\n        this.cFill = cFill;\r\n        this.lineWidth = width;\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.strokeStyle = this.color;\r\n            context.lineWidth = this.lineWidth;\r\n\r\n            context.beginPath();\r\n            context.moveTo(this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y);\r\n\r\n            for (var i = 0, len = this.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.pos.x + this.points[i][0] * this.scale - j2Ds.scene.view.pos.x,\r\n                    this.pos.y + this.points[i][1] * this.scale - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.fill) {\r\n                context.fillStyle = this.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.LineNode = LineNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.LineNode = LineNode;\r\n    return LineNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/RectNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @param _j2Ds\r\n     * @param pos\r\n     * @param size\r\n     * @param color\r\n     * @constructor\r\n     */\r\n    var RectNode = function (_j2Ds, pos, size, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.color = color;\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    RectNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.RectNode = RectNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.RectNode = RectNode;\r\n    return RectNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/SpriteNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var SpriteNode = function (_j2Ds, pos, size, animation) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.tmpSpeed = 0;\r\n        this.frame = 0;\r\n        this.animation = animation;\r\n        this.flip = {x: false, y: false};\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.flip = {x: x, y: y};\r\n    };\r\n\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.frame > this.animation.frameCount) {\r\n                this.frame = 0;\r\n            }\r\n            this.drawFrame(this.frame + 1);\r\n\r\n            if (this.tmpSpeed > speed) {\r\n                this.frame += 1;\r\n                this.tmpSpeed = 0;\r\n            }\r\n            else {\r\n                this.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    // отрисовка одного кадра\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        if (!this.animation.imageMap.loaded) return (err.show('Invalid ImageMap', 'red'));\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.scale(this.flip.x ? -1 : 1, this.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.animation.imageMap.img,\r\n                (this.animation.sourceX + (this.animation.sourceW * frame)), this.animation.sourceY,\r\n                this.animation.sourceW, this.animation.sourceH,\r\n                this.pos.x - j2Ds.scene.view.pos.x, this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    SpriteNode.prototype.setAnimation = function (id) {\r\n        if (this.animation != id) {\r\n            this.animation = id;\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.SpriteNode = SpriteNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.SpriteNode = SpriteNode;\r\n    return SpriteNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/TextNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var TextNode = function (_j2Ds, pos, text, sizePx, color, family, width, colorL) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n\r\n        this.vAlign = 'top';\r\n        this.hAlign = 'left';\r\n        this.color = color ? color : 'black';\r\n\r\n        this.family = family ? family : 'serif';\r\n        this.sizePx = sizePx ? sizePx : 20;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        this.lineWidth = width ? width : 0;\r\n        this.colorL = colorL ? colorL : 'black';\r\n\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype = Object.create(BaseNode.prototype);\r\n    TextNode.prototype.constructor = TextNode;\r\n\r\n    TextNode.prototype.setSize = function (sizePx) {\r\n        this.sizePx = sizePx;\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.getSize = function () {\r\n        return this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.drawSimpleText = function (text, pos, color, colorL) {\r\n        var context = this.layer.context;\r\n        context.fillStyle = color ? color : this.color;\r\n        context.textAlign = this.hAlign;\r\n        context.textBaseline = this.vAlign;\r\n        context.font = this.font;\r\n        context.lineWidth = this.lineWidth;\r\n        context.strokeStyle = colorL ? colorL : this.colorL;\r\n\r\n        var lines = text.split(\"\\n\");\r\n\r\n        pos = pos ? pos : this.pos;\r\n\r\n        if (this.alpha != 1) {\r\n            var tmpAlpha = context.globalAlpha;\r\n            context.globalAlpha = this.alpha;\r\n        }\r\n\r\n        for (var i = 0, len = lines.length; i < len; i += 1) {\r\n            if (this.lineWidth) {\r\n                context.strokeText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n            }\r\n            context.fillText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n        }\r\n\r\n        if (this.alpha != 1) {\r\n            context.globalAlpha = tmpAlpha;\r\n        }\r\n\r\n        context.lineWidth = 0;\r\n        context.strokeStyle = 'black';\r\n    };\r\n\r\n    TextNode.prototype.getText = function () {\r\n        return this.fullText;\r\n    };\r\n\r\n    TextNode.prototype.setText = function (text) {\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.textAlign = this.hAlign;\r\n            context.textBaseline = this.vAlign;\r\n            context.font = this.font;\r\n            context.lineWidth = this.lineWidth;\r\n            context.strokeStyle = this.colorL;\r\n\r\n            for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n                if (this.lineWidth) {\r\n                    context.strokeText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n                }\r\n                context.fillText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.strokeStyle = 'black';\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextNode = TextNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.TextNode = TextNode;\r\n    return TextNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/DeviceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var DeviceManager = function () {\r\n        return {\r\n            width: (parseInt(document.documentElement.clientWidth) < parseInt(screen.width))\r\n                ? parseInt(document.documentElement.clientWidth)\r\n                : parseInt(screen.width),\r\n            height: (parseInt(document.documentElement.clientHeight) < parseInt(screen.height))\r\n                ? parseInt(document.documentElement.clientHeight)\r\n                : parseInt(screen.height)\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.DeviceManager = DeviceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.DeviceManager = DeviceManager;\r\n    return DeviceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ErrorManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ErrorManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.mode = 'neverShow'; // values: onlyShow|stopAndShow|neverShow\r\n        this.enabled = false;\r\n    };\r\n\r\n    ErrorManager.prototype.init = function (_true) {\r\n        var errorManager = this;\r\n        errorManager.enabled = true;\r\n\r\n        var runBtn = document.createElement('div');\r\n        runBtn.innerHTML = '<b>RUN</b>';\r\n        runBtn.style.padding = '5px';\r\n        runBtn.align = 'center';\r\n        runBtn.style.position = 'fixed';\r\n        runBtn.style.zIndex = 20000;\r\n        runBtn.style.left = '0px';\r\n        runBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        runBtn.style.fontSize = '8pt';\r\n        runBtn.style.backgroundColor = '#B8FFB8';\r\n        runBtn.style.height = '12px';\r\n        runBtn.style.width = '50px';\r\n        runBtn.style.cursor = 'pointer';\r\n\r\n        runBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        runBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение продолжено');\r\n            errorManager.j2Ds.runEngine(errorManager.j2Ds);\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(runBtn);\r\n        errorManager.logListener.elems.push(runBtn);\r\n\r\n\r\n        var pauseBtn = document.createElement('div');\r\n        pauseBtn.innerHTML = '<b>PAUSE</b>';\r\n        pauseBtn.style.padding = '5px';\r\n        pauseBtn.align = 'center';\r\n        pauseBtn.style.position = 'fixed';\r\n        pauseBtn.style.zIndex = 20000;\r\n        pauseBtn.style.left = '60px';\r\n        pauseBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        pauseBtn.style.fontSize = '8pt';\r\n        pauseBtn.style.backgroundColor = '#FFFFBD';\r\n        pauseBtn.style.height = '12px';\r\n        pauseBtn.style.width = '50px';\r\n        pauseBtn.style.cursor = 'pointer';\r\n\r\n        pauseBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        pauseBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение приостановлено');\r\n            errorManager.j2Ds.stopEngine();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(pauseBtn);\r\n        errorManager.logListener.elems.push(pauseBtn);\r\n\r\n        var reloadBtn = document.createElement('div');\r\n        reloadBtn.innerHTML = '<b>RELOAD</b>';\r\n        reloadBtn.style.padding = '5px';\r\n        reloadBtn.align = 'center';\r\n        reloadBtn.style.position = 'fixed';\r\n        reloadBtn.style.zIndex = 20000;\r\n        reloadBtn.style.left = '120px';\r\n        reloadBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        reloadBtn.style.fontSize = '8pt';\r\n        reloadBtn.style.backgroundColor = '#E2E2E2';\r\n        reloadBtn.style.color = 'black';\r\n        reloadBtn.style.height = '12px';\r\n        reloadBtn.style.width = '50px';\r\n        reloadBtn.style.cursor = 'pointer';\r\n\r\n        reloadBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        reloadBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.j2Ds.dom.reloadURL();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(reloadBtn);\r\n        errorManager.logListener.elems.push(reloadBtn);\r\n\r\n        errorManager.j2Ds.events.addEvent('dom:loaded', function () {\r\n            errorManager.j2Ds.window.onerror = function (e) {\r\n                errorManager.show(e);\r\n            };\r\n        });\r\n    };\r\n\r\n    ErrorManager.prototype.show = function (string) {\r\n        console.log('[j2Ds]: ' + string);\r\n    };\r\n\r\n    ErrorManager.prototype.setMode = function (mode) {\r\n        this.mode = mode;\r\n        if (mode == 'neverShow') {\r\n            this.enabled = false;\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.debug = function (string) {\r\n        if (!this.enabled) return;\r\n        this.j2Ds.stopEngine();\r\n        if (this.mode != 'neverShow') {\r\n            this.show(string || 'Точка останова достигнута');\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.showError = function (err, _func) {\r\n        if (this.mode == 'neverShow') return;\r\n\r\n        var stack = err.stack.toString();\r\n        stack = stack.split(/\\n/);\r\n\r\n        for (var i = 0, len = stack.length; i < len; i += 1) {\r\n            if (stack[i].match(/\\:\\d/)) {\r\n                stack = stack[i].split(/\\s/);\r\n                break;\r\n            }\r\n        }\r\n\r\n        stack = stack[stack.length - 1];\r\n        stack = stack.replace(/([\\(\\)]|[\\w]+:\\/\\/)/g, '');\r\n        var file = stack.split(':'),\r\n            line = file[1],\r\n            number = file[2];\r\n        file = decodeURI(file[0]);\r\n\r\n        if (file.match(/(<anonymous>|\\bj2Ds.js)/)) {\r\n            file = '<Функция-аргумент или строка>';\r\n        }\r\n\r\n        var errMess = 'Тип ошибки: \"' + err.name + '\"' +\r\n            '\\nСообщение: \"' + err.message + '\"' +\r\n            '\\nФайл с ошибкой: \"' + file + '\"' +\r\n            '\\nСтрока: ' + line +\r\n            ', символ: ' + number;\r\n\r\n        if (_func) {\r\n            errMess += '\\nОшибка в теле функции: \\n' + _func.toString();\r\n        }\r\n\r\n        this.show(errMess);\r\n\r\n        if (this.mode == 'stopAndShow') {\r\n            this.j2Ds.stopEngine();\r\n            this.show('Выполнение приостановлено');\r\n        }\r\n\r\n    };\r\n\r\n    ErrorManager.prototype.logListener = {\r\n        domId: '',\r\n        count: 0,\r\n        execLine: '',\r\n        elems: []\r\n    };\r\n\r\n    ErrorManager.prototype.lightSyntax = function (_code, _type) {\r\n        var code = ('' + _code).toString();\r\n\r\n        if (_type == 'boolean') {\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        } else if (_type == 'code') {\r\n            code = code.replace(/(this|var|typeof|new|return|if|else|for|in|while|break|do|continue|switch|case)([^a-z0-9\\$_])/gi,\r\n                '<span style=\"color: #FFC0CB;\"><b>$1</b></span>$2')\r\n                .replace(/(function|object)/gi,\r\n                    '<span style=\"color: #FFA500;\">$1</span>')\r\n                .replace(/(width|height|window|document|scene|j2Ds|value)/gi,\r\n                    '<span style=\"color: #59B5C0;\">$1</span>')\r\n                .replace(/([a-z\\_\\$][a-z0-9_]*)\\(/gi, '<span style=\"color: #FFCD70;\">$1</span>(')\r\n                .replace(/(\\{|\\}|\\]|\\[|\\|)/gi, '<span style=\"color: #FFFF00;\">$1</span>')\r\n                .replace(/('.*?')/g, '<span style=\"color: #8FFF8F;\">$1</span>')\r\n                .replace(/(#[a-z0-9]{3,8};)/, '<b style=\"color: red;\">$1</b>')\r\n                .replace(/(\\t)/g, '&nbsp;&nbsp;');\r\n\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        }\r\n\r\n        return code;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ErrorManager = ErrorManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ErrorManager = ErrorManager;\r\n    return ErrorManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/FpsManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var FpsManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.fps = this.j2Ds.frameLimit;\r\n        this.tmp_of_fps = 1;\r\n        this.tmp_of_time = Date.now();\r\n    };\r\n\r\n    FpsManager.prototype.init = function () {\r\n        var fpsManager = this;\r\n        fpsManager.enabled = true;\r\n\r\n        this.j2Ds.events.addEvent('engine:after', function () {\r\n            fpsManager.update();\r\n        });\r\n\r\n    };\r\n\r\n    FpsManager.prototype.update = function () {\r\n        if (!this.enabled) return;\r\n        this.tmp_of_fps += 1;\r\n        if (this.j2Ds.now - this.tmp_of_time >= 1000) {\r\n            this.fps = this.tmp_of_fps;\r\n            this.tmp_of_fps = 1;\r\n            this.tmp_of_time = this.j2Ds.now;\r\n        }\r\n    };\r\n\r\n    FpsManager.prototype.getFPS = function () {\r\n        return this.fps <= this.j2Ds.frameLimit ? this.fps : this.j2Ds.frameLimit;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.FpsManager = FpsManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.FpsManager = FpsManager;\r\n    return FpsManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ResourceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ResourceManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.added = 0;\r\n        this.loaded = 0;\r\n        this.failed = 0;\r\n\r\n        this.add = function () {\r\n            this.added += 1;\r\n        };\r\n\r\n        this.ok = function (file) {\r\n            this.loaded += 1;\r\n            this.j2Ds.errorManager.show('loaded: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.fail = function (file) {\r\n            this.failed += 1;\r\n            this.j2Ds.errorManager.show('error load: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.show = function () {\r\n            return {'added': this.added, 'loaded': this.loaded, 'failed': this.failed};\r\n        };\r\n\r\n        this.isLoaded = function () {\r\n            return this.added == this.loaded;\r\n        };\r\n\r\n        this.getProgress = function () {\r\n            return Math.ceil(this.loaded / this.added * 100);\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ResourceManager = ResourceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ResourceManager = ResourceManager;\r\n    return ResourceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/StorageManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var StorageManager = function (j2Ds, id) {\r\n        this.j2Ds = j2Ds;\r\n        this.id = id;\r\n        this.ls = this.j2Ds.window.localStorage ? this.j2Ds.window.localStorage : false;\r\n        if (!this.ls) alert('j2Ds ERROR in \"createLocal(' + id + ')\" \\n' + 'Объект \"localStorage\" не поддерживается.');\r\n    };\r\n\r\n    StorageManager.prototype.saveNode = function (name, o) {\r\n        if (!this.ls) return false;\r\n        this.ls.setItem(this.id + name, JSON.stringify(o));\r\n    };\r\n\r\n    StorageManager.prototype.load = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return this.ls.getItem(this.id + name);\r\n    };\r\n\r\n    StorageManager.prototype.is = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return !!(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    StorageManager.prototype.save = function (name, value) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        this.ls.setItem(this.id + name, value);\r\n    };\r\n\r\n    StorageManager.prototype.loadNode = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return JSON.parse(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.StorageManager = StorageManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.StorageManager = StorageManager;\r\n    return StorageManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TimeManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TimeManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.times = {};\r\n\r\n        this.insert = function (id) {\r\n            if (!this.times[id]) {\r\n                this.times[id] = this.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        this.get = function (id) {\r\n            return this.times[id];\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TimeManager = TimeManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TimeManager = TimeManager;\r\n    return TimeManager;\r\n}));\r\n\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TriggerManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TriggerManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.enabled = false;\r\n        this.triggers = {};\r\n    };\r\n\r\n    TriggerManager.prototype.add = function (id, callback) {\r\n        var triggerManager = this;\r\n        var trigger = {\r\n            command: callback,\r\n            count: 0,\r\n            state: 'stop',\r\n            last: false\r\n        };\r\n\r\n        trigger.run = function (mSec) {\r\n            if (this.state == 'job') {\r\n                this.command();\r\n                return;\r\n            }\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'job';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.job = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec && this.state != 'run') {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.loop = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.reset = function () {\r\n            this.count = 0;\r\n            this.state = 'stop';\r\n            this.last = false;\r\n        };\r\n\r\n        this.triggers[id] = trigger;\r\n        return trigger;\r\n    };\r\n\r\n    TriggerManager.prototype.get = function (id) {\r\n        return this.triggers[id];\r\n    };\r\n\r\n    TriggerManager.prototype.init = function () {\r\n        this.enabled = true;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TriggerManager = TriggerManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TriggerManager = TriggerManager;\r\n    return TriggerManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ViewManager', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var ViewManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.views = {};\r\n    };\r\n\r\n    ViewManager.prototype.add = function (id, pos) {\r\n        var viewManager = this;\r\n        var viewport = {\r\n            focusNode: false\r\n        };\r\n\r\n        viewport.pos = pos ? MathUtil.v2f(pos.x, pos.y) : MathUtil.v2f(0, 0);\r\n\r\n        viewport.setPosition = function (pos) {\r\n            if (!pos) return this;\r\n            this.pos = MathUtil.v2f(pos.x - viewManager.j2Ds.scene.width / 2, pos.y - viewManager.j2Ds.scene.height / 2);\r\n        };\r\n\r\n        viewport.getPosition = function () {\r\n            return this.pos;\r\n        };\r\n\r\n        viewport.move = function (pos) {\r\n            this.pos.x += pos.x;\r\n            this.pos.y += pos.y;\r\n        };\r\n\r\n        viewManager.j2Ds.viewManager.views[id] = viewport;\r\n        return viewport;\r\n    };\r\n\r\n    ViewManager.prototype.get = function (id) {\r\n        return this.j2Ds.viewManager.views[id];\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ViewManager = ViewManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ViewManager = ViewManager;\r\n    return ViewManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/AudioHandler', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var AudioHandler = function () {\r\n        this.audios = {};\r\n        this.enabled = false\r\n    };\r\n\r\n    AudioHandler.prototype.init = function () {\r\n        var audioHandler = this;\r\n        this.enabled = true;\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:deactivate', function () {\r\n            audioHandler.deactivate();\r\n        });\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:activate', function () {\r\n            audioHandler.activate();\r\n        });\r\n\r\n    };\r\n\r\n    AudioHandler.prototype.load = function (id, files, vol) {\r\n        var audioHandler = this;\r\n        audioHandler.j2Ds.resources.add();\r\n        var audio = document.createElement('audio');\r\n\r\n        for (var i = 0, len = files.length; i < len; i += 1) {\r\n            var source = document.createElement('source');\r\n            source.src = files[i];\r\n            audio.appendChild(source);\r\n        }\r\n\r\n        audio.id = 'audio_' + id;\r\n\r\n        if (vol) {\r\n            audio.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n        }\r\n\r\n        var sound = {\r\n            id: id,\r\n            files: files,\r\n            domEl: audio, // DOMElement\r\n            ready: false,\r\n            len: 0,\r\n            state: 'stop',\r\n            lock: false,\r\n            volume: audio.volume,\r\n            onePlay: false\r\n        };\r\n\r\n        sound.domEl.addEventListener('loadeddata', function (e) {\r\n            sound.ready = true;\r\n            var file = e.explicitOriginalTarget || e.path[0];\r\n            audioHandler.j2Ds.resources.ok(file.currentSrc);\r\n        });\r\n\r\n        sound.domEl.addEventListener('error', function (e) {\r\n            sound.setLock(true);\r\n            //var file = e.srcElement || e.target;\r\n            //audioHandler.j2Ds.resources.fail(file.src);\r\n        });\r\n\r\n        sound.domEl.addEventListener('ended', function () {\r\n            sound.state = 'stop';\r\n        });\r\n\r\n        sound.play = function (unlock) {\r\n            if (unlock) {\r\n                this.setLock(false);\r\n            }\r\n            if (this.lock) return;\r\n            if (this.state == 'play') {\r\n                this.domEl.currentTime = 0;\r\n            }\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.loop = function () {\r\n            if (this.lock) return;\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.pause = function (lock) {\r\n            if (this.state == 'play') {\r\n                this.setLock(lock);\r\n                this.domEl.pause();\r\n                this.state = 'pause';\r\n            }\r\n        };\r\n\r\n        sound.stop = function (lock) {\r\n            this.domEl.pause();\r\n            this.domEl.currentTime = 0;\r\n            this.state = 'stop';\r\n            if (lock) {\r\n                this.setLock(lock);\r\n            }\r\n        };\r\n\r\n        sound.setLock = function (lock) {\r\n            this.lock = lock ? true : false;\r\n        };\r\n\r\n        sound.setVolume = function (vol) {\r\n            this.domEl.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n            this.volume = this.domEl.volume;\r\n        };\r\n\r\n        sound.getVolume = function (id) {\r\n            return this.volume;\r\n        };\r\n\r\n        sound.getState = function (id) {\r\n            return this.state;\r\n        };\r\n\r\n        sound.getPlayPosition = function () {\r\n            return this.domEl.currentTime;\r\n        };\r\n\r\n        sound.domEl.load();\r\n\r\n        this.audios[id] = sound;\r\n        return sound;\r\n    };\r\n\r\n    AudioHandler.prototype.get = function (id) {\r\n        return this.audios[id];\r\n    };\r\n\r\n    AudioHandler.prototype.pause = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].pause(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.stop = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].stop(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.play = function (unlock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].play(unlock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.deactivate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'play') {\r\n                this.audios[snd].pause();\r\n                this.audios[snd].state = 'deactivated';\r\n            }\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.activate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'deactivated') {\r\n                this.audios[snd].play();\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.AudioHandler = AudioHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.AudioHandler = AudioHandler;\r\n    return AudioHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var InputHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.pos = {x: 0, y: 0};\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.keyDown = [];\r\n        this.keyPress = [];\r\n        this.keyPressed = [];\r\n        this.keyUp = [];\r\n        this.keyUped = false;\r\n        this.mouseDown = [];\r\n        this.mousePress = [];\r\n        this.mousePressed = [];\r\n        this.mouseUp = [];\r\n        this.mouseUpped = false;\r\n        this.mouseWheel = 0;\r\n        this.canceled = false;\r\n        this.body = false;\r\n        this.anyKey = false;\r\n        this.anyMouse = false;\r\n        this.writeMode = false;\r\n        this.displayCursor = '';\r\n        this.visible = true;\r\n        this.enabled = false;\r\n    };\r\n\r\n    InputHandler.prototype.mKey = {\r\n        'LEFT': 1,\r\n        'MIDDLE': 2,\r\n        'RIGHT': 3\r\n    };\r\n\r\n    InputHandler.prototype.jKey = {\r\n        'LEFT': 37,\r\n        'RIGHT': 39,\r\n        'UP': 38,\r\n        'DOWN': 40,\r\n        'SPACE': 32,\r\n        'CTRL': 17,\r\n        'SHIFT': 16,\r\n        'ALT': 18,\r\n        'ESC': 27,\r\n        'ENTER': 13,\r\n        'MINUS': 189,\r\n        'PLUS': 187,\r\n        'CAPS_LOCK': 20,\r\n        'BACKSPACE': 8,\r\n        'TAB': 9,\r\n        'Q': 81,\r\n        'W': 87,\r\n        'E': 69,\r\n        'R': 82,\r\n        'T': 84,\r\n        'Y': 89,\r\n        'U': 85,\r\n        'I': 73,\r\n        'O': 79,\r\n        'P': 80,\r\n        'A': 65,\r\n        'S': 83,\r\n        'D': 68,\r\n        'F': 70,\r\n        'G': 71,\r\n        'H': 72,\r\n        'J': 74,\r\n        'K': 75,\r\n        'L': 76,\r\n        'Z': 90,\r\n        'X': 88,\r\n        'V': 86,\r\n        'B': 66,\r\n        'N': 78,\r\n        'M': 77,\r\n        '0': 48,\r\n        '1': 49,\r\n        '2': 50,\r\n        '3': 51,\r\n        '4': 52,\r\n        '5': 53,\r\n        '6': 54,\r\n        '7': 55,\r\n        '8': 56,\r\n        'C': 67,\r\n        '9': 57,\r\n        'NUM_0': 45,\r\n        'NUM_1': 35,\r\n        'NUM_2': 40,\r\n        'NUM_3': 34,\r\n        'NUM_4': 37,\r\n        'NUM_5': 12,\r\n        'NUM_6': 39,\r\n        'NUM_7': 36,\r\n        'NUM_8': 38,\r\n        'NUM_9': 33,\r\n        'NUM_MINUS': 109,\r\n        'NUM_PLUS': 107,\r\n        'NUM_LOCK': 144,\r\n        'F1': 112,\r\n        'F2': 113,\r\n        'F3': 114,\r\n        'F4': 115,\r\n        'F5': 116,\r\n        'F6': 117,\r\n        'F7': 118,\r\n        'F8': 119,\r\n        'F9': 120,\r\n        'F10': 121,\r\n        'F11': 122,\r\n        'F12': 123\r\n    };\r\n\r\n    InputHandler.prototype.keyList = function () {\r\n        var o = [];\r\n        for (var i in this.jKey) {\r\n            o.push(i);\r\n        }\r\n        return o;\r\n    };\r\n\r\n    InputHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n        this.keyPress = [];\r\n        this.keyUp = [];\r\n        this.mousePress = [];\r\n        this.mouseUp = [];\r\n        this.mouseWheel = 0;\r\n    };\r\n\r\n    InputHandler.prototype.isKeyDown = function (code) {\r\n        return this.keyDown[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyPress = function (code) {\r\n        return this.keyPress[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyUp = function (code) {\r\n        return this.keyUp[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    InputHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    InputHandler.prototype.setWriteMode = function (_true) {\r\n        this.writeMode = _true;\r\n    };\r\n\r\n    InputHandler.prototype.isWriteMode = function () {\r\n        return this.writeMode;\r\n    };\r\n\r\n    InputHandler.prototype.keyEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        if (e.type == 'keydown') {\r\n            if (!this.keyPressed[e.keyCode]) {\r\n                this.keyPress[e.keyCode] = true;\r\n                this.keyPressed[e.keyCode] = true;\r\n            }\r\n            if (!this.writeMode) {\r\n                e.preventDefault();\r\n            } else {\r\n                this.j2Ds.events.onEvent('writeMode:keyPress', '');\r\n            }\r\n        } else if (e.type == 'keyup') {\r\n            if (this.keyPressed[e.keyCode]) {\r\n                e.preventDefault();\r\n                this.keyPress[e.keyCode] = false;\r\n                this.keyPressed[e.keyCode] = false;\r\n                this.keyUp[e.keyCode] = true;\r\n                this.keyUped = true;\r\n            }\r\n        } else if (e.type == 'keypress' && (this.writeMode)) {\r\n            var char = '';\r\n            if (e.which != 0 && e.charCode != 0) {\r\n                if (e.which >= 32) {\r\n                    char = String.fromCharCode(e.which);\r\n                }\r\n            }\r\n            this.j2Ds.events.onEvent('writeMode:keyPress', char);\r\n        }\r\n\r\n        this.keyDown[e.keyCode] = (e.type == 'keydown') && (!this.canceled);\r\n        this.anyKey = e.keyCode;\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.cancel = function (id) {\r\n        if (!id) {\r\n            this.canceled = true;\r\n            this.keyDown = [];\r\n            this.mouseDown = [];\r\n        }\r\n        else {\r\n            this.keyDown[this.jKey[id]] = false;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.onNode = function (id) {\r\n        if (!id.layer.visible) return false;\r\n        return (this.pos.x > id.pos.x && this.pos.x < id.pos.x + id.size.x) &&\r\n            (this.pos.y > id.pos.y && this.pos.y < id.pos.y + id.size.y);\r\n    };\r\n\r\n    InputHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n        this.x = (this.screenPos.x / dX);\r\n        this.y = (this.screenPos.y / dY);\r\n        this.pos.x = this.j2Ds.scene.view.pos.x + this.x;\r\n        this.pos.y = this.j2Ds.scene.view.pos.y + this.y;\r\n    };\r\n\r\n    InputHandler.prototype.onMove = function (e) {\r\n        this.screenPos.x = -this.j2Ds.scene.offsetLeft + e.pageX;\r\n        this.screenPos.y = -this.j2Ds.scene.offsetTop + e.pageY;\r\n    };\r\n\r\n    InputHandler.prototype.isMouseDown = function (code) {\r\n        return this.mouseDown[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMousePress = function (code) {\r\n        return this.mousePress[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseUp = function (code) {\r\n        return this.mouseUp[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseWheel = function (code) {\r\n        return (code == 'UP' && this.mouseWheel > 0) ||\r\n            (code == 'DOWN' && this.mouseWheel < 0)\r\n    };\r\n\r\n    InputHandler.prototype.onMouseWheel = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        this.mouseWheel = ((e.wheelDelta) ? e.wheelDelta : -e.detail);\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.onMouseEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        if (!e.which && e.button) {\r\n            if (e.button & 1) e.which = 1;\r\n            else if (e.button & 4) e.which = 2;\r\n            else if (e.button & 2) e.which = 3;\r\n        }\r\n\r\n        if (e.type == 'mousedown') {\r\n            if (!this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = true;\r\n                this.mousePressed[e.which] = true;\r\n            }\r\n        } else if (e.type == 'mouseup') {\r\n            if (this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = false;\r\n                this.mousePressed[e.which] = false;\r\n                this.mouseUp[e.which] = true;\r\n                this.mouseUped = true;\r\n            }\r\n        }\r\n\r\n        this.mouseDown[e.which] = (e.type == 'mousedown') && (!this.canceled);\r\n\r\n        this.j2Ds.window.focus();\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.setCursorImage = function (curImg) {\r\n        this.j2Ds.dom.tag('body')[0].style.cursor = 'url(\"' + curImg + '\"), auto';\r\n    };\r\n\r\n    InputHandler.prototype.setVisible = function (_true) {\r\n        this.visible = _true;\r\n        if (!_true) {\r\n            this.displayCursor = this.j2Ds.dom.tag('body')[0].style.cursor;\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = 'none';\r\n        } else {\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = this.displayCursor;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    InputHandler.prototype.init = function () {\r\n        var input = this;\r\n        input.enabled = true;\r\n\r\n        input.j2Ds.events.addEvent('engine:before', function () {\r\n            input.upd();\r\n        });\r\n\r\n        input.j2Ds.events.addEvent('engine:after', function () {\r\n            input.reset();\r\n        });\r\n\r\n\r\n        input.j2Ds.events.addEvent('dom:loaded', function () {\r\n            input.j2Ds.window.oncontextmenu = function () {\r\n                return false;\r\n            };\r\n            input.j2Ds.window.onselectstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.ondragstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.onmousedown = input.onMouseEvent;\r\n            input.j2Ds.window.onmouseup = function (e) {\r\n                input.canceled = false;\r\n                input.onMouseEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousemove = function (e) {\r\n                input.onMove(e);\r\n            };\r\n            input.j2Ds.window.onkeydown = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeyup = function (e) {\r\n                input.canceled = false;\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeypress = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousewheel = function (e) {\r\n                input.onMouseWheel(e);\r\n            };\r\n\r\n            if (input.j2Ds.window.addEventListener) {\r\n                input.j2Ds.window.addEventListener(\"DOMMouseScroll\", function (e) {\r\n                    input.onMouseWheel(e);\r\n                }, false);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.InputHandler = InputHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.InputHandler = InputHandler;\r\n    return InputHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/TouchHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var TouchHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.pos = {x: 0, y: 0};\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.canceled = false;\r\n        this.touchs = [];\r\n        this.tapDown = false;\r\n        this.tapPress = false;\r\n        this.tapUp = false;\r\n        this.body = false;\r\n    };\r\n\r\n    TouchHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.cancel = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.isTapDown = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapPress = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapUp = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.getTouch = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.onTouchEvent = function () {\r\n        if (!this.enabled) return false;\r\n\r\n    };\r\n\r\n\r\n    TouchHandler.prototype.init = function () {\r\n        var touchHandler = this;\r\n        touchHandler.enabled = true;\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:before', function () {\r\n            touchHandler.upd();\r\n        });\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:after', function () {\r\n            touchHandler.reset();\r\n        });\r\n\r\n\r\n        touchHandler.j2Ds.events.addEvent('dom:loaded', function () {\r\n\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TouchHandler = TouchHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.TouchHandler = TouchHandler;\r\n    return TouchHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Layers', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Layers = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.layersList = {};\r\n    };\r\n\r\n    Layers.prototype.layer = function (id) {\r\n        return this.layersList[id];\r\n    };\r\n\r\n    Layers.prototype.add = function (id, index, notDOM) {\r\n        if (!!this.layersList[id]) return false;\r\n\r\n        var layer = {\r\n            layerName: id\r\n        };\r\n\r\n        if (!notDOM) {\r\n            layer.canvas = document.createElement('canvas');\r\n        } else {\r\n            layer.canvas = this.j2Ds.dom.id(id);\r\n        }\r\n\r\n        layer.canvas.style.position = this.j2Ds.scene.stylePosition;\r\n\r\n        layer.canvas.id = id;\r\n\r\n        layer.canvas.style.zIndex = 1000 + index;\r\n        layer.canvas.style.left = this.j2Ds.scene.offsetLeft + 'px';\r\n        layer.canvas.style.top = this.j2Ds.scene.offsetTop + 'px';\r\n\r\n        layer.canvas.width = this.j2Ds.scene.width;\r\n        layer.canvas.height = this.j2Ds.scene.height;\r\n        layer.width = this.j2Ds.scene.width;\r\n        layer.height = this.j2Ds.scene.height;\r\n        layer.context = layer.canvas.getContext('2d');\r\n        layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n        layer.alpha = 1;\r\n        layer.angle = 0;\r\n        layer.visible = 1;\r\n\r\n        layer.onContext = function (callback) {\r\n            callback(this.context);\r\n        };\r\n\r\n        layer.fill = function (color) {\r\n            this.context.fillStyle = color;\r\n            this.context.fillRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.setAlpha = function (alpha) {\r\n            this.canvas.style.opacity = alpha;\r\n            this.alpha = alpha;\r\n        };\r\n\r\n        layer.getAlpha = function () {\r\n            return this.alpha;\r\n        };\r\n\r\n        layer.setVisible = function (visible) {\r\n            if (visible) {\r\n                this.canvas.style.display = 'block';\r\n                this.visible = true;\r\n            } else {\r\n                this.canvas.style.display = 'none';\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        layer.isVisible = function () {\r\n            return this.visible;\r\n        };\r\n\r\n        layer.setIndex = function (index) {\r\n            this.canvas.style.zIndex = 1000 + index;\r\n        };\r\n\r\n        layer.clear = function () {\r\n            this.context.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.clearNode = function (node) {\r\n            var layer = this;\r\n            if (node.isLookScene()) {\r\n                this.context.clearRect(\r\n                    node.pos.x - layer.j2Ds.scene.view.pos.x,\r\n                    node.pos.y - layer.j2Ds.scene.view.pos.y,\r\n                    node.size.x,\r\n                    node.size.y\r\n                );\r\n            }\r\n        };\r\n\r\n        layer.setContextSettings = function (settings) {\r\n            for (var i in settings) {\r\n                if (typeof this.context[i] !== 'undefined') {\r\n                    this.context[i] = settings[i];\r\n                }\r\n            }\r\n        };\r\n\r\n        layer.clearRect = function (pos, size) {\r\n            var layer = this;\r\n            this.context.clearRect(pos.x - layer.j2Ds.scene.view.pos.x, pos.y - layer.j2Ds.scene.view.pos.y, size.x, size.y);\r\n        };\r\n\r\n        this.layersList[id] = layer;\r\n\r\n        if (!notDOM) {\r\n            this.j2Ds.dom.attach(this.layersList[id].canvas);\r\n        }\r\n\r\n        return layer;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Layers = Layers;\r\n    if (global.j2Ds !== undefined) global.modules.core.Layers = Layers;\r\n    return Layers;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Scene', [\r\n            'nodes/BaseNode',\r\n            'nodes/CircleNode',\r\n            'nodes/LineNode',\r\n            'nodes/RectNode',\r\n            'nodes/SpriteNode',\r\n            'nodes/TextNode',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('nodes/BaseNode'),\r\n            require('nodes/CircleNode'),\r\n            require('nodes/LineNode'),\r\n            require('nodes/RectNode'),\r\n            require('nodes/SpriteNode'),\r\n            require('nodes/TextNode'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.nodes.BaseNode,\r\n            root.modules.nodes.CircleNode,\r\n            root.modules.nodes.LineNode,\r\n            root.modules.nodes.RectNode,\r\n            root.modules.nodes.SpriteNode,\r\n            root.modules.nodes.TextNode,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (BaseNode,\r\n              CircleNode,\r\n              LineNode,\r\n              RectNode,\r\n              SpriteNode,\r\n              TextNode,\r\n              TextureUtil) {\r\n        \"use strict\";\r\n\r\n        var Scene = function (j2Ds) {\r\n            j2Ds = this.j2Ds = j2Ds;\r\n\r\n            this.nodes = [];\r\n            this.layerName = 'sceneNode';\r\n            this.stylePosition = 'fixed';\r\n            this.layers = j2Ds.layers;\r\n            this.view = false;\r\n            this.gameStateName = false;\r\n            this.canFullScreen = true;\r\n\r\n            this.texture = new TextureUtil(this.j2Ds);\r\n        };\r\n\r\n        /*функции*/\r\n\r\n        Scene.prototype.setView = function (_id) {\r\n            this.view = this.j2Ds.viewManager.views[_id];\r\n        };\r\n\r\n        Scene.prototype.getView = function () {\r\n            return this.view;\r\n        };\r\n\r\n        Scene.prototype.setAutoDraw = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:after', function () {\r\n                    scene.drawAllNodes();\r\n                }, 'autoDraw');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:after', 'autoDraw');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setAutoClear = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:before', function () {\r\n                    scene.clear();\r\n                }, 'autoClear');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:before', 'autoClear');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setGameState = function (name) {\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name].state) {\r\n                this.j2Ds.setActiveEngine(this.j2Ds.gameStates.states[name].state);\r\n            }\r\n            this.gameStateName = name;\r\n            this.j2Ds.events.onEvent('scene:changedGameState');\r\n        };\r\n\r\n        Scene.prototype.getGameState = function () {\r\n            return this.gameStateName;\r\n        };\r\n\r\n        Scene.prototype.start = function (name, frameLimit) {\r\n            this.j2Ds.events.onEvent('scene:beforeStart');\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name]) {\r\n                this.j2Ds.start(this.j2Ds.gameStates.states[name].state, frameLimit);\r\n            }\r\n            this.j2Ds.events.onEvent('scene:afterStart');\r\n        };\r\n\r\n        Scene.prototype.fullScreen = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            var tmpCanvas = document.createElement('canvas'); // Нужны для копирования содержимого\r\n            var tmpContext = tmpCanvas.getContext('2d');      // При изменении размера\r\n            if (_true) {\r\n                this.origWidth = this.width;\r\n                this.origHeight = this.height;\r\n                this.width = this.j2Ds.getDeviceManager().width;\r\n                this.height = this.j2Ds.getDeviceManager().height;\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i];\r\n                    tmpCanvas.width = layer.width;\r\n                    tmpCanvas.height = layer.height;\r\n                    tmpContext.drawImage(layer.canvas, 0, 0);\r\n                    layer.canvas.width = this.width;\r\n                    layer.canvas.height = this.height;\r\n                    layer.width = this.width;\r\n                    layer.height = this.height;\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n\r\n                    layer.context.drawImage(tmpCanvas, 0, 0, layer.width, layer.height);\r\n                }\r\n            } else {\r\n                this.width = this.origWidth;\r\n                this.height = this.origHeight;\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i];\r\n                    layer.width = this.origWidth;\r\n                    layer.height = this.origHeight;\r\n                    layer.canvas.width = this.origWidth;\r\n                    layer.canvas.height = this.origHeight;\r\n                    this.offsetWidth = this.origWidth;\r\n                    this.offsetHeight = this.origHeight;\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.fullScale = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            if (_true) {\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i].canvas;\r\n                    layer.style.width = this.j2Ds.getDeviceManager().width + 'px';\r\n                    layer.style.height = this.j2Ds.getDeviceManager().height + 'px';\r\n                    this.offsetWidth = this.j2Ds.getDeviceManager().width;\r\n                    this.offsetHeight = this.j2Ds.getDeviceManager().height;\r\n                }\r\n            } else {\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i].canvas;\r\n                    layer.style.width = this.width + 'px';\r\n                    layer.style.height = this.height + 'px';\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.clear = function () {\r\n            this.getLayer().clear();\r\n        };\r\n\r\n        Scene.prototype.getLayer = function () {\r\n            return this.j2Ds.layers.layer(this.layerName);\r\n        };\r\n\r\n        Scene.prototype.drawAllNodes = function () {\r\n            for (var i = 0, len = this.nodes.length; i < len; i += 1) {\r\n                if (this.nodes[i].draw) {\r\n                    this.nodes[i].draw();\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.init = function (_w, _h, _canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = _w;\r\n            scene.height = _h;\r\n\r\n            scene.origWidth = _w;\r\n            scene.origHeight = _h;\r\n\r\n            scene.offsetWidth = _w;\r\n            scene.offsetHeight = _h;\r\n\r\n            scene.offsetLeft = 0;\r\n            scene.offsetTop = 0;\r\n\r\n\r\n            scene.j2Ds.canDeactivate = _canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add('sceneNode', 0);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(scene.layerName).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(scene.layerName).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.list) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        Scene.prototype.initCanvas = function (_id, _canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.canFullScreen = false;\r\n\r\n            scene.layerName = _id;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = parseInt(scene.j2Ds.dom.id(_id).width);\r\n            scene.height = parseInt(scene.j2Ds.dom.id(_id).height);\r\n\r\n            scene.origWidth = scene.width;\r\n            scene.origHeight = scene.height;\r\n\r\n            scene.offsetWidth = parseInt(scene.j2Ds.dom.id(_id).offsetWidth);\r\n            scene.offsetHeight = parseInt(scene.j2Ds.dom.id(_id).offsetHeight);\r\n\r\n            scene.offsetLeft = parseInt(scene.j2Ds.dom.id(_id).offsetLeft);\r\n            scene.offsetTop = parseInt(scene.j2Ds.dom.id(_id).offsetTop);\r\n\r\n            scene.stylePosition = scene.j2Ds.dom.id(_id).style.position == 'fixed' ? 'fixed' : 'absolute';\r\n\r\n            scene.j2Ds.canDeactivate = _canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add(_id, 0, 1);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(_id).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(_id).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.list) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        /* Nodes */\r\n        Scene.prototype.addBaseNode = function (pos, size) {\r\n            return new BaseNode(this.j2Ds, pos, size);\r\n        };\r\n\r\n        Scene.prototype.addCircleNode = function (pos, radius, color) {\r\n            return new CircleNode(this.j2Ds, pos, radius, color);\r\n        };\r\n\r\n        Scene.prototype.addLineNode = function (pos, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.j2Ds, pos, points, scale, color, width, fill, cFill);\r\n        };\r\n\r\n        Scene.prototype.addRectNode = function (pos, size, color) {\r\n            return new RectNode(this.j2Ds, pos, size, color);\r\n        };\r\n\r\n        Scene.prototype.addSpriteNode = function (pos, size, animation) {\r\n            return new SpriteNode(this.j2Ds, pos, size, animation);\r\n        };\r\n\r\n        Scene.prototype.addTextNode = function (pos, text, sizePx, color, family, width, colorL) {\r\n            return new TextNode(this.j2Ds, pos, text, sizePx, color, family, width, colorL);\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Scene = Scene;\r\n        if (global.j2Ds !== undefined) global.modules.core.Scene = Scene;\r\n        return Scene;\r\n    }));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2Ds', [\r\n            'core/Dom',\r\n            'core/Gui',\r\n            'core/Events',\r\n            'core/Layers',\r\n            'core/Scene',\r\n\r\n            'io/AudioHandler',\r\n            'io/InputHandler',\r\n            'io/TouchHandler',\r\n\r\n            'managers/DeviceManager',\r\n            'managers/ErrorManager',\r\n            'managers/FpsManager',\r\n            'managers/ResourceManager',\r\n            'managers/StorageManager',\r\n            'managers/TimeManager',\r\n            'managers/TriggerManager',\r\n            'managers/ViewManager',\r\n\r\n            'utils/MathUtil',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('core/Dom'),\r\n            require('core/Gui'),\r\n            require('core/Events'),\r\n            require('core/Layers'),\r\n            require('core/Scene'),\r\n\r\n            require('io/AudioHandler'),\r\n            require('io/InputHandler'),\r\n            require('io/TouchHandler'),\r\n\r\n            require('managers/DeviceManager'),\r\n            require('managers/ErrorManager'),\r\n            require('managers/FpsManager'),\r\n            require('managers/ResourceManager'),\r\n            require('managers/StorageManager'),\r\n            require('managers/TimeManager'),\r\n            require('managers/TriggerManager'),\r\n            require('managers/ViewManager'),\r\n\r\n            require('utils/MathUtil'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.core.Dom,\r\n            root.modules.core.Gui,\r\n            root.modules.core.Events,\r\n            root.modules.core.Layers,\r\n            root.modules.core.Scene,\r\n\r\n            root.modules.io.AudioHandler,\r\n            root.modules.io.InputHandler,\r\n            root.modules.io.TouchHandler,\r\n\r\n            root.modules.managers.DeviceManager,\r\n            root.modules.managers.ErrorManager,\r\n            root.modules.managers.FpsManager,\r\n            root.modules.managers.ResourceManager,\r\n            root.modules.managers.StorageManager,\r\n            root.modules.managers.TimeManager,\r\n            root.modules.managers.TriggerManager,\r\n            root.modules.managers.ViewManager,\r\n\r\n            root.modules.utils.MathUtil,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (DOM,\r\n              GUI,\r\n              Events,\r\n              Layers,\r\n              Scene,\r\n              AudioHandler,\r\n              InputHandler,\r\n              TouchHandler,\r\n              DeviceManager,\r\n              ErrorManager,\r\n              FPSManager,\r\n              ResourceManager,\r\n              StorageManager,\r\n              TimeManager,\r\n              TriggerManager,\r\n              ViewManager,\r\n              MathUtil) {\r\n        \"use strict\";\r\n\r\n        var frameLimit = 60;\r\n\r\n        /*------------------ 2D движок --------------------*/\r\n        var j2DsEngine = function () {\r\n            this.vector = {};\r\n            this.math = {};\r\n            this.dom = {};\r\n            this.now = Date.now();\r\n            this.dt = 0;\r\n            this.stopAll = 0;\r\n            this.frameLimit = 60;\r\n            this.sceneStartTime = 0;\r\n            this.sceneSkipTime = 0;\r\n            this.engine = function () {\r\n                this.errorManager.show('Не инициализировано ни одно игровое состояние', 'red');\r\n                this.stopEngine();\r\n            };\r\n            this.ready = false;\r\n            this.window = window;\r\n            this.canDeactivate = true;\r\n\r\n            /* Getters & Setters */\r\n\r\n            this.getInfo = function () {\r\n                return {\r\n                    'name': 'j2Ds',\r\n                    'version': '0.6.3',\r\n                    'git': 'https://github.com/SkanerSoft/j2Ds',\r\n                    'site': 'http://j2ds.ru',\r\n                    'description': 'HTML5 2D Game Engine',\r\n                    'author': 'Skaner'\r\n                };\r\n            };\r\n\r\n            this.getFPSManager = function () {\r\n                this.fpsManager.init();\r\n                return this.fpsManager;\r\n            };\r\n\r\n            this.getSceneManager = function () {\r\n                return this.scene;\r\n            };\r\n\r\n            this.getLayerManager = function () {\r\n                return this.layers;\r\n            };\r\n\r\n            this.getTextureManager = function () {\r\n                return this.scene.texture;\r\n            };\r\n\r\n            this.getAudioManager = function () {\r\n                this.audio.init();\r\n                return this.audio;\r\n            };\r\n\r\n            this.getPaintManager = function () {\r\n                return this.paint;\r\n            };\r\n\r\n            this.getIO = function () {\r\n                this.input.init();\r\n                return this.input;\r\n            };\r\n\r\n            this.getTouchIO = function () {\r\n                this.touch.init();\r\n                return this.touch;\r\n            };\r\n\r\n            this.getDOMManager = function () {\r\n                return this.dom;\r\n            };\r\n\r\n            this.getTriggerManager = function () {\r\n                this.trigger.init();\r\n                return this.trigger;\r\n            };\r\n\r\n            this.getMathManager = function () {\r\n                return MathUtil;\r\n            };\r\n\r\n            this.getGameStateManager = function () {\r\n                return this.gameStates;\r\n            };\r\n\r\n            this.getViewManager = function () {\r\n                return this.viewManager;\r\n            };\r\n\r\n            this.getDeviceManager = function () {\r\n                return this.deviceManager;\r\n            };\r\n\r\n            this.getErrorManager = function () {\r\n                this.errorManager.init();\r\n                return this.errorManager;\r\n            };\r\n\r\n            this.getTimeManager = function () {\r\n                return this.timeManager;\r\n            };\r\n\r\n            this.getResourceManager = function () {\r\n                return this.resources;\r\n            };\r\n\r\n            this.setWindow = function (_window) {\r\n                this.window = _window ? _window : window;\r\n            };\r\n\r\n            this.setFrameLimit = function (fps) {\r\n                this.frameLimit = (fps > 0 && fps <= 60) ? fps : 60;\r\n                frameLimit = this.frameLimit;\r\n            };\r\n\r\n            this.setActiveEngine = function (engine) {\r\n                this.engine = typeof engine == 'function'\r\n                    ? engine\r\n                    : this.errorManager.show('Error in \"GameStateManager\"');\r\n            };\r\n\r\n            this.events = new Events(this);\r\n            this.dom = new DOM(this);\r\n            this.gui = new GUI(this);\r\n            this.resources = new ResourceManager(this);\r\n            this.timeManager = new TimeManager(this);\r\n            this.deviceManager = DeviceManager();\r\n            this.errorManager = new ErrorManager(this);\r\n            this.fpsManager = new FPSManager(this);\r\n            this.input = new InputHandler(this);\r\n            this.layers = new Layers(this);\r\n            this.viewManager = new ViewManager(this);\r\n            this.scene = new Scene(this);\r\n\r\n            this.createLocal = function (id) {\r\n                new StorageManager(this, id);\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.gameStates = {\r\n            states: {},\r\n\r\n            add: function (name, _state, start, end) {\r\n                var state = {};\r\n                state.state = _state;\r\n                state.start = start || false;\r\n                state.end = end || false;\r\n\r\n                this.states[name] = state;\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.start = function (engine, frameLimit) {\r\n            this.setActiveEngine(engine);\r\n            this.frameLimit = frameLimit || 60;\r\n            this.sceneSkipTime = 1000.0 / this.frameLimit;\r\n            this.lastTime = Date.now();\r\n            this.dt = 0;\r\n            this.sceneStartTime = this.lastTime;\r\n            this.gameEngine(this);\r\n        };\r\n\r\n        j2DsEngine.prototype.gameEngine = function (j2Ds) {\r\n            j2Ds.now = Date.now();\r\n            setTimeout(function () {\r\n                if (!j2Ds.stopAll) {\r\n                    j2Ds.dt = (j2Ds.now - j2Ds.lastTime) / 100.0;\r\n                    j2Ds.sceneStartTime = j2Ds.now;\r\n                    if (j2Ds.dt > j2Ds.sceneSkipTime / 2) j2Ds.dt = 0;\r\n\r\n                    j2Ds.events.onEvent('engine:before');\r\n\r\n                    try {\r\n                        j2Ds.engine();\r\n                    } catch (err) {\r\n                        j2Ds.errorManager.showError(err);\r\n                    }\r\n\r\n                    j2Ds.events.onEvent('engine:after');\r\n\r\n                    j2Ds.lastTime = j2Ds.now;\r\n\r\n                    requestAnimationFrame(function () {\r\n                        j2Ds.gameEngine(j2Ds);\r\n                    });\r\n                }\r\n            }, (j2Ds.frameLimit < 60 ? j2Ds.sceneSkipTime : 0));\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return window.requestAnimationFrame ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame ||\r\n                function (callback) {\r\n                    window.setTimeout(callback, 1000 / frameLimit);\r\n                };\r\n        })();\r\n\r\n        j2DsEngine.prototype.stopEngine = function () {\r\n            if (!this.canDeactivate) return;\r\n            this.stopAll = true;\r\n        };\r\n\r\n        j2DsEngine.prototype.runEngine = function (j2Ds) {\r\n            j2Ds = j2Ds || this;\r\n            if (!j2Ds.canDeactivate) return;\r\n            if (!j2Ds.stopAll) return;\r\n            j2Ds.stopAll = false;\r\n            requestAnimationFrame(function () {\r\n                j2Ds.gameEngine(j2Ds);\r\n            });\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.modules.core.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.j2Ds = new j2DsEngine();\r\n        return j2DsEngine;\r\n    }\r\n));\r\n"],"sourceRoot":"/source/"}