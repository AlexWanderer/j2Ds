{"version":3,"sources":["j2ds.js","MathUtil.js","TextureUtil.js","Dom.js","Gui.js","Events.js","BaseNode.js","CircleNode.js","LineNode.js","RectNode.js","SpriteNode.js","TextNode.js","DeviceManager.js","ErrorManager.js","FpsManager.js","ResourceManager.js","StorageManager.js","TimeManager.js","TriggerManager.js","ViewManager.js","AudioHandler.js","InputHandler.js","TouchHandler.js","Layers.js","Scene.js","j2Ds.js"],"names":["root","factory","define","amd","module","exports","window","global","MathUtil","v2f","x","y","v2i","toInt","number","rndColor","min","max","opacity","random","omitZero","Math","floor","rad","num","PI","undefined","j2Ds","modules","utils","TextureUtil","this","prototype","createImageMap","_w","_h","callback","textureUtil","resources","add","image","img","loaded","width","height","document","createElement","context","getContext","getAnimation","sourceX","sourceY","sourceW","sourceH","frameCount","imageMap","ok","w","h","loadImageMap","path","crossOrigin","src","addEventListener","o","templates","ellipse","size","color","fillRect","fillStyle","strokeRect","lineWidth","strokeStyle","gradientL","colors","isHorizontal","gradient","createLinearGradient","step","length","i","j","addColorStop","gradientR","pos1","r1","pos2","r2","createRadialGradient","Dom","id","_id","getElementById","name","getElementsByName","tag","_parent","finder","getElementsByTagName","goURL","_url","location","href","reloadURL","attach","dom","events","addEvent","appendChild","injectJavaScript","_code","code","toString","replace","callJava","send","_path","_func","ajax","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","core","Gui","nodes","Events","scene:deactivate","scene:activate","scene:beforeInit","scene:afterInit","scene:beforeStart","scene:afterStart","engine:before","engine:after","scene:changedGameState","writeMode:keyPress","dom:loaded","eventType","push","now","ready","onEvent","destroyEvent","len","splice","args","err","errorManager","showError","require","BaseNode","_j2Ds","pos","visible","alpha","parent","angle","layer","scene","box","offset","resizeBox","setLayer","layers","getLayer","setVisible","isVisible","setAlpha","getAlpha","moveTo","to","t","move","getPosition","setPosition","ceil","setSize","getSize","setParent","getDistance","sqrt","pow","getDistanceXY","abs","isIntersect","x1","x2","y1","y2","isCollision","result","isLookScene","view","turn","setRotation","getRotation","isOutScene","vector","all","moveDir","speed","cos","sin","drawBox","beginPath","rect","stroke","CircleNode","radius","call","Object","create","constructor","draw","tmpAlpha","globalAlpha","arc","fill","LineNode","points","scale","cFill","lineTo","RectNode","save","translate","rotate","restore","SpriteNode","animation","tmpSpeed","frame","flip","setFlip","drawFrame","show","drawImage","setAnimation","TextNode","text","sizePx","family","colorL","vAlign","hAlign","font","fullText","maxWidth","lines","split","measureText","drawSimpleText","textAlign","textBaseline","strokeText","fillText","getText","setText","DeviceManager","parseInt","documentElement","clientWidth","screen","clientHeight","managers","ErrorManager","mode","enabled","init","_true","runBtn","innerHTML","style","padding","align","position","zIndex","left","top","getDeviceManager","fontSize","backgroundColor","cursor","onmousedown","e","stopPropagation","onclick","runEngine","logListener","elems","pauseBtn","stopEngine","reloadBtn","onerror","string","console","log","setMode","debug","stack","match","file","line","decodeURI","errMess","message","domId","count","execLine","lightSyntax","_type","FpsManager","fps","frameLimit","tmp_of_fps","tmp_of_time","Date","fpsManager","update","getFPS","ResourceManager","added","failed","fail","isLoaded","getProgress","StorageManager","ls","localStorage","alert","saveNode","setItem","JSON","stringify","load","getItem","is","value","loadNode","parse","TimeManager","times","insert","get","TriggerManager","triggers","triggerManager","trigger","command","state","last","run","mSec","job","loop","reset","ViewManager","views","viewManager","viewport","focusNode","AudioHandler","audios","audioHandler","deactivate","activate","files","vol","audio","source","volume","sound","domEl","lock","onePlay","explicitOriginalTarget","currentSrc","setLock","play","unlock","currentTime","pause","stop","setVolume","getVolume","getState","getPlayPosition","snd","io","InputHandler","screenPos","keyDown","keyPress","keyPressed","keyUp","keyUped","mouseDown","mousePress","mousePressed","mouseUp","mouseUpped","mouseWheel","canceled","body","anyKey","anyMouse","writeMode","displayCursor","mKey","LEFT","MIDDLE","RIGHT","jKey","UP","DOWN","SPACE","CTRL","SHIFT","ALT","ESC","ENTER","MINUS","PLUS","CAPS_LOCK","BACKSPACE","TAB","Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","V","B","N","M","0","1","2","3","4","5","6","7","8","C","9","NUM_0","NUM_1","NUM_2","NUM_3","NUM_4","NUM_5","NUM_6","NUM_7","NUM_8","NUM_9","NUM_MINUS","NUM_PLUS","NUM_LOCK","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","keyList","isKeyDown","isKeyPress","isKeyUp","getScreenPosition","setWriteMode","isWriteMode","keyEvent","type","keyCode","preventDefault","char","which","charCode","String","fromCharCode","cancel","onNode","upd","dX","offsetWidth","dY","offsetHeight","onMove","offsetLeft","pageX","offsetTop","pageY","isMouseDown","isMousePress","isMouseUp","isMouseWheel","onMouseWheel","wheelDelta","detail","onMouseEvent","button","mouseUped","focus","setCursorImage","curImg","input","oncontextmenu","onselectstart","ondragstart","onmouseup","onmousemove","onkeydown","onkeyup","onkeypress","onmousewheel","TouchHandler","touchs","tapDown","tapPress","tapUp","isTapDown","isTapPress","isTapUp","getTouch","onTouchEvent","touchHandler","Layers","layersList","index","notDOM","layerName","canvas","stylePosition","shadowColor","onContext","display","setIndex","clear","clearRect","clearNode","node","setContextSettings","settings","Scene","gameStateName","canFullScreen","texture","setView","getView","setAutoDraw","toggle","drawAllNodes","setAutoClear","setGameState","gameStates","states","start","setActiveEngine","getGameState","fullScreen","tmpCanvas","tmpContext","origWidth","origHeight","list","fullScale","_canDeactivate","canDeactivate","cancelClear","onload","onblur","stopAll","onfocus","initCanvas","addBaseNode","addCircleNode","addLineNode","addRectNode","addSpriteNode","addTextNode","DOM","GUI","FPSManager","j2DsEngine","math","dt","sceneStartTime","sceneSkipTime","engine","getInfo","version","git","site","description","author","getFPSManager","getSceneManager","getLayerManager","getTextureManager","getAudioManager","getPaintManager","paint","getIO","getTouchIO","touch","getDOMManager","getTriggerManager","getMathManager","getGameStateManager","getViewManager","deviceManager","getErrorManager","getTimeManager","timeManager","getResourceManager","setWindow","_window","setFrameLimit","gui","createLocal","_state","end","lastTime","gameEngine","setTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame"],"mappings":"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","file":"j2ds.js","sourcesContent":[null,"/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    MathUtil.v2f = function (x, y) {\r\n        return {x: x, y: y};\r\n    };\r\n\r\n    MathUtil.v2i = function (x, y) {\r\n        return {x: (x >> 0), y: (y >> 0)};\r\n    };\r\n\r\n    MathUtil.toInt = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    MathUtil.rndColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    MathUtil.rad = function (num) {\r\n        return num * (Math.PI / 180);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.MathUtil = MathUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.MathUtil = MathUtil;\r\n    return MathUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/TextureUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TextureUtil = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    TextureUtil.prototype.createImageMap = function (_w, _h, callback) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            loaded: false,\r\n            width: _w,\r\n            height: _h\r\n        };\r\n\r\n        image.img = document.createElement('canvas');\r\n        image.context = image.img.getContext('2d');\r\n        image.img.width = image.width;\r\n        image.img.height = image.height;\r\n\r\n        callback(image.context);\r\n        image.loaded = true;\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        textureUtil.j2Ds.resources.ok('createImageMap_' + w + 'x' + h);\r\n\r\n        return image;\r\n    };\r\n\r\n    TextureUtil.prototype.loadImageMap = function (path) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            width: 0,\r\n            height: 0,\r\n            loaded: false\r\n        };\r\n\r\n        image.img = document.createElement('img');\r\n        image.crossOrigin = 'anonymous';\r\n        image.img.src = path;\r\n\r\n        image.img.addEventListener('load', function () {\r\n            image.width = o.img.width;\r\n            image.height = o.img.height;\r\n            image.loaded = true;\r\n            textureUtil.j2Ds.resources.ok(path);\r\n        });\r\n\r\n        image.img.addEventListener('error', function () {\r\n            image.width = 0;\r\n            image.height = 0;\r\n            image.loaded = false;\r\n            //textureUtil.j2Ds.resources.fail(path);\r\n        });\r\n        /* Свойства */\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return image;\r\n    };\r\n\r\n    /* -------------------- */\r\n\r\n    TextureUtil.prototype.templates = {\r\n        ellipse: function (context, size, color) { // TODO??\r\n        },\r\n        fillRect: function (context, size, color) {\r\n            context.fillStyle = color;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        strokeRect: function (context, size, color, lineWidth) {\r\n            context.strokeStyle = color;\r\n            context.lineWidth = lineWidth;\r\n            context.strokeRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientL: function (context, size, colors, isHorizontal) {\r\n            var gradient = context.createLinearGradient(0, 0, size.x, 0);\r\n            var step = 1 / colors.length;\r\n            if (!isHorizontal) {\r\n                gradient = context.createLinearGradient(0, 0, 0, size.y);\r\n            }\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientR: function (context, size, pos1, r1, pos2, r2, colors) {\r\n            var gradient = context.createRadialGradient(pos1.x, pos1.y, r1, pos2.x, pos2.y, r2);\r\n            var step = 1 / colors.length;\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextureUtil = TextureUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.TextureUtil = TextureUtil;\r\n    return TextureUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Dom', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- DOM ---------------*/\r\n    var Dom = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    Dom.prototype.id = function (_id) {\r\n        return document.getElementById(_id);\r\n    };\r\n\r\n    Dom.prototype.name = function (_id) {\r\n        return document.getElementsByName(_id)[0];\r\n    };\r\n\r\n    Dom.prototype.tag = function (_id, _parent) {\r\n        var finder = _parent || document;\r\n        return finder.getElementsByTagName(_id);\r\n    };\r\n\r\n    Dom.prototype.goURL = function (_url) {\r\n        document.location.href = _url;\r\n    };\r\n\r\n    Dom.prototype.reloadURL = function () {\r\n        document.location.href = document.location.href;\r\n    };\r\n\r\n    Dom.prototype.attach = function (_id, _parent) {\r\n        var dom = this;\r\n        this.j2Ds.events.addEvent('dom:loaded', function (_parent) {\r\n            if (!_parent) {\r\n                dom.tag('body')[0].appendChild(_id);\r\n            } else {\r\n                dom.id(_parent).appendChild(_id);\r\n            }\r\n        });\r\n    };\r\n\r\n    Dom.prototype.injectJavaScript = function (_code) {\r\n        var code = _code.toString();\r\n        code = code.replace(/[\\n\\r\\t]/g, ';');\r\n        document.location.href = 'javascript: var injectFunction = (function() {setTimeout(' + code + ', 0);}); injectFunction();';\r\n    };\r\n\r\n    Dom.prototype.callJava = function (_code) {\r\n        document.location.href = 'javacall:' + _code;\r\n    };\r\n\r\n    Dom.prototype.send = function (_path, _func) {\r\n        var ajax = new XMLHttpRequest();\r\n        ajax.open('GET', _path, true);\r\n        ajax.onreadystatechange = function () {\r\n            if (ajax.readyState == 4) {\r\n                if (ajax.status == 200) {\r\n                    _func(ajax.responseText);\r\n                }\r\n            }\r\n        };\r\n        ajax.send(null);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Dom = Dom;\r\n    if (global.j2Ds !== undefined) global.modules.core.Dom = Dom;\r\n    return Dom;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Gui', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- GUI ---------------*/\r\n    var Gui = function () {\r\n        this.nodes = {};\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Gui = Gui;\r\n    if (global.j2Ds !== undefined) global.modules.core.Gui = Gui;\r\n    return Gui;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Events', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Events = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.events = {\r\n            'scene:deactivate': [],\r\n            'scene:activate': [],\r\n\r\n            'scene:beforeInit': [],\r\n            'scene:afterInit': [],\r\n            'scene:beforeStart': [],\r\n            'scene:afterStart': [],\r\n\r\n            'engine:before': [],\r\n            'engine:after': [],\r\n\r\n            'scene:changedGameState': [],\r\n\r\n            'writeMode:keyPress': [],\r\n\r\n            'dom:loaded': []\r\n        };\r\n    };\r\n\r\n\r\n    Events.prototype.addEvent = function (eventType, callback, id) {\r\n        this.events[eventType].push({\r\n            id: id || this.j2Ds.now,\r\n            callback: callback\r\n        });\r\n        if (this.j2Ds.ready && eventType == 'dom:loaded') {\r\n            this.onEvent('dom:loaded');\r\n            return true;\r\n        }\r\n    };\r\n\r\n    Events.prototype.destroyEvent = function (eventType, id) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType][i]['id'] == id) {\r\n                events.events[eventType].splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    Events.prototype.onEvent = function (eventType, args) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType]) {\r\n                try {\r\n                    events.events[eventType][i]['callback'](args || '');\r\n                } catch (err) {\r\n                    events.j2Ds.errorManager.showError(err);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Events = Events;\r\n    if (global.j2Ds !== undefined) global.modules.core.Events = Events;\r\n    return Events;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var BaseNode = function (_j2Ds, pos, size) {\r\n        j2Ds = _j2Ds;\r\n        this.visible = true;\r\n        this.alpha = 1;\r\n        this.pos = pos;\r\n        this.size = size;\r\n        this.parent = false;\r\n        this.angle = 0;\r\n        this.layer = j2Ds.scene;\r\n        this.box = {\r\n            offset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            size: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        j2Ds.scene.nodes.push(this);\r\n    };\r\n\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.box.offset = offset;\r\n        this.box.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? j2Ds.layers.layer(layer) : j2Ds.scene;\r\n    };\r\n\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.visible = !!visible;\r\n    };\r\n\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.alpha = alpha;\r\n    };\r\n\r\n    BaseNode.prototype.getAlpha = function () {\r\n        return this.alpha;\r\n    };\r\n\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(MathUtil.v2f(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    BaseNode.prototype.setPosition = function (pos) {\r\n        if (pos) {\r\n            this.pos = MathUtil.v2f(pos.x - Math.ceil(this.size.x / 2), pos.y - Math.ceil(this.size.y / 2));\r\n        } else {\r\n            return this.pos;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.move = function (pos) {\r\n        this.pos.x += pos.x;\r\n        this.pos.y += pos.y;\r\n    };\r\n\r\n    BaseNode.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x + Math.ceil(this.size.x / 2), this.pos.y + Math.ceil(this.size.y / 2));\r\n    };\r\n\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size) {\r\n            this.size = size;\r\n        } else {\r\n            return this.size;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.size;\r\n    };\r\n\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return MathUtil.v2f(Math.abs(id.getPosition().x - this.getPosition().x), Math.abs(id.getPosition().y - this.getPosition().y));\r\n    };\r\n\r\n    BaseNode.prototype.isIntersect = function (id) {\r\n        var pos = {\r\n            x1: this.pos.x + this.box.offset.x,\r\n            x2: id.pos.x + id.box.offset.x,\r\n            y1: this.pos.y + this.box.offset.y,\r\n            y2: id.pos.y + id.box.offset.y\r\n        };\r\n\r\n        var size = {\r\n            x1: this.size.x + this.box.size.x,\r\n            x2: id.size.x + id.box.size.x,\r\n            y1: this.size.y + this.box.size.y,\r\n            y2: id.size.y + id.box.size.y\r\n        };\r\n\r\n        return (\r\n                (pos.y1 + size.y1 >= pos.y2) &&\r\n                (pos.x1 + size.x1 >= pos.x2)\r\n            ) && (\r\n                (pos.x1 < pos.x2 + size.x2) &&\r\n                (pos.y1 < pos.y2 + size.y2)\r\n            );\r\n    };\r\n\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.size.x / 2 + id.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.size.y / 2 + id.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    BaseNode.prototype.isLookScene = function () {\r\n        return (this.pos.x > j2Ds.scene.view.pos.x + j2Ds.scene.width || this.pos.x + this.size.x < j2Ds.scene.view.pos.x)\r\n            || (this.pos.y > j2Ds.scene.view.pos.y + j2Ds.scene.height || this.pos.y + this.size.y < j2Ds.scene.view.pos.y);\r\n    };\r\n\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.angle = (this.angle % 360);\r\n        this.angle += angle;\r\n    };\r\n\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.angle = angle % 360;\r\n    };\r\n\r\n    BaseNode.prototype.getRotation = function () {\r\n        return this.angle;\r\n    };\r\n\r\n    BaseNode.prototype.isOutScene = function () {\r\n        var vector = {};\r\n\r\n        if (this.pos.x + this.size.x >= j2Ds.scene.view.pos.x + j2Ds.scene.width) {\r\n            vector.x = 1;\r\n        } else if (this.pos.x <= j2Ds.scene.view.pos.x) {\r\n            vector.x = -1;\r\n        } else {\r\n            vector.x = 0;\r\n        }\r\n\r\n        if (this.pos.y + this.size.y >= j2Ds.scene.view.pos.y + j2Ds.scene.height) {\r\n            vector.y = 1;\r\n        } else if (this.pos.y <= j2Ds.scene.view.pos.y) {\r\n            vector.y = -1;\r\n        } else {\r\n            vector.y = 0;\r\n        }\r\n\r\n        vector.all = (vector.x || vector.y);\r\n\r\n        return vector;\r\n    };\r\n\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.pos.x += speed * (Math.cos(MathUtil.rad(this.angle)));\r\n        this.pos.y += speed * (Math.sin(MathUtil.rad(this.angle)));\r\n    };\r\n\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.size.x, this.size.y);\r\n        context.stroke();\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(this.box.offset.x + this.pos.x - j2Ds.scene.view.pos.x, this.box.offset.y + this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.box.size.x + this.size.x, this.box.size.y + this.size.y);\r\n        context.stroke();\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.BaseNode = BaseNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CircleNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var CircleNode = function (_j2Ds, pos, radius, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(radius * 2, radius * 2));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.radius = radius;\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.color;\r\n\r\n            context.beginPath();\r\n            context.arc(this.pos.x - j2Ds.scene.view.pos.x + this.radius,\r\n                this.pos.y - j2Ds.scene.view.pos.y + this.radius,\r\n                this.radius, 0, 2 * Math.PI, true);\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.CircleNode = CircleNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.CircleNode = CircleNode;\r\n    return CircleNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/LineNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var LineNode = function (_j2Ds, pos, points, scale, color, width, fill, cFill) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.points = points;\r\n        this.fill = fill || false;\r\n        this.scale = scale || 0;\r\n        this.cFill = cFill;\r\n        this.lineWidth = width;\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.strokeStyle = this.color;\r\n            context.lineWidth = this.lineWidth;\r\n\r\n            context.beginPath();\r\n            context.moveTo(this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y);\r\n\r\n            for (var i = 0, len = this.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.pos.x + this.points[i][0] * this.scale - j2Ds.scene.view.pos.x,\r\n                    this.pos.y + this.points[i][1] * this.scale - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.fill) {\r\n                context.fillStyle = this.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.LineNode = LineNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.LineNode = LineNode;\r\n    return LineNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/RectNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @param _j2Ds\r\n     * @param pos\r\n     * @param size\r\n     * @param color\r\n     * @constructor\r\n     */\r\n    var RectNode = function (_j2Ds, pos, size, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.color = color;\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    RectNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.RectNode = RectNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.RectNode = RectNode;\r\n    return RectNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/SpriteNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var SpriteNode = function (_j2Ds, pos, size, animation) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.tmpSpeed = 0;\r\n        this.frame = 0;\r\n        this.animation = animation;\r\n        this.flip = {x: false, y: false};\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.flip = {x: x, y: y};\r\n    };\r\n\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.frame > this.animation.frameCount) {\r\n                this.frame = 0;\r\n            }\r\n            this.drawFrame(this.frame + 1);\r\n\r\n            if (this.tmpSpeed > speed) {\r\n                this.frame += 1;\r\n                this.tmpSpeed = 0;\r\n            }\r\n            else {\r\n                this.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    // отрисовка одного кадра\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        if (!this.animation.imageMap.loaded) return (err.show('Invalid ImageMap', 'red'));\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.scale(this.flip.x ? -1 : 1, this.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.animation.imageMap.img,\r\n                (this.animation.sourceX + (this.animation.sourceW * frame)), this.animation.sourceY,\r\n                this.animation.sourceW, this.animation.sourceH,\r\n                this.pos.x - j2Ds.scene.view.pos.x, this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    SpriteNode.prototype.setAnimation = function (id) {\r\n        if (this.animation != id) {\r\n            this.animation = id;\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.SpriteNode = SpriteNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.SpriteNode = SpriteNode;\r\n    return SpriteNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/TextNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var TextNode = function (_j2Ds, pos, text, sizePx, color, family, width, colorL) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n\r\n        this.vAlign = 'top';\r\n        this.hAlign = 'left';\r\n        this.color = color ? color : 'black';\r\n\r\n        this.family = family ? family : 'serif';\r\n        this.sizePx = sizePx ? sizePx : 20;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        this.lineWidth = width ? width : 0;\r\n        this.colorL = colorL ? colorL : 'black';\r\n\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype = Object.create(BaseNode.prototype);\r\n    TextNode.prototype.constructor = TextNode;\r\n\r\n    TextNode.prototype.setSize = function (sizePx) {\r\n        this.sizePx = sizePx;\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.getSize = function () {\r\n        return this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.drawSimpleText = function (text, pos, color, colorL) {\r\n        var context = this.layer.context;\r\n        context.fillStyle = color ? color : this.color;\r\n        context.textAlign = this.hAlign;\r\n        context.textBaseline = this.vAlign;\r\n        context.font = this.font;\r\n        context.lineWidth = this.lineWidth;\r\n        context.strokeStyle = colorL ? colorL : this.colorL;\r\n\r\n        var lines = text.split(\"\\n\");\r\n\r\n        pos = pos ? pos : this.pos;\r\n\r\n        if (this.alpha != 1) {\r\n            var tmpAlpha = context.globalAlpha;\r\n            context.globalAlpha = this.alpha;\r\n        }\r\n\r\n        for (var i = 0, len = lines.length; i < len; i += 1) {\r\n            if (this.lineWidth) {\r\n                context.strokeText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n            }\r\n            context.fillText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n        }\r\n\r\n        if (this.alpha != 1) {\r\n            context.globalAlpha = tmpAlpha;\r\n        }\r\n\r\n        context.lineWidth = 0;\r\n        context.strokeStyle = 'black';\r\n    };\r\n\r\n    TextNode.prototype.getText = function () {\r\n        return this.fullText;\r\n    };\r\n\r\n    TextNode.prototype.setText = function (text) {\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.textAlign = this.hAlign;\r\n            context.textBaseline = this.vAlign;\r\n            context.font = this.font;\r\n            context.lineWidth = this.lineWidth;\r\n            context.strokeStyle = this.colorL;\r\n\r\n            for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n                if (this.lineWidth) {\r\n                    context.strokeText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n                }\r\n                context.fillText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.strokeStyle = 'black';\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextNode = TextNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.TextNode = TextNode;\r\n    return TextNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/DeviceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var DeviceManager = function () {\r\n        return {\r\n            width: (parseInt(document.documentElement.clientWidth) < parseInt(screen.width))\r\n                ? parseInt(document.documentElement.clientWidth)\r\n                : parseInt(screen.width),\r\n            height: (parseInt(document.documentElement.clientHeight) < parseInt(screen.height))\r\n                ? parseInt(document.documentElement.clientHeight)\r\n                : parseInt(screen.height)\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.DeviceManager = DeviceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.DeviceManager = DeviceManager;\r\n    return DeviceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ErrorManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ErrorManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.mode = 'neverShow'; // values: onlyShow|stopAndShow|neverShow\r\n        this.enabled = false;\r\n    };\r\n\r\n    ErrorManager.prototype.init = function (_true) {\r\n        var errorManager = this;\r\n        errorManager.enabled = true;\r\n\r\n        var runBtn = document.createElement('div');\r\n        runBtn.innerHTML = '<b>RUN</b>';\r\n        runBtn.style.padding = '5px';\r\n        runBtn.align = 'center';\r\n        runBtn.style.position = 'fixed';\r\n        runBtn.style.zIndex = 20000;\r\n        runBtn.style.left = '0px';\r\n        runBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        runBtn.style.fontSize = '8pt';\r\n        runBtn.style.backgroundColor = '#B8FFB8';\r\n        runBtn.style.height = '12px';\r\n        runBtn.style.width = '50px';\r\n        runBtn.style.cursor = 'pointer';\r\n\r\n        runBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        runBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение продолжено');\r\n            errorManager.j2Ds.runEngine(errorManager.j2Ds);\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(runBtn);\r\n        errorManager.logListener.elems.push(runBtn);\r\n\r\n\r\n        var pauseBtn = document.createElement('div');\r\n        pauseBtn.innerHTML = '<b>PAUSE</b>';\r\n        pauseBtn.style.padding = '5px';\r\n        pauseBtn.align = 'center';\r\n        pauseBtn.style.position = 'fixed';\r\n        pauseBtn.style.zIndex = 20000;\r\n        pauseBtn.style.left = '60px';\r\n        pauseBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        pauseBtn.style.fontSize = '8pt';\r\n        pauseBtn.style.backgroundColor = '#FFFFBD';\r\n        pauseBtn.style.height = '12px';\r\n        pauseBtn.style.width = '50px';\r\n        pauseBtn.style.cursor = 'pointer';\r\n\r\n        pauseBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        pauseBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение приостановлено');\r\n            errorManager.j2Ds.stopEngine();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(pauseBtn);\r\n        errorManager.logListener.elems.push(pauseBtn);\r\n\r\n        var reloadBtn = document.createElement('div');\r\n        reloadBtn.innerHTML = '<b>RELOAD</b>';\r\n        reloadBtn.style.padding = '5px';\r\n        reloadBtn.align = 'center';\r\n        reloadBtn.style.position = 'fixed';\r\n        reloadBtn.style.zIndex = 20000;\r\n        reloadBtn.style.left = '120px';\r\n        reloadBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        reloadBtn.style.fontSize = '8pt';\r\n        reloadBtn.style.backgroundColor = '#E2E2E2';\r\n        reloadBtn.style.color = 'black';\r\n        reloadBtn.style.height = '12px';\r\n        reloadBtn.style.width = '50px';\r\n        reloadBtn.style.cursor = 'pointer';\r\n\r\n        reloadBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        reloadBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.j2Ds.dom.reloadURL();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(reloadBtn);\r\n        errorManager.logListener.elems.push(reloadBtn);\r\n\r\n        errorManager.j2Ds.events.addEvent('dom:loaded', function () {\r\n            errorManager.j2Ds.window.onerror = function (e) {\r\n                errorManager.show(e);\r\n            };\r\n        });\r\n    };\r\n\r\n    ErrorManager.prototype.show = function (string) {\r\n        console.log('[j2Ds]: ' + string);\r\n    };\r\n\r\n    ErrorManager.prototype.setMode = function (mode) {\r\n        this.mode = mode;\r\n        if (mode == 'neverShow') {\r\n            this.enabled = false;\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.debug = function (string) {\r\n        if (!this.enabled) return;\r\n        this.j2Ds.stopEngine();\r\n        if (this.mode != 'neverShow') {\r\n            this.show(string || 'Точка останова достигнута');\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.showError = function (err, _func) {\r\n        if (this.mode == 'neverShow') return;\r\n\r\n        var stack = err.stack.toString();\r\n        stack = stack.split(/\\n/);\r\n\r\n        for (var i = 0, len = stack.length; i < len; i += 1) {\r\n            if (stack[i].match(/\\:\\d/)) {\r\n                stack = stack[i].split(/\\s/);\r\n                break;\r\n            }\r\n        }\r\n\r\n        stack = stack[stack.length - 1];\r\n        stack = stack.replace(/([\\(\\)]|[\\w]+:\\/\\/)/g, '');\r\n        var file = stack.split(':'),\r\n            line = file[1],\r\n            number = file[2];\r\n        file = decodeURI(file[0]);\r\n\r\n        if (file.match(/(<anonymous>|\\bj2Ds.js)/)) {\r\n            file = '<Функция-аргумент или строка>';\r\n        }\r\n\r\n        var errMess = 'Тип ошибки: \"' + err.name + '\"' +\r\n            '\\nСообщение: \"' + err.message + '\"' +\r\n            '\\nФайл с ошибкой: \"' + file + '\"' +\r\n            '\\nСтрока: ' + line +\r\n            ', символ: ' + number;\r\n\r\n        if (_func) {\r\n            errMess += '\\nОшибка в теле функции: \\n' + _func.toString();\r\n        }\r\n\r\n        this.show(errMess);\r\n\r\n        if (this.mode == 'stopAndShow') {\r\n            this.j2Ds.stopEngine();\r\n            this.show('Выполнение приостановлено');\r\n        }\r\n\r\n    };\r\n\r\n    ErrorManager.prototype.logListener = {\r\n        domId: '',\r\n        count: 0,\r\n        execLine: '',\r\n        elems: []\r\n    };\r\n\r\n    ErrorManager.prototype.lightSyntax = function (_code, _type) {\r\n        var code = ('' + _code).toString();\r\n\r\n        if (_type == 'boolean') {\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        } else if (_type == 'code') {\r\n            code = code.replace(/(this|var|typeof|new|return|if|else|for|in|while|break|do|continue|switch|case)([^a-z0-9\\$_])/gi,\r\n                '<span style=\"color: #FFC0CB;\"><b>$1</b></span>$2')\r\n                .replace(/(function|object)/gi,\r\n                    '<span style=\"color: #FFA500;\">$1</span>')\r\n                .replace(/(width|height|window|document|scene|j2Ds|value)/gi,\r\n                    '<span style=\"color: #59B5C0;\">$1</span>')\r\n                .replace(/([a-z\\_\\$][a-z0-9_]*)\\(/gi, '<span style=\"color: #FFCD70;\">$1</span>(')\r\n                .replace(/(\\{|\\}|\\]|\\[|\\|)/gi, '<span style=\"color: #FFFF00;\">$1</span>')\r\n                .replace(/('.*?')/g, '<span style=\"color: #8FFF8F;\">$1</span>')\r\n                .replace(/(#[a-z0-9]{3,8};)/, '<b style=\"color: red;\">$1</b>')\r\n                .replace(/(\\t)/g, '&nbsp;&nbsp;');\r\n\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        }\r\n\r\n        return code;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ErrorManager = ErrorManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ErrorManager = ErrorManager;\r\n    return ErrorManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/FpsManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var FpsManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.fps = this.j2Ds.frameLimit;\r\n        this.tmp_of_fps = 1;\r\n        this.tmp_of_time = Date.now();\r\n    };\r\n\r\n    FpsManager.prototype.init = function () {\r\n        var fpsManager = this;\r\n        fpsManager.enabled = true;\r\n\r\n        this.j2Ds.events.addEvent('engine:after', function () {\r\n            fpsManager.update();\r\n        });\r\n\r\n    };\r\n\r\n    FpsManager.prototype.update = function () {\r\n        if (!this.enabled) return;\r\n        this.tmp_of_fps += 1;\r\n        if (this.j2Ds.now - this.tmp_of_time >= 1000) {\r\n            this.fps = this.tmp_of_fps;\r\n            this.tmp_of_fps = 1;\r\n            this.tmp_of_time = this.j2Ds.now;\r\n        }\r\n    };\r\n\r\n    FpsManager.prototype.getFPS = function () {\r\n        return this.fps <= this.j2Ds.frameLimit ? this.fps : this.j2Ds.frameLimit;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.FpsManager = FpsManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.FpsManager = FpsManager;\r\n    return FpsManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ResourceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ResourceManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.added = 0;\r\n        this.loaded = 0;\r\n        this.failed = 0;\r\n\r\n        this.add = function () {\r\n            this.added += 1;\r\n        };\r\n\r\n        this.ok = function (file) {\r\n            this.loaded += 1;\r\n            this.j2Ds.errorManager.show('loaded: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.fail = function (file) {\r\n            this.failed += 1;\r\n            this.j2Ds.errorManager.show('error load: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.show = function () {\r\n            return {'added': this.added, 'loaded': this.loaded, 'failed': this.failed};\r\n        };\r\n\r\n        this.isLoaded = function () {\r\n            return this.added == this.loaded;\r\n        };\r\n\r\n        this.getProgress = function () {\r\n            return Math.ceil(this.loaded / this.added * 100);\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ResourceManager = ResourceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ResourceManager = ResourceManager;\r\n    return ResourceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/StorageManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var StorageManager = function (j2Ds, id) {\r\n        this.j2Ds = j2Ds;\r\n        this.id = id;\r\n        this.ls = this.j2Ds.window.localStorage ? this.j2Ds.window.localStorage : false;\r\n        if (!this.ls) alert('j2Ds ERROR in \"createLocal(' + id + ')\" \\n' + 'Объект \"localStorage\" не поддерживается.');\r\n    };\r\n\r\n    StorageManager.prototype.saveNode = function (name, o) {\r\n        if (!this.ls) return false;\r\n        this.ls.setItem(this.id + name, JSON.stringify(o));\r\n    };\r\n\r\n    StorageManager.prototype.load = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return this.ls.getItem(this.id + name);\r\n    };\r\n\r\n    StorageManager.prototype.is = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return !!(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    StorageManager.prototype.save = function (name, value) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        this.ls.setItem(this.id + name, value);\r\n    };\r\n\r\n    StorageManager.prototype.loadNode = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return JSON.parse(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.StorageManager = StorageManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.StorageManager = StorageManager;\r\n    return StorageManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TimeManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TimeManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.times = {};\r\n\r\n        this.insert = function (id) {\r\n            if (!this.times[id]) {\r\n                this.times[id] = this.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        this.get = function (id) {\r\n            return this.times[id];\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TimeManager = TimeManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TimeManager = TimeManager;\r\n    return TimeManager;\r\n}));\r\n\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TriggerManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TriggerManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.enabled = false;\r\n        this.triggers = {};\r\n    };\r\n\r\n    TriggerManager.prototype.add = function (id, callback) {\r\n        var triggerManager = this;\r\n        var trigger = {\r\n            command: callback,\r\n            count: 0,\r\n            state: 'stop',\r\n            last: false\r\n        };\r\n\r\n        trigger.run = function (mSec) {\r\n            if (this.state == 'job') {\r\n                this.command();\r\n                return;\r\n            }\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'job';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.job = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec && this.state != 'run') {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.loop = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.reset = function () {\r\n            this.count = 0;\r\n            this.state = 'stop';\r\n            this.last = false;\r\n        };\r\n\r\n        this.triggers[id] = trigger;\r\n        return trigger;\r\n    };\r\n\r\n    TriggerManager.prototype.get = function (id) {\r\n        return this.triggers[id];\r\n    };\r\n\r\n    TriggerManager.prototype.init = function () {\r\n        this.enabled = true;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TriggerManager = TriggerManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TriggerManager = TriggerManager;\r\n    return TriggerManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ViewManager', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var ViewManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.views = {};\r\n    };\r\n\r\n    ViewManager.prototype.add = function (id, pos) {\r\n        var viewManager = this;\r\n        var viewport = {\r\n            focusNode: false\r\n        };\r\n\r\n        viewport.pos = pos ? MathUtil.v2f(pos.x, pos.y) : MathUtil.v2f(0, 0);\r\n\r\n        viewport.setPosition = function (pos) {\r\n            if (!pos) return this;\r\n            this.pos = MathUtil.v2f(pos.x - viewManager.j2Ds.scene.width / 2, pos.y - viewManager.j2Ds.scene.height / 2);\r\n        };\r\n\r\n        viewport.getPosition = function () {\r\n            return this.pos;\r\n        };\r\n\r\n        viewport.move = function (pos) {\r\n            this.pos.x += pos.x;\r\n            this.pos.y += pos.y;\r\n        };\r\n\r\n        viewManager.j2Ds.viewManager.views[id] = viewport;\r\n        return viewport;\r\n    };\r\n\r\n    ViewManager.prototype.get = function (id) {\r\n        return this.j2Ds.viewManager.views[id];\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ViewManager = ViewManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ViewManager = ViewManager;\r\n    return ViewManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/AudioHandler', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var AudioHandler = function () {\r\n        this.audios = {};\r\n        this.enabled = false\r\n    };\r\n\r\n    AudioHandler.prototype.init = function () {\r\n        var audioHandler = this;\r\n        this.enabled = true;\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:deactivate', function () {\r\n            audioHandler.deactivate();\r\n        });\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:activate', function () {\r\n            audioHandler.activate();\r\n        });\r\n\r\n    };\r\n\r\n    AudioHandler.prototype.load = function (id, files, vol) {\r\n        var audioHandler = this;\r\n        audioHandler.j2Ds.resources.add();\r\n        var audio = document.createElement('audio');\r\n\r\n        for (var i = 0, len = files.length; i < len; i += 1) {\r\n            var source = document.createElement('source');\r\n            source.src = files[i];\r\n            audio.appendChild(source);\r\n        }\r\n\r\n        audio.id = 'audio_' + id;\r\n\r\n        if (vol) {\r\n            audio.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n        }\r\n\r\n        var sound = {\r\n            id: id,\r\n            files: files,\r\n            domEl: audio, // DOMElement\r\n            ready: false,\r\n            len: 0,\r\n            state: 'stop',\r\n            lock: false,\r\n            volume: audio.volume,\r\n            onePlay: false\r\n        };\r\n\r\n        sound.domEl.addEventListener('loadeddata', function (e) {\r\n            sound.ready = true;\r\n            var file = e.explicitOriginalTarget || e.path[0];\r\n            audioHandler.j2Ds.resources.ok(file.currentSrc);\r\n        });\r\n\r\n        sound.domEl.addEventListener('error', function (e) {\r\n            sound.setLock(true);\r\n            //var file = e.srcElement || e.target;\r\n            //audioHandler.j2Ds.resources.fail(file.src);\r\n        });\r\n\r\n        sound.domEl.addEventListener('ended', function () {\r\n            sound.state = 'stop';\r\n        });\r\n\r\n        sound.play = function (unlock) {\r\n            if (unlock) {\r\n                this.setLock(false);\r\n            }\r\n            if (this.lock) return;\r\n            if (this.state == 'play') {\r\n                this.domEl.currentTime = 0;\r\n            }\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.loop = function () {\r\n            if (this.lock) return;\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.pause = function (lock) {\r\n            if (this.state == 'play') {\r\n                this.setLock(lock);\r\n                this.domEl.pause();\r\n                this.state = 'pause';\r\n            }\r\n        };\r\n\r\n        sound.stop = function (lock) {\r\n            this.domEl.pause();\r\n            this.domEl.currentTime = 0;\r\n            this.state = 'stop';\r\n            if (lock) {\r\n                this.setLock(lock);\r\n            }\r\n        };\r\n\r\n        sound.setLock = function (lock) {\r\n            this.lock = lock ? true : false;\r\n        };\r\n\r\n        sound.setVolume = function (vol) {\r\n            this.domEl.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n            this.volume = this.domEl.volume;\r\n        };\r\n\r\n        sound.getVolume = function (id) {\r\n            return this.volume;\r\n        };\r\n\r\n        sound.getState = function (id) {\r\n            return this.state;\r\n        };\r\n\r\n        sound.getPlayPosition = function () {\r\n            return this.domEl.currentTime;\r\n        };\r\n\r\n        sound.domEl.load();\r\n\r\n        this.audios[id] = sound;\r\n        return sound;\r\n    };\r\n\r\n    AudioHandler.prototype.get = function (id) {\r\n        return this.audios[id];\r\n    };\r\n\r\n    AudioHandler.prototype.pause = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].pause(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.stop = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].stop(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.play = function (unlock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].play(unlock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.deactivate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'play') {\r\n                this.audios[snd].pause();\r\n                this.audios[snd].state = 'deactivated';\r\n            }\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.activate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'deactivated') {\r\n                this.audios[snd].play();\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.AudioHandler = AudioHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.AudioHandler = AudioHandler;\r\n    return AudioHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var InputHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.pos = {x: 0, y: 0};\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.keyDown = [];\r\n        this.keyPress = [];\r\n        this.keyPressed = [];\r\n        this.keyUp = [];\r\n        this.keyUped = false;\r\n        this.mouseDown = [];\r\n        this.mousePress = [];\r\n        this.mousePressed = [];\r\n        this.mouseUp = [];\r\n        this.mouseUpped = false;\r\n        this.mouseWheel = 0;\r\n        this.canceled = false;\r\n        this.body = false;\r\n        this.anyKey = false;\r\n        this.anyMouse = false;\r\n        this.writeMode = false;\r\n        this.displayCursor = '';\r\n        this.visible = true;\r\n        this.enabled = false;\r\n    };\r\n\r\n    InputHandler.prototype.mKey = {\r\n        'LEFT': 1,\r\n        'MIDDLE': 2,\r\n        'RIGHT': 3\r\n    };\r\n\r\n    InputHandler.prototype.jKey = {\r\n        'LEFT': 37,\r\n        'RIGHT': 39,\r\n        'UP': 38,\r\n        'DOWN': 40,\r\n        'SPACE': 32,\r\n        'CTRL': 17,\r\n        'SHIFT': 16,\r\n        'ALT': 18,\r\n        'ESC': 27,\r\n        'ENTER': 13,\r\n        'MINUS': 189,\r\n        'PLUS': 187,\r\n        'CAPS_LOCK': 20,\r\n        'BACKSPACE': 8,\r\n        'TAB': 9,\r\n        'Q': 81,\r\n        'W': 87,\r\n        'E': 69,\r\n        'R': 82,\r\n        'T': 84,\r\n        'Y': 89,\r\n        'U': 85,\r\n        'I': 73,\r\n        'O': 79,\r\n        'P': 80,\r\n        'A': 65,\r\n        'S': 83,\r\n        'D': 68,\r\n        'F': 70,\r\n        'G': 71,\r\n        'H': 72,\r\n        'J': 74,\r\n        'K': 75,\r\n        'L': 76,\r\n        'Z': 90,\r\n        'X': 88,\r\n        'V': 86,\r\n        'B': 66,\r\n        'N': 78,\r\n        'M': 77,\r\n        '0': 48,\r\n        '1': 49,\r\n        '2': 50,\r\n        '3': 51,\r\n        '4': 52,\r\n        '5': 53,\r\n        '6': 54,\r\n        '7': 55,\r\n        '8': 56,\r\n        'C': 67,\r\n        '9': 57,\r\n        'NUM_0': 45,\r\n        'NUM_1': 35,\r\n        'NUM_2': 40,\r\n        'NUM_3': 34,\r\n        'NUM_4': 37,\r\n        'NUM_5': 12,\r\n        'NUM_6': 39,\r\n        'NUM_7': 36,\r\n        'NUM_8': 38,\r\n        'NUM_9': 33,\r\n        'NUM_MINUS': 109,\r\n        'NUM_PLUS': 107,\r\n        'NUM_LOCK': 144,\r\n        'F1': 112,\r\n        'F2': 113,\r\n        'F3': 114,\r\n        'F4': 115,\r\n        'F5': 116,\r\n        'F6': 117,\r\n        'F7': 118,\r\n        'F8': 119,\r\n        'F9': 120,\r\n        'F10': 121,\r\n        'F11': 122,\r\n        'F12': 123\r\n    };\r\n\r\n    InputHandler.prototype.keyList = function () {\r\n        var o = [];\r\n        for (var i in this.jKey) {\r\n            o.push(i);\r\n        }\r\n        return o;\r\n    };\r\n\r\n    InputHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n        this.keyPress = [];\r\n        this.keyUp = [];\r\n        this.mousePress = [];\r\n        this.mouseUp = [];\r\n        this.mouseWheel = 0;\r\n    };\r\n\r\n    InputHandler.prototype.isKeyDown = function (code) {\r\n        return this.keyDown[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyPress = function (code) {\r\n        return this.keyPress[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyUp = function (code) {\r\n        return this.keyUp[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    InputHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    InputHandler.prototype.setWriteMode = function (_true) {\r\n        this.writeMode = _true;\r\n    };\r\n\r\n    InputHandler.prototype.isWriteMode = function () {\r\n        return this.writeMode;\r\n    };\r\n\r\n    InputHandler.prototype.keyEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        if (e.type == 'keydown') {\r\n            if (!this.keyPressed[e.keyCode]) {\r\n                this.keyPress[e.keyCode] = true;\r\n                this.keyPressed[e.keyCode] = true;\r\n            }\r\n            if (!this.writeMode) {\r\n                e.preventDefault();\r\n            } else {\r\n                this.j2Ds.events.onEvent('writeMode:keyPress', '');\r\n            }\r\n        } else if (e.type == 'keyup') {\r\n            if (this.keyPressed[e.keyCode]) {\r\n                e.preventDefault();\r\n                this.keyPress[e.keyCode] = false;\r\n                this.keyPressed[e.keyCode] = false;\r\n                this.keyUp[e.keyCode] = true;\r\n                this.keyUped = true;\r\n            }\r\n        } else if (e.type == 'keypress' && (this.writeMode)) {\r\n            var char = '';\r\n            if (e.which != 0 && e.charCode != 0) {\r\n                if (e.which >= 32) {\r\n                    char = String.fromCharCode(e.which);\r\n                }\r\n            }\r\n            this.j2Ds.events.onEvent('writeMode:keyPress', char);\r\n        }\r\n\r\n        this.keyDown[e.keyCode] = (e.type == 'keydown') && (!this.canceled);\r\n        this.anyKey = e.keyCode;\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.cancel = function (id) {\r\n        if (!id) {\r\n            this.canceled = true;\r\n            this.keyDown = [];\r\n            this.mouseDown = [];\r\n        }\r\n        else {\r\n            this.keyDown[this.jKey[id]] = false;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.onNode = function (id) {\r\n        if (!id.layer.visible) return false;\r\n        return (this.pos.x > id.pos.x && this.pos.x < id.pos.x + id.size.x) &&\r\n            (this.pos.y > id.pos.y && this.pos.y < id.pos.y + id.size.y);\r\n    };\r\n\r\n    InputHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n        this.x = (this.screenPos.x / dX);\r\n        this.y = (this.screenPos.y / dY);\r\n        this.pos.x = this.j2Ds.scene.view.pos.x + this.x;\r\n        this.pos.y = this.j2Ds.scene.view.pos.y + this.y;\r\n    };\r\n\r\n    InputHandler.prototype.onMove = function (e) {\r\n        this.screenPos.x = -this.j2Ds.scene.offsetLeft + e.pageX;\r\n        this.screenPos.y = -this.j2Ds.scene.offsetTop + e.pageY;\r\n    };\r\n\r\n    InputHandler.prototype.isMouseDown = function (code) {\r\n        return this.mouseDown[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMousePress = function (code) {\r\n        return this.mousePress[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseUp = function (code) {\r\n        return this.mouseUp[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseWheel = function (code) {\r\n        return (code == 'UP' && this.mouseWheel > 0) ||\r\n            (code == 'DOWN' && this.mouseWheel < 0)\r\n    };\r\n\r\n    InputHandler.prototype.onMouseWheel = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        this.mouseWheel = ((e.wheelDelta) ? e.wheelDelta : -e.detail);\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.onMouseEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        if (!e.which && e.button) {\r\n            if (e.button & 1) e.which = 1;\r\n            else if (e.button & 4) e.which = 2;\r\n            else if (e.button & 2) e.which = 3;\r\n        }\r\n\r\n        if (e.type == 'mousedown') {\r\n            if (!this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = true;\r\n                this.mousePressed[e.which] = true;\r\n            }\r\n        } else if (e.type == 'mouseup') {\r\n            if (this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = false;\r\n                this.mousePressed[e.which] = false;\r\n                this.mouseUp[e.which] = true;\r\n                this.mouseUped = true;\r\n            }\r\n        }\r\n\r\n        this.mouseDown[e.which] = (e.type == 'mousedown') && (!this.canceled);\r\n\r\n        this.j2Ds.window.focus();\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.setCursorImage = function (curImg) {\r\n        this.j2Ds.dom.tag('body')[0].style.cursor = 'url(\"' + curImg + '\"), auto';\r\n    };\r\n\r\n    InputHandler.prototype.setVisible = function (_true) {\r\n        this.visible = _true;\r\n        if (!_true) {\r\n            this.displayCursor = this.j2Ds.dom.tag('body')[0].style.cursor;\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = 'none';\r\n        } else {\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = this.displayCursor;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    InputHandler.prototype.init = function () {\r\n        var input = this;\r\n        input.enabled = true;\r\n\r\n        input.j2Ds.events.addEvent('engine:before', function () {\r\n            input.upd();\r\n        });\r\n\r\n        input.j2Ds.events.addEvent('engine:after', function () {\r\n            input.reset();\r\n        });\r\n\r\n\r\n        input.j2Ds.events.addEvent('dom:loaded', function () {\r\n            input.j2Ds.window.oncontextmenu = function () {\r\n                return false;\r\n            };\r\n            input.j2Ds.window.onselectstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.ondragstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.onmousedown = input.onMouseEvent;\r\n            input.j2Ds.window.onmouseup = function (e) {\r\n                input.canceled = false;\r\n                input.onMouseEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousemove = function (e) {\r\n                input.onMove(e);\r\n            };\r\n            input.j2Ds.window.onkeydown = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeyup = function (e) {\r\n                input.canceled = false;\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeypress = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousewheel = function (e) {\r\n                input.onMouseWheel(e);\r\n            };\r\n\r\n            if (input.j2Ds.window.addEventListener) {\r\n                input.j2Ds.window.addEventListener(\"DOMMouseScroll\", function (e) {\r\n                    input.onMouseWheel(e);\r\n                }, false);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.InputHandler = InputHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.InputHandler = InputHandler;\r\n    return InputHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/TouchHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var TouchHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.pos = {x: 0, y: 0};\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.canceled = false;\r\n        this.touchs = [];\r\n        this.tapDown = false;\r\n        this.tapPress = false;\r\n        this.tapUp = false;\r\n        this.body = false;\r\n    };\r\n\r\n    TouchHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.cancel = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.isTapDown = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapPress = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapUp = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.getTouch = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.onTouchEvent = function () {\r\n        if (!this.enabled) return false;\r\n\r\n    };\r\n\r\n\r\n    TouchHandler.prototype.init = function () {\r\n        var touchHandler = this;\r\n        touchHandler.enabled = true;\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:before', function () {\r\n            touchHandler.upd();\r\n        });\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:after', function () {\r\n            touchHandler.reset();\r\n        });\r\n\r\n\r\n        touchHandler.j2Ds.events.addEvent('dom:loaded', function () {\r\n\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TouchHandler = TouchHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.TouchHandler = TouchHandler;\r\n    return TouchHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Layers', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Layers = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.layersList = {};\r\n    };\r\n\r\n    Layers.prototype.layer = function (id) {\r\n        return this.layersList[id];\r\n    };\r\n\r\n    Layers.prototype.add = function (id, index, notDOM) {\r\n        if (!!this.layersList[id]) return false;\r\n\r\n        var layer = {\r\n            layerName: id\r\n        };\r\n\r\n        if (!notDOM) {\r\n            layer.canvas = document.createElement('canvas');\r\n        } else {\r\n            layer.canvas = this.j2Ds.dom.id(id);\r\n        }\r\n\r\n        layer.canvas.style.position = this.j2Ds.scene.stylePosition;\r\n\r\n        layer.canvas.id = id;\r\n\r\n        layer.canvas.style.zIndex = 1000 + index;\r\n        layer.canvas.style.left = this.j2Ds.scene.offsetLeft + 'px';\r\n        layer.canvas.style.top = this.j2Ds.scene.offsetTop + 'px';\r\n\r\n        layer.canvas.width = this.j2Ds.scene.width;\r\n        layer.canvas.height = this.j2Ds.scene.height;\r\n        layer.width = this.j2Ds.scene.width;\r\n        layer.height = this.j2Ds.scene.height;\r\n        layer.context = layer.canvas.getContext('2d');\r\n        layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n        layer.alpha = 1;\r\n        layer.angle = 0;\r\n        layer.visible = 1;\r\n\r\n        layer.onContext = function (callback) {\r\n            callback(this.context);\r\n        };\r\n\r\n        layer.fill = function (color) {\r\n            this.context.fillStyle = color;\r\n            this.context.fillRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.setAlpha = function (alpha) {\r\n            this.canvas.style.opacity = alpha;\r\n            this.alpha = alpha;\r\n        };\r\n\r\n        layer.getAlpha = function () {\r\n            return this.alpha;\r\n        };\r\n\r\n        layer.setVisible = function (visible) {\r\n            if (visible) {\r\n                this.canvas.style.display = 'block';\r\n                this.visible = true;\r\n            } else {\r\n                this.canvas.style.display = 'none';\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        layer.isVisible = function () {\r\n            return this.visible;\r\n        };\r\n\r\n        layer.setIndex = function (index) {\r\n            this.canvas.style.zIndex = 1000 + index;\r\n        };\r\n\r\n        layer.clear = function () {\r\n            this.context.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.clearNode = function (node) {\r\n            var layer = this;\r\n            if (node.isLookScene()) {\r\n                this.context.clearRect(\r\n                    node.pos.x - layer.j2Ds.scene.view.pos.x,\r\n                    node.pos.y - layer.j2Ds.scene.view.pos.y,\r\n                    node.size.x,\r\n                    node.size.y\r\n                );\r\n            }\r\n        };\r\n\r\n        layer.setContextSettings = function (settings) {\r\n            for (var i in settings) {\r\n                if (typeof this.context[i] !== 'undefined') {\r\n                    this.context[i] = settings[i];\r\n                }\r\n            }\r\n        };\r\n\r\n        layer.clearRect = function (pos, size) {\r\n            var layer = this;\r\n            this.context.clearRect(pos.x - layer.j2Ds.scene.view.pos.x, pos.y - layer.j2Ds.scene.view.pos.y, size.x, size.y);\r\n        };\r\n\r\n        this.layersList[id] = layer;\r\n\r\n        if (!notDOM) {\r\n            this.j2Ds.dom.attach(this.layersList[id].canvas);\r\n        }\r\n\r\n        return layer;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Layers = Layers;\r\n    if (global.j2Ds !== undefined) global.modules.core.Layers = Layers;\r\n    return Layers;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Scene', [\r\n            'nodes/BaseNode',\r\n            'nodes/CircleNode',\r\n            'nodes/LineNode',\r\n            'nodes/RectNode',\r\n            'nodes/SpriteNode',\r\n            'nodes/TextNode',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('nodes/BaseNode'),\r\n            require('nodes/CircleNode'),\r\n            require('nodes/LineNode'),\r\n            require('nodes/RectNode'),\r\n            require('nodes/SpriteNode'),\r\n            require('nodes/TextNode'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.nodes.BaseNode,\r\n            root.modules.nodes.CircleNode,\r\n            root.modules.nodes.LineNode,\r\n            root.modules.nodes.RectNode,\r\n            root.modules.nodes.SpriteNode,\r\n            root.modules.nodes.TextNode,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (BaseNode,\r\n              CircleNode,\r\n              LineNode,\r\n              RectNode,\r\n              SpriteNode,\r\n              TextNode,\r\n              TextureUtil) {\r\n        \"use strict\";\r\n\r\n        var Scene = function (j2Ds) {\r\n            j2Ds = this.j2Ds = j2Ds;\r\n\r\n            this.nodes = [];\r\n            this.layerName = 'sceneNode';\r\n            this.stylePosition = 'fixed';\r\n            this.layers = j2Ds.layers;\r\n            this.view = false;\r\n            this.gameStateName = false;\r\n            this.canFullScreen = true;\r\n\r\n            this.texture = new TextureUtil(this.j2Ds);\r\n        };\r\n\r\n        /*функции*/\r\n\r\n        Scene.prototype.setView = function (_id) {\r\n            this.view = this.j2Ds.viewManager.views[_id];\r\n        };\r\n\r\n        Scene.prototype.getView = function () {\r\n            return this.view;\r\n        };\r\n\r\n        Scene.prototype.setAutoDraw = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:after', function () {\r\n                    scene.drawAllNodes();\r\n                }, 'autoDraw');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:after', 'autoDraw');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setAutoClear = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:before', function () {\r\n                    scene.clear();\r\n                }, 'autoClear');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:before', 'autoClear');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setGameState = function (name) {\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name].state) {\r\n                this.j2Ds.setActiveEngine(this.j2Ds.gameStates.states[name].state);\r\n            }\r\n            this.gameStateName = name;\r\n            this.j2Ds.events.onEvent('scene:changedGameState');\r\n        };\r\n\r\n        Scene.prototype.getGameState = function () {\r\n            return this.gameStateName;\r\n        };\r\n\r\n        Scene.prototype.start = function (name, frameLimit) {\r\n            this.j2Ds.events.onEvent('scene:beforeStart');\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name]) {\r\n                this.j2Ds.start(this.j2Ds.gameStates.states[name].state, frameLimit);\r\n            }\r\n            this.j2Ds.events.onEvent('scene:afterStart');\r\n        };\r\n\r\n        Scene.prototype.fullScreen = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            var tmpCanvas = document.createElement('canvas'); // Нужны для копирования содержимого\r\n            var tmpContext = tmpCanvas.getContext('2d');      // При изменении размера\r\n            if (_true) {\r\n                this.origWidth = this.width;\r\n                this.origHeight = this.height;\r\n                this.width = this.j2Ds.getDeviceManager().width;\r\n                this.height = this.j2Ds.getDeviceManager().height;\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i];\r\n                    tmpCanvas.width = layer.width;\r\n                    tmpCanvas.height = layer.height;\r\n                    tmpContext.drawImage(layer.canvas, 0, 0);\r\n                    layer.canvas.width = this.width;\r\n                    layer.canvas.height = this.height;\r\n                    layer.width = this.width;\r\n                    layer.height = this.height;\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n\r\n                    layer.context.drawImage(tmpCanvas, 0, 0, layer.width, layer.height);\r\n                }\r\n            } else {\r\n                this.width = this.origWidth;\r\n                this.height = this.origHeight;\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i];\r\n                    layer.width = this.origWidth;\r\n                    layer.height = this.origHeight;\r\n                    layer.canvas.width = this.origWidth;\r\n                    layer.canvas.height = this.origHeight;\r\n                    this.offsetWidth = this.origWidth;\r\n                    this.offsetHeight = this.origHeight;\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.fullScale = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            if (_true) {\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i].canvas;\r\n                    layer.style.width = this.j2Ds.getDeviceManager().width + 'px';\r\n                    layer.style.height = this.j2Ds.getDeviceManager().height + 'px';\r\n                    this.offsetWidth = this.j2Ds.getDeviceManager().width;\r\n                    this.offsetHeight = this.j2Ds.getDeviceManager().height;\r\n                }\r\n            } else {\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i].canvas;\r\n                    layer.style.width = this.width + 'px';\r\n                    layer.style.height = this.height + 'px';\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.clear = function () {\r\n            this.getLayer().clear();\r\n        };\r\n\r\n        Scene.prototype.getLayer = function () {\r\n            return this.j2Ds.layers.layer(this.layerName);\r\n        };\r\n\r\n        Scene.prototype.drawAllNodes = function () {\r\n            for (var i = 0, len = this.nodes.length; i < len; i += 1) {\r\n                if (this.nodes[i].draw) {\r\n                    this.nodes[i].draw();\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.init = function (_w, _h, _canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = _w;\r\n            scene.height = _h;\r\n\r\n            scene.origWidth = _w;\r\n            scene.origHeight = _h;\r\n\r\n            scene.offsetWidth = _w;\r\n            scene.offsetHeight = _h;\r\n\r\n            scene.offsetLeft = 0;\r\n            scene.offsetTop = 0;\r\n\r\n\r\n            scene.j2Ds.canDeactivate = _canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add('sceneNode', 0);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(scene.layerName).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(scene.layerName).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.list) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        Scene.prototype.initCanvas = function (_id, _canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.canFullScreen = false;\r\n\r\n            scene.layerName = _id;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = parseInt(scene.j2Ds.dom.id(_id).width);\r\n            scene.height = parseInt(scene.j2Ds.dom.id(_id).height);\r\n\r\n            scene.origWidth = scene.width;\r\n            scene.origHeight = scene.height;\r\n\r\n            scene.offsetWidth = parseInt(scene.j2Ds.dom.id(_id).offsetWidth);\r\n            scene.offsetHeight = parseInt(scene.j2Ds.dom.id(_id).offsetHeight);\r\n\r\n            scene.offsetLeft = parseInt(scene.j2Ds.dom.id(_id).offsetLeft);\r\n            scene.offsetTop = parseInt(scene.j2Ds.dom.id(_id).offsetTop);\r\n\r\n            scene.stylePosition = scene.j2Ds.dom.id(_id).style.position == 'fixed' ? 'fixed' : 'absolute';\r\n\r\n            scene.j2Ds.canDeactivate = _canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add(_id, 0, 1);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(_id).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(_id).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.list) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        /* Nodes */\r\n        Scene.prototype.addBaseNode = function (pos, size) {\r\n            return new BaseNode(this.j2Ds, pos, size);\r\n        };\r\n\r\n        Scene.prototype.addCircleNode = function (pos, radius, color) {\r\n            return new CircleNode(this.j2Ds, pos, radius, color);\r\n        };\r\n\r\n        Scene.prototype.addLineNode = function (pos, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.j2Ds, pos, points, scale, color, width, fill, cFill);\r\n        };\r\n\r\n        Scene.prototype.addRectNode = function (pos, size, color) {\r\n            return new RectNode(this.j2Ds, pos, size, color);\r\n        };\r\n\r\n        Scene.prototype.addSpriteNode = function (pos, size, animation) {\r\n            return new SpriteNode(this.j2Ds, pos, size, animation);\r\n        };\r\n\r\n        Scene.prototype.addTextNode = function (pos, text, sizePx, color, family, width, colorL) {\r\n            return new TextNode(this.j2Ds, pos, text, sizePx, color, family, width, colorL);\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Scene = Scene;\r\n        if (global.j2Ds !== undefined) global.modules.core.Scene = Scene;\r\n        return Scene;\r\n    }));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2Ds', [\r\n            'core/Dom',\r\n            'core/Gui',\r\n            'core/Events',\r\n            'core/Layers',\r\n            'core/Scene',\r\n\r\n            'io/AudioHandler',\r\n            'io/InputHandler',\r\n            'io/TouchHandler',\r\n\r\n            'managers/DeviceManager',\r\n            'managers/ErrorManager',\r\n            'managers/FpsManager',\r\n            'managers/ResourceManager',\r\n            'managers/StorageManager',\r\n            'managers/TimeManager',\r\n            'managers/TriggerManager',\r\n            'managers/ViewManager',\r\n\r\n            'utils/MathUtil',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('core/Dom'),\r\n            require('core/Gui'),\r\n            require('core/Events'),\r\n            require('core/Layers'),\r\n            require('core/Scene'),\r\n\r\n            require('io/AudioHandler'),\r\n            require('io/InputHandler'),\r\n            require('io/TouchHandler'),\r\n\r\n            require('managers/DeviceManager'),\r\n            require('managers/ErrorManager'),\r\n            require('managers/FpsManager'),\r\n            require('managers/ResourceManager'),\r\n            require('managers/StorageManager'),\r\n            require('managers/TimeManager'),\r\n            require('managers/TriggerManager'),\r\n            require('managers/ViewManager'),\r\n\r\n            require('utils/MathUtil'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.core.Dom,\r\n            root.modules.core.Gui,\r\n            root.modules.core.Events,\r\n            root.modules.core.Layers,\r\n            root.modules.core.Scene,\r\n\r\n            root.modules.io.AudioHandler,\r\n            root.modules.io.InputHandler,\r\n            root.modules.io.TouchHandler,\r\n\r\n            root.modules.managers.DeviceManager,\r\n            root.modules.managers.ErrorManager,\r\n            root.modules.managers.FpsManager,\r\n            root.modules.managers.ResourceManager,\r\n            root.modules.managers.StorageManager,\r\n            root.modules.managers.TimeManager,\r\n            root.modules.managers.TriggerManager,\r\n            root.modules.managers.ViewManager,\r\n\r\n            root.modules.utils.MathUtil,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (DOM,\r\n              GUI,\r\n              Events,\r\n              Layers,\r\n              Scene,\r\n              AudioHandler,\r\n              InputHandler,\r\n              TouchHandler,\r\n              DeviceManager,\r\n              ErrorManager,\r\n              FPSManager,\r\n              ResourceManager,\r\n              StorageManager,\r\n              TimeManager,\r\n              TriggerManager,\r\n              ViewManager,\r\n              MathUtil) {\r\n        \"use strict\";\r\n\r\n        var frameLimit = 60;\r\n\r\n        /*------------------ 2D движок --------------------*/\r\n        var j2DsEngine = function () {\r\n            this.vector = {};\r\n            this.math = {};\r\n            this.dom = {};\r\n            this.now = Date.now();\r\n            this.dt = 0;\r\n            this.stopAll = 0;\r\n            this.frameLimit = 60;\r\n            this.sceneStartTime = 0;\r\n            this.sceneSkipTime = 0;\r\n            this.engine = function () {\r\n                this.errorManager.show('Не инициализировано ни одно игровое состояние', 'red');\r\n                this.stopEngine();\r\n            };\r\n            this.ready = false;\r\n            this.window = window;\r\n            this.canDeactivate = true;\r\n\r\n            /* Getters & Setters */\r\n\r\n            this.getInfo = function () {\r\n                return {\r\n                    'name': 'j2DsEngine',\r\n                    'version': '0.6.2',\r\n                    'git': 'https://github.com/SkanerSoft/j2DsEngine',\r\n                    'site': 'http://j2DsEngine.ru',\r\n                    'description': 'HTML5 2D Game Engine',\r\n                    'author': 'Skaner'\r\n                };\r\n            };\r\n\r\n            this.getFPSManager = function () {\r\n                this.fpsManager.init();\r\n                return this.fpsManager;\r\n            };\r\n\r\n            this.getSceneManager = function () {\r\n                return this.scene;\r\n            };\r\n\r\n            this.getLayerManager = function () {\r\n                return this.layers;\r\n            };\r\n\r\n            this.getTextureManager = function () {\r\n                return this.scene.texture;\r\n            };\r\n\r\n            this.getAudioManager = function () {\r\n                this.audio.init();\r\n                return this.audio;\r\n            };\r\n\r\n            this.getPaintManager = function () {\r\n                return this.paint;\r\n            };\r\n\r\n            this.getIO = function () {\r\n                this.input.init();\r\n                return this.input;\r\n            };\r\n\r\n            this.getTouchIO = function () {\r\n                this.touch.init();\r\n                return this.touch;\r\n            };\r\n\r\n            this.getDOMManager = function () {\r\n                return this.dom;\r\n            };\r\n\r\n            this.getTriggerManager = function () {\r\n                this.trigger.init();\r\n                return this.trigger;\r\n            };\r\n\r\n            this.getMathManager = function () {\r\n                return MathUtil;\r\n            };\r\n\r\n            this.getGameStateManager = function () {\r\n                return this.gameStates;\r\n            };\r\n\r\n            this.getViewManager = function () {\r\n                return this.viewManager;\r\n            };\r\n\r\n            this.getDeviceManager = function () {\r\n                return this.deviceManager;\r\n            };\r\n\r\n            this.getErrorManager = function () {\r\n                this.errorManager.init();\r\n                return this.errorManager;\r\n            };\r\n\r\n            this.getTimeManager = function () {\r\n                return this.timeManager;\r\n            };\r\n\r\n            this.getResourceManager = function () {\r\n                return this.resources;\r\n            };\r\n\r\n            this.setWindow = function (_window) {\r\n                this.window = _window ? _window : window;\r\n            };\r\n\r\n            this.setFrameLimit = function (fps) {\r\n                this.frameLimit = (fps > 0 && fps <= 60) ? fps : 60;\r\n                frameLimit = this.frameLimit;\r\n            };\r\n\r\n            this.setActiveEngine = function (engine) {\r\n                this.engine = typeof engine == 'function'\r\n                    ? engine\r\n                    : this.errorManager.show('Error in \"GameStateManager\"');\r\n            };\r\n\r\n            this.events = new Events(this);\r\n            this.dom = new DOM(this);\r\n            this.gui = new GUI(this);\r\n            this.resources = new ResourceManager(this);\r\n            this.timeManager = new TimeManager(this);\r\n            this.deviceManager = DeviceManager();\r\n            this.errorManager = new ErrorManager(this);\r\n            this.fpsManager = new FPSManager(this);\r\n            this.input = new InputHandler(this);\r\n            this.layers = new Layers(this);\r\n            this.viewManager = new ViewManager(this);\r\n            this.scene = new Scene(this);\r\n\r\n            this.createLocal = function (id) {\r\n                new StorageManager(this, id);\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.gameStates = {\r\n            states: {},\r\n\r\n            add: function (name, _state, start, end) {\r\n                var state = {};\r\n                state.state = _state;\r\n                state.start = start || false;\r\n                state.end = end || false;\r\n\r\n                this.states[name] = state;\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.start = function (engine, frameLimit) {\r\n            this.setActiveEngine(engine);\r\n            this.frameLimit = frameLimit || 60;\r\n            this.sceneSkipTime = 1000.0 / this.frameLimit;\r\n            this.lastTime = Date.now();\r\n            this.dt = 0;\r\n            this.sceneStartTime = this.lastTime;\r\n            this.gameEngine(this);\r\n        };\r\n\r\n        j2DsEngine.prototype.gameEngine = function (j2Ds) {\r\n            j2Ds.now = Date.now();\r\n            setTimeout(function () {\r\n                if (!j2Ds.stopAll) {\r\n                    j2Ds.dt = (j2Ds.now - j2Ds.lastTime) / 100.0;\r\n                    j2Ds.sceneStartTime = j2Ds.now;\r\n                    if (j2Ds.dt > j2Ds.sceneSkipTime / 2) j2Ds.dt = 0;\r\n\r\n                    j2Ds.events.onEvent('engine:before');\r\n\r\n                    try {\r\n                        j2Ds.engine();\r\n                    } catch (err) {\r\n                        j2Ds.errorManager.showError(err);\r\n                    }\r\n\r\n                    j2Ds.events.onEvent('engine:after');\r\n\r\n                    j2Ds.lastTime = j2Ds.now;\r\n\r\n                    requestAnimationFrame(function () {\r\n                        j2Ds.gameEngine(j2Ds);\r\n                    });\r\n                }\r\n            }, (j2Ds.frameLimit < 60 ? j2Ds.sceneSkipTime : 0));\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return window.requestAnimationFrame ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame ||\r\n                function (callback) {\r\n                    window.setTimeout(callback, 1000 / frameLimit);\r\n                };\r\n        })();\r\n\r\n        j2DsEngine.prototype.stopEngine = function () {\r\n            if (!this.canDeactivate) return;\r\n            this.stopAll = true;\r\n        };\r\n\r\n        j2DsEngine.prototype.runEngine = function (j2Ds) {\r\n            j2Ds = j2Ds || this;\r\n            if (!j2Ds.canDeactivate) return;\r\n            if (!j2Ds.stopAll) return;\r\n            j2Ds.stopAll = false;\r\n            requestAnimationFrame(function () {\r\n                j2Ds.gameEngine(j2Ds);\r\n            });\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.modules.core.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.j2Ds = new j2DsEngine();\r\n        return j2DsEngine;\r\n    }\r\n));\r\n"],"sourceRoot":"/source/"}