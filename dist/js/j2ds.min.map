{"version":3,"sources":["j2ds.js","MathUtil.js","TextureUtil.js","Dom.js","Gui.js","Events.js","BaseNode.js","CircleNode.js","LineNode.js","RectNode.js","SpriteNode.js","TextNode.js","DeviceManager.js","ErrorManager.js","FpsManager.js","ResourceManager.js","StorageManager.js","TimeManager.js","TriggerManager.js","ViewManager.js","AudioHandler.js","InputHandler.js","TouchHandler.js","Layers.js","Scene.js","j2Ds.js"],"names":["root","factory","define","amd","module","exports","window","global","MathUtil","v2f","x","y","v2i","toInt","number","rndColor","min","max","opacity","random","omitZero","Math","floor","rad","num","PI","is4VerticesIntersect","a","b","m","n","length","isLineIntersect","c","d","dx","g","l","isPointInRect","p","isPointInTriangle","sign","p1","p2","p3","pt","v1","v2","v3","b1","b2","b3","undefined","j2Ds","modules","utils","TextureUtil","this","prototype","createImageMap","width","height","callback","textureUtil","resources","add","image","img","loaded","document","createElement","context","getContext","getAnimation","sourceX","sourceY","sourceW","sourceH","frameCount","imageMap","ok","loadImageMap","path","crossOrigin","src","addEventListener","templates","ellipse","size","color","fillRect","fillStyle","strokeRect","lineWidth","strokeStyle","gradientL","colors","isHorizontal","gradient","createLinearGradient","step","i","j","addColorStop","gradientR","pos1","r1","pos2","r2","createRadialGradient","Dom","id","getElementById","name","getElementsByName","tag","parent","finder","getElementsByTagName","goURL","url","location","href","reloadURL","attach","dom","events","addEvent","appendChild","injectJavaScript","code","toString","replace","callJava","send","ajax","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","core","Gui","nodes","Events","scene:deactivate","scene:activate","scene:beforeInit","scene:afterInit","scene:beforeStart","scene:afterStart","engine:before","engine:after","scene:changedGameState","writeMode:keyPress","dom:loaded","eventType","push","now","ready","onEvent","destroyEvent","len","splice","args","err","errorManager","showError","require","BaseNode","_j2Ds","pos","visible","alpha","angle","layer","scene","box","offset","resizeBox","setLayer","layers","getLayer","setVisible","isVisible","setAlpha","getAlpha","moveTo","to","t","move","getPosition","setPosition","ceil","setSize","getSize","setParent","getDistance","sqrt","pow","getDistanceXY","abs","getBox","node","x1","x2","y1","y2","getBoxVertices","view","dy","sin","cos","toFixed","checkBoxIntersect","node1","node2","isPointInsideBox","vf","point","isIntersect","Array","isCollision","result","isLookScene","turn","setRotation","getRotation","rotateTo","_to","_t","atan2","isOutScene","vector","all","moveDir","speed","drawBox","save","translate","rotate","beginPath","rect","stroke","restore","CircleNode","radius","call","Object","create","constructor","draw","tmpAlpha","globalAlpha","arc","fill","LineNode","points","scale","cFill","lineTo","RectNode","SpriteNode","animation","tmpSpeed","frame","flip","setFlip","drawFrame","show","drawImage","setAnimation","TextNode","text","sizePx","family","colorL","vAlign","hAlign","font","fullText","maxWidth","lines","split","measureText","drawSimpleText","textAlign","textBaseline","strokeText","fillText","getText","setText","DeviceManager","parseInt","documentElement","clientWidth","screen","clientHeight","managers","ErrorManager","mode","enabled","init","_true","runBtn","innerHTML","style","padding","align","position","zIndex","left","top","getDeviceManager","fontSize","backgroundColor","cursor","onmousedown","e","stopPropagation","onclick","runEngine","logListener","elems","pauseBtn","stopEngine","reloadBtn","onerror","string","console","log","setMode","debug","_func","stack","match","file","line","decodeURI","errMess","message","domId","count","execLine","lightSyntax","_code","_type","FpsManager","fps","frameLimit","tmp_of_fps","tmp_of_time","Date","fpsManager","update","getFPS","ResourceManager","added","failed","fail","isLoaded","getProgress","StorageManager","ls","localStorage","alert","saveNode","o","setItem","JSON","stringify","load","getItem","is","value","loadNode","parse","TimeManager","times","insert","get","TriggerManager","triggers","triggerManager","trigger","command","state","last","run","mSec","job","loop","reset","ViewManager","views","viewManager","viewport","focusNode","AudioHandler","audios","audioHandler","deactivate","activate","files","vol","audio","source","volume","sound","domEl","lock","onePlay","explicitOriginalTarget","currentSrc","setLock","play","unlock","currentTime","pause","stop","setVolume","getVolume","getState","getPlayPosition","snd","io","InputHandler","screenPos","keyDown","keyPress","keyPressed","keyUp","keyUped","mouseDown","mousePress","mousePressed","mouseUp","mouseUpped","mouseWheel","canceled","body","anyKey","anyMouse","writeMode","displayCursor","mKey","LEFT","MIDDLE","RIGHT","jKey","UP","DOWN","SPACE","CTRL","SHIFT","ALT","ESC","ENTER","MINUS","PLUS","CAPS_LOCK","BACKSPACE","TAB","Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","V","B","N","M","0","1","2","3","4","5","6","7","8","C","9","NUM_0","NUM_1","NUM_2","NUM_3","NUM_4","NUM_5","NUM_6","NUM_7","NUM_8","NUM_9","NUM_MINUS","NUM_PLUS","NUM_LOCK","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","keyList","isKeyDown","isKeyPress","isKeyUp","getScreenPosition","setWriteMode","isWriteMode","keyEvent","type","keyCode","preventDefault","char","which","charCode","String","fromCharCode","cancel","onNode","upd","dX","offsetWidth","dY","offsetHeight","onMove","offsetLeft","pageX","offsetTop","pageY","isMouseDown","isMousePress","isMouseUp","isMouseWheel","onMouseWheel","wheelDelta","detail","onMouseEvent","button","mouseUped","focus","setCursorImage","curImg","input","oncontextmenu","onselectstart","ondragstart","onmouseup","onmousemove","onkeydown","onkeyup","onkeypress","onmousewheel","TouchHandler","touchs","tapDown","tapPress","tapUp","isTapDown","isTapPress","isTapUp","getTouch","onTouchEvent","touchHandler","Layers","layersList","index","notDOM","layerName","canvas","stylePosition","shadowColor","onContext","display","setIndex","clear","clearRect","clearNode","setContextSettings","settings","Scene","gameStateName","canFullScreen","texture","setView","getView","setAutoDraw","toggle","drawAllNodes","setAutoClear","setGameState","gameStates","states","start","setActiveEngine","getGameState","fullScreen","tmpCanvas","tmpContext","origWidth","origHeight","fullScale","canDeactivate","cancelClear","onload","onblur","stopAll","onfocus","initCanvas","addBaseNode","addCircleNode","addLineNode","addRectNode","addSpriteNode","addTextNode","DOM","GUI","FPSManager","j2DsEngine","math","dt","sceneStartTime","sceneSkipTime","engine","getInfo","version","git","site","description","author","getFPSManager","getSceneManager","getLayerManager","getTextureManager","getAudioManager","getPaintManager","paint","getIO","getTouchIO","touch","getDOMManager","getTriggerManager","getMathManager","getGameStateManager","getViewManager","deviceManager","getErrorManager","getTimeManager","timeManager","getResourceManager","setWindow","_window","setFrameLimit","gui","createLocal","_state","end","lastTime","gameEngine","setTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame"],"mappings":"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","file":"j2ds.js","sourcesContent":[null,"/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    MathUtil.v2f = function (x, y) {\r\n        return {x: x, y: y};\r\n    };\r\n\r\n    MathUtil.v2i = function (x, y) {\r\n        return {x: (x >> 0), y: (y >> 0)};\r\n    };\r\n\r\n    MathUtil.toInt = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    MathUtil.rndColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    MathUtil.rad = function (num) {\r\n        return num * (Math.PI / 180);\r\n    };\r\n\r\n    MathUtil.is4VerticesIntersect = function (a, b) {\r\n        var m, n;\r\n        for (m = 0; m < a.length; m++) {\r\n            for (n = 0; n < b.length; n++) {\r\n                if (MathUtil.isLineIntersect(\r\n                        a[m],\r\n                        a[(m < a.length - 1) ? m + 1 : 0],\r\n                        b[n],\r\n                        b[(n < b.length - 1) ? n + 1 : 0])\r\n                ) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    MathUtil.isLineIntersect = function (a, b, c, d) {\r\n        var dx, g, l;\r\n        dx = (b.x - a.x) * (d.y - c.y) - (d.x - c.x) * (b.y - a.y);\r\n        if (dx === 0) {\r\n            return false;\r\n        } else {\r\n            l = ((d.y - c.y) * (d.x - a.x) + (c.x - d.x) * (d.y - a.y)) / dx;\r\n            g = ((a.y - b.y) * (d.x - a.x) + (b.x - a.x) * (d.y - a.y)) / dx;\r\n            return (0 < l && l < 1) && (0 < g && g < 1);\r\n        }\r\n    };\r\n\r\n    MathUtil.isPointInRect = function (a, b, c, d, p) {\r\n        return MathUtil.isPointInTriangle(p, a, b, c) || MathUtil.isPointInTriangle(p, c, d, a);\r\n    };\r\n\r\n    var sign = function (p1, p2, p3) {\r\n        return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\r\n    };\r\n\r\n    MathUtil.isPointInTriangle = function (pt, v1, v2, v3) {\r\n        var b1, b2, b3;\r\n        b1 = sign(pt, v1, v2) < 0;\r\n        b2 = sign(pt, v2, v3) < 0;\r\n        b3 = sign(pt, v3, v1) < 0;\r\n\r\n        return ((b1 == b2) && (b2 == b3));\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.MathUtil = MathUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.MathUtil = MathUtil;\r\n    return MathUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/TextureUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TextureUtil = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    TextureUtil.prototype.createImageMap = function (width, height, callback) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            loaded: false,\r\n            width: width,\r\n            height: height\r\n        };\r\n\r\n        image.img = document.createElement('canvas');\r\n        image.context = image.img.getContext('2d');\r\n        image.img.width = image.width;\r\n        image.img.height = image.height;\r\n\r\n        callback(image.context);\r\n        image.loaded = true;\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        textureUtil.j2Ds.resources.ok('createImageMap_' + width + 'x' + height);\r\n\r\n        return image;\r\n    };\r\n\r\n    TextureUtil.prototype.loadImageMap = function (path) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            width: 0,\r\n            height: 0,\r\n            loaded: false\r\n        };\r\n\r\n        image.img = document.createElement('img');\r\n        image.crossOrigin = 'anonymous';\r\n        image.img.src = path;\r\n\r\n        image.img.addEventListener('load', function () {\r\n            image.width = image.img.width;\r\n            image.height = image.img.height;\r\n            image.loaded = true;\r\n            textureUtil.j2Ds.resources.ok(path);\r\n        });\r\n\r\n        image.img.addEventListener('error', function () {\r\n            image.width = 0;\r\n            image.height = 0;\r\n            image.loaded = false;\r\n            //textureUtil.j2Ds.resources.fail(path);\r\n        });\r\n        /* Свойства */\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return image;\r\n    };\r\n\r\n    /* -------------------- */\r\n\r\n    TextureUtil.prototype.templates = {\r\n        ellipse: function (context, size, color) { // TODO??\r\n        },\r\n        fillRect: function (context, size, color) {\r\n            context.fillStyle = color;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        strokeRect: function (context, size, color, lineWidth) {\r\n            context.strokeStyle = color;\r\n            context.lineWidth = lineWidth;\r\n            context.strokeRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientL: function (context, size, colors, isHorizontal) {\r\n            var gradient = context.createLinearGradient(0, 0, size.x, 0);\r\n            var step = 1 / colors.length;\r\n            if (!isHorizontal) {\r\n                gradient = context.createLinearGradient(0, 0, 0, size.y);\r\n            }\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientR: function (context, size, pos1, r1, pos2, r2, colors) {\r\n            var gradient = context.createRadialGradient(pos1.x, pos1.y, r1, pos2.x, pos2.y, r2);\r\n            var step = 1 / colors.length;\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextureUtil = TextureUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.TextureUtil = TextureUtil;\r\n    return TextureUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Dom', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- DOM ---------------*/\r\n    var Dom = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    Dom.prototype.id = function (id) {\r\n        return document.getElementById(id);\r\n    };\r\n\r\n    Dom.prototype.name = function (id) {\r\n        return document.getElementsByName(id)[0];\r\n    };\r\n\r\n    Dom.prototype.tag = function (id, parent) {\r\n        var finder = parent || document;\r\n        return finder.getElementsByTagName(id);\r\n    };\r\n\r\n    Dom.prototype.goURL = function (url) {\r\n        document.location.href = url;\r\n    };\r\n\r\n    Dom.prototype.reloadURL = function () {\r\n        document.location.href = document.location.href;\r\n    };\r\n\r\n    Dom.prototype.attach = function (id, parent) {\r\n        var dom = this;\r\n        this.j2Ds.events.addEvent('dom:loaded', function (parent) {\r\n            if (!parent) {\r\n                dom.tag('body')[0].appendChild(id);\r\n            } else {\r\n                dom.id(parent).appendChild(id);\r\n            }\r\n        });\r\n    };\r\n\r\n    Dom.prototype.injectJavaScript = function (code) {\r\n        code = code.toString();\r\n        code = code.replace(/[\\n\\r\\t]/g, ';');\r\n        document.location.href = 'javascript: var injectFunction = (function() {setTimeout(' + code + ', 0);}); injectFunction();';\r\n    };\r\n\r\n    Dom.prototype.callJava = function (code) {\r\n        document.location.href = 'javacall:' + code;\r\n    };\r\n\r\n    Dom.prototype.send = function (path, callback) {\r\n        var ajax = new XMLHttpRequest();\r\n        ajax.open('GET', path, true);\r\n        ajax.onreadystatechange = function () {\r\n            if (ajax.readyState == 4) {\r\n                if (ajax.status == 200) {\r\n                    callback(ajax.responseText);\r\n                }\r\n            }\r\n        };\r\n        ajax.send(null);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Dom = Dom;\r\n    if (global.j2Ds !== undefined) global.modules.core.Dom = Dom;\r\n    return Dom;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Gui', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- GUI ---------------*/\r\n    var Gui = function () {\r\n        this.nodes = {};\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Gui = Gui;\r\n    if (global.j2Ds !== undefined) global.modules.core.Gui = Gui;\r\n    return Gui;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Events', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Events = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.events = {\r\n            'scene:deactivate': [],\r\n            'scene:activate': [],\r\n\r\n            'scene:beforeInit': [],\r\n            'scene:afterInit': [],\r\n            'scene:beforeStart': [],\r\n            'scene:afterStart': [],\r\n\r\n            'engine:before': [],\r\n            'engine:after': [],\r\n\r\n            'scene:changedGameState': [],\r\n\r\n            'writeMode:keyPress': [],\r\n\r\n            'dom:loaded': []\r\n        };\r\n    };\r\n\r\n\r\n    Events.prototype.addEvent = function (eventType, callback, id) {\r\n        this.events[eventType].push({\r\n            id: id || this.j2Ds.now,\r\n            callback: callback\r\n        });\r\n        if (this.j2Ds.ready && eventType == 'dom:loaded') {\r\n            this.onEvent('dom:loaded');\r\n            return true;\r\n        }\r\n    };\r\n\r\n    Events.prototype.destroyEvent = function (eventType, id) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType][i]['id'] == id) {\r\n                events.events[eventType].splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    Events.prototype.onEvent = function (eventType, args) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType]) {\r\n                try {\r\n                    events.events[eventType][i]['callback'](args || '');\r\n                } catch (err) {\r\n                    events.j2Ds.errorManager.showError(err);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Events = Events;\r\n    if (global.j2Ds !== undefined) global.modules.core.Events = Events;\r\n    return Events;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var BaseNode = function (_j2Ds, pos, size) {\r\n        j2Ds = _j2Ds;\r\n        this.visible = true;\r\n        this.alpha = 1;\r\n        this.pos = pos;\r\n        this.size = size;\r\n        this.parent = false;\r\n        this.angle = 0;\r\n        this.layer = j2Ds.scene;\r\n        this.box = {\r\n            offset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            size: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        j2Ds.scene.nodes.push(this);\r\n    };\r\n\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.box.offset = offset;\r\n        this.box.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? j2Ds.layers.layer(layer) : j2Ds.scene;\r\n    };\r\n\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.visible = !!visible;\r\n    };\r\n\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.alpha = alpha;\r\n    };\r\n\r\n    BaseNode.prototype.getAlpha = function () {\r\n        return this.alpha;\r\n    };\r\n\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(MathUtil.v2f(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    BaseNode.prototype.setPosition = function (pos) {\r\n        if (pos) {\r\n            this.pos = MathUtil.v2f(pos.x - Math.ceil(this.size.x / 2), pos.y - Math.ceil(this.size.y / 2));\r\n        } else {\r\n            return this.pos;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.move = function (pos) {\r\n        this.pos.x += pos.x;\r\n        this.pos.y += pos.y;\r\n    };\r\n\r\n    BaseNode.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x + Math.ceil(this.size.x / 2), this.pos.y + Math.ceil(this.size.y / 2));\r\n    };\r\n\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size) {\r\n            this.size = size;\r\n        } else {\r\n            return this.size;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.size;\r\n    };\r\n\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return MathUtil.v2f(Math.abs(id.getPosition().x - this.getPosition().x), Math.abs(id.getPosition().y - this.getPosition().y));\r\n    };\r\n\r\n    BaseNode.prototype.getBox = function (node) {\r\n        return {\r\n            x1: node.pos.x + node.box.offset.x,\r\n            x2: node.pos.x + node.box.offset.x + node.size.x + node.box.size.x,\r\n            y1: node.pos.y + node.box.offset.y,\r\n            y2: node.pos.y + node.box.offset.y + node.size.y + node.box.size.y\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.getBoxVertices = function (node) {\r\n        if (node === undefined) node = this;\r\n        var angle = -MathUtil.rad(node.angle);\r\n\r\n        var dx = node.box.offset.x + node.box.size.x / 2 + node.getPosition().x - j2Ds.scene.view.pos.x;\r\n        var dy = node.box.offset.y + node.box.size.y / 2 + node.getPosition().y - j2Ds.scene.view.pos.y;\r\n\r\n        var box = this.getBox(node);\r\n\r\n        return [\r\n            {\r\n                x: (dx + (box.y1 - dy) * Math.sin(angle) + (box.x2 - dx) * Math.cos(angle)).toFixed(5),\r\n                y: (dy + (box.y1 - dy) * Math.cos(angle) - (box.x2 - dx) * Math.sin(angle)).toFixed(5)\r\n            },\r\n            {\r\n                x: (dx + (box.y2 - dy) * Math.sin(angle) + (box.x2 - dx) * Math.cos(angle)).toFixed(5),\r\n                y: (dy + (box.y2 - dy) * Math.cos(angle) - (box.x2 - dx) * Math.sin(angle)).toFixed(5)\r\n            },\r\n            {\r\n                x: (dx + (box.y2 - dy) * Math.sin(angle) + (box.x1 - dx) * Math.cos(angle)).toFixed(5),\r\n                y: (dy + (box.y2 - dy) * Math.cos(angle) - (box.x1 - dx) * Math.sin(angle)).toFixed(5)\r\n            },\r\n            {\r\n                x: (dx + (box.y1 - dy) * Math.sin(angle) + (box.x1 - dx) * Math.cos(angle)).toFixed(5),\r\n                y: (dy + (box.y1 - dy) * Math.cos(angle) - (box.x1 - dx) * Math.sin(angle)).toFixed(5)\r\n            }\r\n        ]\r\n    };\r\n\r\n    var checkBoxIntersect = function (node1, node2) {\r\n        var a, b;\r\n        if (node1.angle === 0 && node2.angle === 0) {\r\n            a = node1.getBox(node1);\r\n            b = node1.getBox(node2);\r\n\r\n            return !(a.y1 > b.y2 || a.y2 < b.y1 || a.x2 < b.x1 || a.x1 > b.x2);\r\n        } else {\r\n            a = node1.getBoxVertices(node1);\r\n            b = node1.getBoxVertices(node2);\r\n\r\n            if (!MathUtil.is4VerticesIntersect(a, b)) {\r\n                return node1.isPointInsideBox(a, node2.getPosition())\r\n                    || node2.isPointInsideBox(b, node1.getPosition());\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.isPointInsideBox = function (vf, point) {\r\n        return MathUtil.isPointInRect(vf[0], vf[1], vf[2], vf[3], point);\r\n    };\r\n\r\n    BaseNode.prototype.isIntersect = function (node2) {\r\n        var node1 = this;\r\n\r\n        if (node2 instanceof BaseNode) {\r\n            return checkBoxIntersect(node1, node2);\r\n        } else if (node2 instanceof Array && node2.length > 0 && node2[0] instanceof BaseNode) {\r\n            for (var i = 0; i < node2.length; i++) {\r\n                if (checkBoxIntersect(node1, node2[i])) return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.size.x / 2 + id.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.size.y / 2 + id.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    BaseNode.prototype.isLookScene = function () {\r\n        return !((this.pos.x > j2Ds.scene.view.pos.x + j2Ds.scene.width || this.pos.x + this.size.x < j2Ds.scene.view.pos.x)\r\n        || (this.pos.y > j2Ds.scene.view.pos.y + j2Ds.scene.height || this.pos.y + this.size.y < j2Ds.scene.view.pos.y));\r\n    };\r\n\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.angle = (this.angle % 360);\r\n        this.angle += angle;\r\n    };\r\n\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.angle = angle % 360;\r\n    };\r\n\r\n    BaseNode.prototype.getRotation = function () {\r\n        return this.angle;\r\n    };\r\n\r\n    BaseNode.prototype.rotateTo = function (_to, _t) {\r\n        _t = _t ? _t : 1;\r\n        this.setRotation((Math.atan2(\r\n                (_to.y - this.getPosition().y),\r\n                (_to.x - this.getPosition().x)\r\n            ) * (180 / Math.PI)) / _t);\r\n    };\r\n\r\n    BaseNode.prototype.isOutScene = function () {\r\n        var vector = {};\r\n\r\n        if (this.pos.x + this.size.x >= j2Ds.scene.view.pos.x + j2Ds.scene.width) {\r\n            vector.x = 1;\r\n        } else if (this.pos.x <= j2Ds.scene.view.pos.x) {\r\n            vector.x = -1;\r\n        } else {\r\n            vector.x = 0;\r\n        }\r\n\r\n        if (this.pos.y + this.size.y >= j2Ds.scene.view.pos.y + j2Ds.scene.height) {\r\n            vector.y = 1;\r\n        } else if (this.pos.y <= j2Ds.scene.view.pos.y) {\r\n            vector.y = -1;\r\n        } else {\r\n            vector.y = 0;\r\n        }\r\n\r\n        vector.all = (vector.x || vector.y);\r\n\r\n        return vector;\r\n    };\r\n\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.pos.x += speed * (Math.cos(MathUtil.rad(this.angle)));\r\n        this.pos.y += speed * (Math.sin(MathUtil.rad(this.angle)));\r\n    };\r\n\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n\r\n        if (this.angle) {\r\n            context.save();\r\n            context.translate(\r\n                this.getPosition().x - j2Ds.scene.view.pos.x,\r\n                this.getPosition().y - j2Ds.scene.view.pos.y\r\n            );\r\n            context.rotate(MathUtil.rad(this.angle));\r\n            context.translate(\r\n                -(this.getPosition().x - j2Ds.scene.view.pos.x),\r\n                -(this.getPosition().y - j2Ds.scene.view.pos.y)\r\n            );\r\n        }\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.size.x, this.size.y);\r\n        context.stroke();\r\n\r\n        if (this.angle) {\r\n            context.restore();\r\n            context.save();\r\n            context.translate(\r\n                this.box.offset.x + this.box.size.x / 2 + this.getPosition().x - j2Ds.scene.view.pos.x,\r\n                this.box.offset.y + this.box.size.y / 2 + this.getPosition().y - j2Ds.scene.view.pos.y\r\n            );\r\n            context.rotate(MathUtil.rad(this.angle));\r\n            context.translate(\r\n                -(this.box.offset.x + this.box.size.x / 2 + this.getPosition().x - j2Ds.scene.view.pos.x),\r\n                -(this.box.offset.y + this.box.size.y / 2 + this.getPosition().y - j2Ds.scene.view.pos.y)\r\n            );\r\n        }\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.box.offset.x + this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.box.offset.y + this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.box.size.x + this.size.x,\r\n            this.box.size.y + this.size.y);\r\n        context.stroke();\r\n\r\n        if (this.angle) {\r\n            context.restore();\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.BaseNode = BaseNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CircleNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var CircleNode = function (_j2Ds, pos, radius, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(radius * 2, radius * 2));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.radius = radius;\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.color;\r\n\r\n            context.beginPath();\r\n            context.arc(this.pos.x - j2Ds.scene.view.pos.x + this.radius,\r\n                this.pos.y - j2Ds.scene.view.pos.y + this.radius,\r\n                this.radius, 0, 2 * Math.PI, true);\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.CircleNode = CircleNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.CircleNode = CircleNode;\r\n    return CircleNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/LineNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var LineNode = function (_j2Ds, pos, points, scale, color, width, fill, cFill) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.points = points;\r\n        this.fill = fill || false;\r\n        this.scale = scale || 0;\r\n        this.cFill = cFill;\r\n        this.lineWidth = width;\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.strokeStyle = this.color;\r\n            context.lineWidth = this.lineWidth;\r\n\r\n            context.beginPath();\r\n            context.moveTo(this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y);\r\n\r\n            for (var i = 0, len = this.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.pos.x + this.points[i][0] * this.scale - j2Ds.scene.view.pos.x,\r\n                    this.pos.y + this.points[i][1] * this.scale - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.fill) {\r\n                context.fillStyle = this.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.LineNode = LineNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.LineNode = LineNode;\r\n    return LineNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/RectNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @param _j2Ds\r\n     * @param pos\r\n     * @param size\r\n     * @param color\r\n     * @constructor\r\n     */\r\n    var RectNode = function (_j2Ds, pos, size, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.color = color;\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    RectNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.RectNode = RectNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.RectNode = RectNode;\r\n    return RectNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/SpriteNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var SpriteNode = function (_j2Ds, pos, size, animation) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.tmpSpeed = 0;\r\n        this.frame = 0;\r\n        this.animation = animation;\r\n        this.flip = {x: false, y: false};\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.flip = {x: x, y: y};\r\n    };\r\n\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.frame > this.animation.frameCount) {\r\n                this.frame = 0;\r\n            }\r\n            this.drawFrame(this.frame + 1);\r\n\r\n            if (this.tmpSpeed > speed) {\r\n                this.frame += 1;\r\n                this.tmpSpeed = 0;\r\n            }\r\n            else {\r\n                this.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    // отрисовка одного кадра\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        if (!this.animation.imageMap.loaded) return (err.show('Invalid ImageMap', 'red'));\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.scale(this.flip.x ? -1 : 1, this.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.animation.imageMap.img,\r\n                (this.animation.sourceX + (this.animation.sourceW * frame)), this.animation.sourceY,\r\n                this.animation.sourceW, this.animation.sourceH,\r\n                this.pos.x - j2Ds.scene.view.pos.x, this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    SpriteNode.prototype.setAnimation = function (id) {\r\n        if (this.animation != id) {\r\n            this.animation = id;\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.SpriteNode = SpriteNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.SpriteNode = SpriteNode;\r\n    return SpriteNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/TextNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var TextNode = function (_j2Ds, pos, text, sizePx, color, family, width, colorL) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n\r\n        this.vAlign = 'top';\r\n        this.hAlign = 'left';\r\n        this.color = color ? color : 'black';\r\n\r\n        this.family = family ? family : 'serif';\r\n        this.sizePx = sizePx ? sizePx : 20;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        this.lineWidth = width ? width : 0;\r\n        this.colorL = colorL ? colorL : 'black';\r\n\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype = Object.create(BaseNode.prototype);\r\n    TextNode.prototype.constructor = TextNode;\r\n\r\n    TextNode.prototype.setSize = function (sizePx) {\r\n        this.sizePx = sizePx;\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.getSize = function () {\r\n        return this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.drawSimpleText = function (text, pos, color, colorL) {\r\n        var context = this.layer.context;\r\n        context.fillStyle = color ? color : this.color;\r\n        context.textAlign = this.hAlign;\r\n        context.textBaseline = this.vAlign;\r\n        context.font = this.font;\r\n        context.lineWidth = this.lineWidth;\r\n        context.strokeStyle = colorL ? colorL : this.colorL;\r\n\r\n        var lines = text.split(\"\\n\");\r\n\r\n        pos = pos ? pos : this.pos;\r\n\r\n        if (this.alpha != 1) {\r\n            var tmpAlpha = context.globalAlpha;\r\n            context.globalAlpha = this.alpha;\r\n        }\r\n\r\n        for (var i = 0, len = lines.length; i < len; i += 1) {\r\n            if (this.lineWidth) {\r\n                context.strokeText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n            }\r\n            context.fillText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n        }\r\n\r\n        if (this.alpha != 1) {\r\n            context.globalAlpha = tmpAlpha;\r\n        }\r\n\r\n        context.lineWidth = 0;\r\n        context.strokeStyle = 'black';\r\n    };\r\n\r\n    TextNode.prototype.getText = function () {\r\n        return this.fullText;\r\n    };\r\n\r\n    TextNode.prototype.setText = function (text) {\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.textAlign = this.hAlign;\r\n            context.textBaseline = this.vAlign;\r\n            context.font = this.font;\r\n            context.lineWidth = this.lineWidth;\r\n            context.strokeStyle = this.colorL;\r\n\r\n            for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n                if (this.lineWidth) {\r\n                    context.strokeText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n                }\r\n                context.fillText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.strokeStyle = 'black';\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextNode = TextNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.TextNode = TextNode;\r\n    return TextNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/DeviceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var DeviceManager = function () {\r\n        return {\r\n            width: (parseInt(document.documentElement.clientWidth) < parseInt(screen.width))\r\n                ? parseInt(document.documentElement.clientWidth)\r\n                : parseInt(screen.width),\r\n            height: (parseInt(document.documentElement.clientHeight) < parseInt(screen.height))\r\n                ? parseInt(document.documentElement.clientHeight)\r\n                : parseInt(screen.height)\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.DeviceManager = DeviceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.DeviceManager = DeviceManager;\r\n    return DeviceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ErrorManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ErrorManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.mode = 'neverShow'; // values: onlyShow|stopAndShow|neverShow\r\n        this.enabled = false;\r\n    };\r\n\r\n    ErrorManager.prototype.init = function (_true) {\r\n        var errorManager = this;\r\n        errorManager.enabled = _true || true;\r\n\r\n        var runBtn = document.createElement('div');\r\n        runBtn.innerHTML = '<b>RUN</b>';\r\n        runBtn.style.padding = '5px';\r\n        runBtn.align = 'center';\r\n        runBtn.style.position = 'fixed';\r\n        runBtn.style.zIndex = 20000;\r\n        runBtn.style.left = '0px';\r\n        runBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        runBtn.style.fontSize = '8pt';\r\n        runBtn.style.backgroundColor = '#B8FFB8';\r\n        runBtn.style.height = '12px';\r\n        runBtn.style.width = '50px';\r\n        runBtn.style.cursor = 'pointer';\r\n\r\n        runBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        runBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение продолжено');\r\n            errorManager.j2Ds.runEngine(errorManager.j2Ds);\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(runBtn);\r\n        errorManager.logListener.elems.push(runBtn);\r\n\r\n\r\n        var pauseBtn = document.createElement('div');\r\n        pauseBtn.innerHTML = '<b>PAUSE</b>';\r\n        pauseBtn.style.padding = '5px';\r\n        pauseBtn.align = 'center';\r\n        pauseBtn.style.position = 'fixed';\r\n        pauseBtn.style.zIndex = 20000;\r\n        pauseBtn.style.left = '60px';\r\n        pauseBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        pauseBtn.style.fontSize = '8pt';\r\n        pauseBtn.style.backgroundColor = '#FFFFBD';\r\n        pauseBtn.style.height = '12px';\r\n        pauseBtn.style.width = '50px';\r\n        pauseBtn.style.cursor = 'pointer';\r\n\r\n        pauseBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        pauseBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение приостановлено');\r\n            errorManager.j2Ds.stopEngine();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(pauseBtn);\r\n        errorManager.logListener.elems.push(pauseBtn);\r\n\r\n        var reloadBtn = document.createElement('div');\r\n        reloadBtn.innerHTML = '<b>RELOAD</b>';\r\n        reloadBtn.style.padding = '5px';\r\n        reloadBtn.align = 'center';\r\n        reloadBtn.style.position = 'fixed';\r\n        reloadBtn.style.zIndex = 20000;\r\n        reloadBtn.style.left = '120px';\r\n        reloadBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        reloadBtn.style.fontSize = '8pt';\r\n        reloadBtn.style.backgroundColor = '#E2E2E2';\r\n        reloadBtn.style.color = 'black';\r\n        reloadBtn.style.height = '12px';\r\n        reloadBtn.style.width = '50px';\r\n        reloadBtn.style.cursor = 'pointer';\r\n\r\n        reloadBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        reloadBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.j2Ds.dom.reloadURL();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(reloadBtn);\r\n        errorManager.logListener.elems.push(reloadBtn);\r\n\r\n        errorManager.j2Ds.events.addEvent('dom:loaded', function () {\r\n            errorManager.j2Ds.window.onerror = function (e) {\r\n                errorManager.show(e);\r\n            };\r\n        });\r\n    };\r\n\r\n    ErrorManager.prototype.show = function (string) {\r\n        console.log('[j2Ds]: ' + string);\r\n    };\r\n\r\n    ErrorManager.prototype.setMode = function (mode) {\r\n        this.mode = mode;\r\n        if (mode == 'neverShow') {\r\n            this.enabled = false;\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.debug = function (string) {\r\n        if (!this.enabled) return;\r\n        this.j2Ds.stopEngine();\r\n        if (this.mode != 'neverShow') {\r\n            this.show(string || 'Точка останова достигнута');\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.showError = function (err, _func) {\r\n        if (this.mode == 'neverShow') return;\r\n\r\n        var stack = err.stack.toString();\r\n        stack = stack.split(/\\n/);\r\n\r\n        for (var i = 0, len = stack.length; i < len; i += 1) {\r\n            if (stack[i].match(/\\:\\d/)) {\r\n                stack = stack[i].split(/\\s/);\r\n                break;\r\n            }\r\n        }\r\n\r\n        stack = stack[stack.length - 1];\r\n        stack = stack.replace(/([\\(\\)]|[\\w]+:\\/\\/)/g, '');\r\n        var file = stack.split(':'),\r\n            line = file[1],\r\n            number = file[2];\r\n        file = decodeURI(file[0]);\r\n\r\n        if (file.match(/(<anonymous>|\\bj2Ds.js)/)) {\r\n            file = '<Функция-аргумент или строка>';\r\n        }\r\n\r\n        var errMess = 'Тип ошибки: \"' + err.name + '\"' +\r\n            '\\nСообщение: \"' + err.message + '\"' +\r\n            '\\nФайл с ошибкой: \"' + file + '\"' +\r\n            '\\nСтрока: ' + line +\r\n            ', символ: ' + number;\r\n\r\n        if (_func) {\r\n            errMess += '\\nОшибка в теле функции: \\n' + _func.toString();\r\n        }\r\n\r\n        this.show(errMess);\r\n\r\n        if (this.mode == 'stopAndShow') {\r\n            this.j2Ds.stopEngine();\r\n            this.show('Выполнение приостановлено');\r\n        }\r\n\r\n    };\r\n\r\n    ErrorManager.prototype.logListener = {\r\n        domId: '',\r\n        count: 0,\r\n        execLine: '',\r\n        elems: []\r\n    };\r\n\r\n    ErrorManager.prototype.lightSyntax = function (_code, _type) {\r\n        var code = ('' + _code).toString();\r\n\r\n        if (_type == 'boolean') {\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        } else if (_type == 'code') {\r\n            code = code.replace(/(this|var|typeof|new|return|if|else|for|in|while|break|do|continue|switch|case)([^a-z0-9\\$_])/gi,\r\n                '<span style=\"color: #FFC0CB;\"><b>$1</b></span>$2')\r\n                .replace(/(function|object)/gi,\r\n                    '<span style=\"color: #FFA500;\">$1</span>')\r\n                .replace(/(width|height|window|document|scene|j2Ds|value)/gi,\r\n                    '<span style=\"color: #59B5C0;\">$1</span>')\r\n                .replace(/([a-z\\_\\$][a-z0-9_]*)\\(/gi, '<span style=\"color: #FFCD70;\">$1</span>(')\r\n                .replace(/(\\{|\\}|\\]|\\[|\\|)/gi, '<span style=\"color: #FFFF00;\">$1</span>')\r\n                .replace(/('.*?')/g, '<span style=\"color: #8FFF8F;\">$1</span>')\r\n                .replace(/(#[a-z0-9]{3,8};)/, '<b style=\"color: red;\">$1</b>')\r\n                .replace(/(\\t)/g, '&nbsp;&nbsp;');\r\n\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        }\r\n\r\n        return code;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ErrorManager = ErrorManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ErrorManager = ErrorManager;\r\n    return ErrorManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/FpsManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var FpsManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.fps = this.j2Ds.frameLimit;\r\n        this.tmp_of_fps = 1;\r\n        this.tmp_of_time = Date.now();\r\n    };\r\n\r\n    FpsManager.prototype.init = function () {\r\n        var fpsManager = this;\r\n        fpsManager.enabled = true;\r\n\r\n        this.j2Ds.events.addEvent('engine:after', function () {\r\n            fpsManager.update();\r\n        });\r\n\r\n    };\r\n\r\n    FpsManager.prototype.update = function () {\r\n        if (!this.enabled) return;\r\n        this.tmp_of_fps += 1;\r\n        if (this.j2Ds.now - this.tmp_of_time >= 1000) {\r\n            this.fps = this.tmp_of_fps;\r\n            this.tmp_of_fps = 1;\r\n            this.tmp_of_time = this.j2Ds.now;\r\n        }\r\n    };\r\n\r\n    FpsManager.prototype.getFPS = function () {\r\n        return this.fps <= this.j2Ds.frameLimit ? this.fps : this.j2Ds.frameLimit;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.FpsManager = FpsManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.FpsManager = FpsManager;\r\n    return FpsManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ResourceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ResourceManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.added = 0;\r\n        this.loaded = 0;\r\n        this.failed = 0;\r\n\r\n        this.add = function () {\r\n            this.added += 1;\r\n        };\r\n\r\n        this.ok = function (file) {\r\n            this.loaded += 1;\r\n            this.j2Ds.errorManager.show('loaded: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.fail = function (file) {\r\n            this.failed += 1;\r\n            this.j2Ds.errorManager.show('error load: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.show = function () {\r\n            return {'added': this.added, 'loaded': this.loaded, 'failed': this.failed};\r\n        };\r\n\r\n        this.isLoaded = function () {\r\n            return this.added == this.loaded;\r\n        };\r\n\r\n        this.getProgress = function () {\r\n            return Math.ceil(this.loaded / this.added * 100);\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ResourceManager = ResourceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ResourceManager = ResourceManager;\r\n    return ResourceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/StorageManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var StorageManager = function (j2Ds, id) {\r\n        this.j2Ds = j2Ds;\r\n        this.id = id;\r\n        this.ls = this.j2Ds.window.localStorage ? this.j2Ds.window.localStorage : false;\r\n        if (!this.ls) alert('j2Ds ERROR in \"createLocal(' + id + ')\" \\n' + 'Объект \"localStorage\" не поддерживается.');\r\n    };\r\n\r\n    StorageManager.prototype.saveNode = function (name, o) {\r\n        if (!this.ls) return false;\r\n        this.ls.setItem(this.id + name, JSON.stringify(o));\r\n    };\r\n\r\n    StorageManager.prototype.load = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return this.ls.getItem(this.id + name);\r\n    };\r\n\r\n    StorageManager.prototype.is = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return !!(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    StorageManager.prototype.save = function (name, value) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        this.ls.setItem(this.id + name, value);\r\n    };\r\n\r\n    StorageManager.prototype.loadNode = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return JSON.parse(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.StorageManager = StorageManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.StorageManager = StorageManager;\r\n    return StorageManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TimeManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TimeManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.times = {};\r\n\r\n        this.insert = function (id) {\r\n            if (!this.times[id]) {\r\n                this.times[id] = this.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        this.get = function (id) {\r\n            return this.times[id];\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TimeManager = TimeManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TimeManager = TimeManager;\r\n    return TimeManager;\r\n}));\r\n\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TriggerManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TriggerManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.enabled = false;\r\n        this.triggers = {};\r\n    };\r\n\r\n    TriggerManager.prototype.add = function (id, callback) {\r\n        var triggerManager = this;\r\n        var trigger = {\r\n            command: callback,\r\n            count: 0,\r\n            state: 'stop',\r\n            last: false\r\n        };\r\n\r\n        trigger.run = function (mSec) {\r\n            if (this.state == 'job') {\r\n                this.command();\r\n                return;\r\n            }\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'job';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.job = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec && this.state != 'run') {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.loop = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.reset = function () {\r\n            this.count = 0;\r\n            this.state = 'stop';\r\n            this.last = false;\r\n        };\r\n\r\n        this.triggers[id] = trigger;\r\n        return trigger;\r\n    };\r\n\r\n    TriggerManager.prototype.get = function (id) {\r\n        return this.triggers[id];\r\n    };\r\n\r\n    TriggerManager.prototype.init = function () {\r\n        this.enabled = true;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TriggerManager = TriggerManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TriggerManager = TriggerManager;\r\n    return TriggerManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ViewManager', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var ViewManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.views = {};\r\n    };\r\n\r\n    ViewManager.prototype.add = function (id, pos) {\r\n        var viewManager = this;\r\n        var viewport = {\r\n            focusNode: false\r\n        };\r\n\r\n        viewport.pos = pos ? MathUtil.v2f(pos.x, pos.y) : MathUtil.v2f(0, 0);\r\n\r\n        viewport.setPosition = function (pos) {\r\n            if (!pos) return this;\r\n            this.pos = MathUtil.v2f(pos.x - viewManager.j2Ds.scene.width / 2, pos.y - viewManager.j2Ds.scene.height / 2);\r\n        };\r\n\r\n        viewport.getPosition = function () {\r\n            return this.pos;\r\n        };\r\n\r\n        viewport.move = function (pos) {\r\n            this.pos.x += pos.x;\r\n            this.pos.y += pos.y;\r\n        };\r\n\r\n        viewManager.j2Ds.viewManager.views[id] = viewport;\r\n        return viewport;\r\n    };\r\n\r\n    ViewManager.prototype.get = function (id) {\r\n        return this.j2Ds.viewManager.views[id];\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ViewManager = ViewManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ViewManager = ViewManager;\r\n    return ViewManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/AudioHandler', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var AudioHandler = function () {\r\n        this.audios = {};\r\n        this.enabled = false\r\n    };\r\n\r\n    AudioHandler.prototype.init = function () {\r\n        var audioHandler = this;\r\n        this.enabled = true;\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:deactivate', function () {\r\n            audioHandler.deactivate();\r\n        });\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:activate', function () {\r\n            audioHandler.activate();\r\n        });\r\n\r\n    };\r\n\r\n    AudioHandler.prototype.load = function (id, files, vol) {\r\n        var audioHandler = this;\r\n        audioHandler.j2Ds.resources.add();\r\n        var audio = document.createElement('audio');\r\n\r\n        for (var i = 0, len = files.length; i < len; i += 1) {\r\n            var source = document.createElement('source');\r\n            source.src = files[i];\r\n            audio.appendChild(source);\r\n        }\r\n\r\n        audio.id = 'audio_' + id;\r\n\r\n        if (vol) {\r\n            audio.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n        }\r\n\r\n        var sound = {\r\n            id: id,\r\n            files: files,\r\n            domEl: audio, // DOMElement\r\n            ready: false,\r\n            len: 0,\r\n            state: 'stop',\r\n            lock: false,\r\n            volume: audio.volume,\r\n            onePlay: false\r\n        };\r\n\r\n        sound.domEl.addEventListener('loadeddata', function (e) {\r\n            sound.ready = true;\r\n            var file = e.explicitOriginalTarget || e.path[0];\r\n            audioHandler.j2Ds.resources.ok(file.currentSrc);\r\n        });\r\n\r\n        sound.domEl.addEventListener('error', function (e) {\r\n            sound.setLock(true);\r\n            //var file = e.srcElement || e.target;\r\n            //audioHandler.j2Ds.resources.fail(file.src);\r\n        });\r\n\r\n        sound.domEl.addEventListener('ended', function () {\r\n            sound.state = 'stop';\r\n        });\r\n\r\n        sound.play = function (unlock) {\r\n            if (unlock) {\r\n                this.setLock(false);\r\n            }\r\n            if (this.lock) return;\r\n            if (this.state == 'play') {\r\n                this.domEl.currentTime = 0;\r\n            }\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.loop = function () {\r\n            if (this.lock) return;\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.pause = function (lock) {\r\n            if (this.state == 'play') {\r\n                this.setLock(lock);\r\n                this.domEl.pause();\r\n                this.state = 'pause';\r\n            }\r\n        };\r\n\r\n        sound.stop = function (lock) {\r\n            this.domEl.pause();\r\n            this.domEl.currentTime = 0;\r\n            this.state = 'stop';\r\n            if (lock) {\r\n                this.setLock(lock);\r\n            }\r\n        };\r\n\r\n        sound.setLock = function (lock) {\r\n            this.lock = lock ? true : false;\r\n        };\r\n\r\n        sound.setVolume = function (vol) {\r\n            this.domEl.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n            this.volume = this.domEl.volume;\r\n        };\r\n\r\n        sound.getVolume = function (id) {\r\n            return this.volume;\r\n        };\r\n\r\n        sound.getState = function (id) {\r\n            return this.state;\r\n        };\r\n\r\n        sound.getPlayPosition = function () {\r\n            return this.domEl.currentTime;\r\n        };\r\n\r\n        sound.domEl.load();\r\n\r\n        this.audios[id] = sound;\r\n        return sound;\r\n    };\r\n\r\n    AudioHandler.prototype.get = function (id) {\r\n        return this.audios[id];\r\n    };\r\n\r\n    AudioHandler.prototype.pause = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].pause(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.stop = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].stop(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.play = function (unlock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].play(unlock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.deactivate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'play') {\r\n                this.audios[snd].pause();\r\n                this.audios[snd].state = 'deactivated';\r\n            }\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.activate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'deactivated') {\r\n                this.audios[snd].play();\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.AudioHandler = AudioHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.AudioHandler = AudioHandler;\r\n    return AudioHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputHandler', ['utils/MathUtil', 'nodes/BaseNode'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'), require('nodes/BaseNode'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil, root.modules.nodes.BaseNode);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil, BaseNode) {\r\n    \"use strict\";\r\n\r\n    var InputHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.pos = {x: 0, y: 0};\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.keyDown = [];\r\n        this.keyPress = [];\r\n        this.keyPressed = [];\r\n        this.keyUp = [];\r\n        this.keyUped = false;\r\n        this.mouseDown = [];\r\n        this.mousePress = [];\r\n        this.mousePressed = [];\r\n        this.mouseUp = [];\r\n        this.mouseUpped = false;\r\n        this.mouseWheel = 0;\r\n        this.canceled = false;\r\n        this.body = false;\r\n        this.anyKey = false;\r\n        this.anyMouse = false;\r\n        this.writeMode = false;\r\n        this.displayCursor = '';\r\n        this.visible = true;\r\n        this.enabled = false;\r\n    };\r\n\r\n    InputHandler.prototype.mKey = {\r\n        'LEFT': 1,\r\n        'MIDDLE': 2,\r\n        'RIGHT': 3\r\n    };\r\n\r\n    InputHandler.prototype.jKey = {\r\n        'LEFT': 37,\r\n        'RIGHT': 39,\r\n        'UP': 38,\r\n        'DOWN': 40,\r\n        'SPACE': 32,\r\n        'CTRL': 17,\r\n        'SHIFT': 16,\r\n        'ALT': 18,\r\n        'ESC': 27,\r\n        'ENTER': 13,\r\n        'MINUS': 189,\r\n        'PLUS': 187,\r\n        'CAPS_LOCK': 20,\r\n        'BACKSPACE': 8,\r\n        'TAB': 9,\r\n        'Q': 81,\r\n        'W': 87,\r\n        'E': 69,\r\n        'R': 82,\r\n        'T': 84,\r\n        'Y': 89,\r\n        'U': 85,\r\n        'I': 73,\r\n        'O': 79,\r\n        'P': 80,\r\n        'A': 65,\r\n        'S': 83,\r\n        'D': 68,\r\n        'F': 70,\r\n        'G': 71,\r\n        'H': 72,\r\n        'J': 74,\r\n        'K': 75,\r\n        'L': 76,\r\n        'Z': 90,\r\n        'X': 88,\r\n        'V': 86,\r\n        'B': 66,\r\n        'N': 78,\r\n        'M': 77,\r\n        '0': 48,\r\n        '1': 49,\r\n        '2': 50,\r\n        '3': 51,\r\n        '4': 52,\r\n        '5': 53,\r\n        '6': 54,\r\n        '7': 55,\r\n        '8': 56,\r\n        'C': 67,\r\n        '9': 57,\r\n        'NUM_0': 45,\r\n        'NUM_1': 35,\r\n        'NUM_2': 40,\r\n        'NUM_3': 34,\r\n        'NUM_4': 37,\r\n        'NUM_5': 12,\r\n        'NUM_6': 39,\r\n        'NUM_7': 36,\r\n        'NUM_8': 38,\r\n        'NUM_9': 33,\r\n        'NUM_MINUS': 109,\r\n        'NUM_PLUS': 107,\r\n        'NUM_LOCK': 144,\r\n        'F1': 112,\r\n        'F2': 113,\r\n        'F3': 114,\r\n        'F4': 115,\r\n        'F5': 116,\r\n        'F6': 117,\r\n        'F7': 118,\r\n        'F8': 119,\r\n        'F9': 120,\r\n        'F10': 121,\r\n        'F11': 122,\r\n        'F12': 123\r\n    };\r\n\r\n    InputHandler.prototype.keyList = function () {\r\n        var o = [];\r\n        for (var i in this.jKey) {\r\n            o.push(i);\r\n        }\r\n        return o;\r\n    };\r\n\r\n    InputHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n        this.keyPress = [];\r\n        this.keyUp = [];\r\n        this.mousePress = [];\r\n        this.mouseUp = [];\r\n        this.mouseWheel = 0;\r\n    };\r\n\r\n    InputHandler.prototype.isKeyDown = function (code) {\r\n        return this.keyDown[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyPress = function (code) {\r\n        return this.keyPress[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyUp = function (code) {\r\n        return this.keyUp[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    InputHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    InputHandler.prototype.setWriteMode = function (_true) {\r\n        this.writeMode = _true;\r\n    };\r\n\r\n    InputHandler.prototype.isWriteMode = function () {\r\n        return this.writeMode;\r\n    };\r\n\r\n    InputHandler.prototype.keyEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        if (e.type == 'keydown') {\r\n            if (!this.keyPressed[e.keyCode]) {\r\n                this.keyPress[e.keyCode] = true;\r\n                this.keyPressed[e.keyCode] = true;\r\n            }\r\n            if (!this.writeMode) {\r\n                e.preventDefault();\r\n            } else {\r\n                this.j2Ds.events.onEvent('writeMode:keyPress', '');\r\n            }\r\n        } else if (e.type == 'keyup') {\r\n            if (this.keyPressed[e.keyCode]) {\r\n                e.preventDefault();\r\n                this.keyPress[e.keyCode] = false;\r\n                this.keyPressed[e.keyCode] = false;\r\n                this.keyUp[e.keyCode] = true;\r\n                this.keyUped = true;\r\n            }\r\n        } else if (e.type == 'keypress' && (this.writeMode)) {\r\n            var char = '';\r\n            if (e.which != 0 && e.charCode != 0) {\r\n                if (e.which >= 32) {\r\n                    char = String.fromCharCode(e.which);\r\n                }\r\n            }\r\n            this.j2Ds.events.onEvent('writeMode:keyPress', char);\r\n        }\r\n\r\n        this.keyDown[e.keyCode] = (e.type == 'keydown') && (!this.canceled);\r\n        this.anyKey = e.keyCode;\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.cancel = function (id) {\r\n        if (!id) {\r\n            this.canceled = true;\r\n            this.keyDown = [];\r\n            this.mouseDown = [];\r\n        }\r\n        else {\r\n            this.keyDown[this.jKey[id]] = false;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.onNode = function (node) {\r\n        if (node instanceof BaseNode) {\r\n            if (!node.layer.visible || !node.isLookScene()) return false;\r\n            return node.isPointInsideBox(node.getBoxVertices(), this.pos);\r\n        } else if (node instanceof Array && node.length > 0 && node[0] instanceof BaseNode) {\r\n            for (var i = 0; i < node.length; i++) {\r\n                if (!node[i].layer.visible || !node[i].isLookScene()) continue;\r\n                if (node[i].isPointInsideBox(node[i].getBoxVertices(), this.pos)) return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n        this.x = (this.screenPos.x / dX);\r\n        this.y = (this.screenPos.y / dY);\r\n        this.pos.x = this.j2Ds.scene.view.pos.x + this.x;\r\n        this.pos.y = this.j2Ds.scene.view.pos.y + this.y;\r\n    };\r\n\r\n    InputHandler.prototype.onMove = function (e) {\r\n        this.screenPos.x = -this.j2Ds.scene.offsetLeft + e.pageX;\r\n        this.screenPos.y = -this.j2Ds.scene.offsetTop + e.pageY;\r\n    };\r\n\r\n    InputHandler.prototype.isMouseDown = function (code) {\r\n        return this.mouseDown[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMousePress = function (code) {\r\n        return this.mousePress[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseUp = function (code) {\r\n        return this.mouseUp[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseWheel = function (code) {\r\n        return (code == 'UP' && this.mouseWheel > 0) ||\r\n            (code == 'DOWN' && this.mouseWheel < 0)\r\n    };\r\n\r\n    InputHandler.prototype.onMouseWheel = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        this.mouseWheel = ((e.wheelDelta) ? e.wheelDelta : -e.detail);\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.onMouseEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        if (!e.which && e.button) {\r\n            if (e.button & 1) e.which = 1;\r\n            else if (e.button & 4) e.which = 2;\r\n            else if (e.button & 2) e.which = 3;\r\n        }\r\n\r\n        if (e.type == 'mousedown') {\r\n            if (!this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = true;\r\n                this.mousePressed[e.which] = true;\r\n            }\r\n        } else if (e.type == 'mouseup') {\r\n            if (this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = false;\r\n                this.mousePressed[e.which] = false;\r\n                this.mouseUp[e.which] = true;\r\n                this.mouseUped = true;\r\n            }\r\n        }\r\n\r\n        this.mouseDown[e.which] = (e.type == 'mousedown') && (!this.canceled);\r\n\r\n        this.j2Ds.window.focus();\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.setCursorImage = function (curImg) {\r\n        this.j2Ds.dom.tag('body')[0].style.cursor = 'url(\"' + curImg + '\"), auto';\r\n    };\r\n\r\n    InputHandler.prototype.setVisible = function (_true) {\r\n        this.visible = _true;\r\n        if (!_true) {\r\n            this.displayCursor = this.j2Ds.dom.tag('body')[0].style.cursor;\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = 'none';\r\n        } else {\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = this.displayCursor;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    InputHandler.prototype.init = function () {\r\n        var input = this;\r\n        input.enabled = true;\r\n\r\n        input.j2Ds.events.addEvent('engine:before', function () {\r\n            input.upd();\r\n        });\r\n\r\n        input.j2Ds.events.addEvent('engine:after', function () {\r\n            input.reset();\r\n        });\r\n\r\n\r\n        input.j2Ds.events.addEvent('dom:loaded', function () {\r\n            input.j2Ds.window.oncontextmenu = function () {\r\n                return false;\r\n            };\r\n            input.j2Ds.window.onselectstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.ondragstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.onmousedown = input.onMouseEvent;\r\n            input.j2Ds.window.onmouseup = function (e) {\r\n                input.canceled = false;\r\n                input.onMouseEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousemove = function (e) {\r\n                input.onMove(e);\r\n            };\r\n            input.j2Ds.window.onkeydown = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeyup = function (e) {\r\n                input.canceled = false;\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeypress = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousewheel = function (e) {\r\n                input.onMouseWheel(e);\r\n            };\r\n\r\n            if (input.j2Ds.window.addEventListener) {\r\n                input.j2Ds.window.addEventListener(\"DOMMouseScroll\", function (e) {\r\n                    input.onMouseWheel(e);\r\n                }, false);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.InputHandler = InputHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.InputHandler = InputHandler;\r\n    return InputHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/TouchHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var TouchHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.pos = {x: 0, y: 0};\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.canceled = false;\r\n        this.touchs = [];\r\n        this.tapDown = false;\r\n        this.tapPress = false;\r\n        this.tapUp = false;\r\n        this.body = false;\r\n    };\r\n\r\n    TouchHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.cancel = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.isTapDown = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapPress = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapUp = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.getTouch = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.onTouchEvent = function () {\r\n        if (!this.enabled) return false;\r\n\r\n    };\r\n\r\n\r\n    TouchHandler.prototype.init = function () {\r\n        var touchHandler = this;\r\n        touchHandler.enabled = true;\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:before', function () {\r\n            touchHandler.upd();\r\n        });\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:after', function () {\r\n            touchHandler.reset();\r\n        });\r\n\r\n\r\n        touchHandler.j2Ds.events.addEvent('dom:loaded', function () {\r\n\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TouchHandler = TouchHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.TouchHandler = TouchHandler;\r\n    return TouchHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Layers', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Layers = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.layersList = {};\r\n    };\r\n\r\n    Layers.prototype.layer = function (id) {\r\n        return this.layersList[id];\r\n    };\r\n\r\n    Layers.prototype.add = function (id, index, notDOM) {\r\n        if (!!this.layersList[id]) return false;\r\n\r\n        var layer = {\r\n            layerName: id\r\n        };\r\n\r\n        if (!notDOM) {\r\n            layer.canvas = document.createElement('canvas');\r\n        } else {\r\n            layer.canvas = this.j2Ds.dom.id(id);\r\n        }\r\n\r\n        layer.canvas.style.position = this.j2Ds.scene.stylePosition;\r\n\r\n        layer.canvas.id = id;\r\n\r\n        layer.canvas.style.zIndex = 1000 + index;\r\n        layer.canvas.style.left = this.j2Ds.scene.offsetLeft + 'px';\r\n        layer.canvas.style.top = this.j2Ds.scene.offsetTop + 'px';\r\n\r\n        layer.canvas.width = this.j2Ds.scene.width;\r\n        layer.canvas.height = this.j2Ds.scene.height;\r\n        layer.width = this.j2Ds.scene.width;\r\n        layer.height = this.j2Ds.scene.height;\r\n        layer.context = layer.canvas.getContext('2d');\r\n        layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n        layer.alpha = 1;\r\n        layer.angle = 0;\r\n        layer.visible = 1;\r\n\r\n        layer.onContext = function (callback) {\r\n            callback(this.context);\r\n        };\r\n\r\n        layer.fill = function (color) {\r\n            this.context.fillStyle = color;\r\n            this.context.fillRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.setAlpha = function (alpha) {\r\n            this.canvas.style.opacity = alpha;\r\n            this.alpha = alpha;\r\n        };\r\n\r\n        layer.getAlpha = function () {\r\n            return this.alpha;\r\n        };\r\n\r\n        layer.setVisible = function (visible) {\r\n            if (visible) {\r\n                this.canvas.style.display = 'block';\r\n                this.visible = true;\r\n            } else {\r\n                this.canvas.style.display = 'none';\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        layer.isVisible = function () {\r\n            return this.visible;\r\n        };\r\n\r\n        layer.setIndex = function (index) {\r\n            this.canvas.style.zIndex = 1000 + index;\r\n        };\r\n\r\n        layer.clear = function () {\r\n            this.context.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.clearNode = function (node) {\r\n            var layer = this;\r\n            if (node.isLookScene()) {\r\n                this.context.clearRect(\r\n                    node.pos.x - layer.j2Ds.scene.view.pos.x,\r\n                    node.pos.y - layer.j2Ds.scene.view.pos.y,\r\n                    node.size.x,\r\n                    node.size.y\r\n                );\r\n            }\r\n        };\r\n\r\n        layer.setContextSettings = function (settings) {\r\n            for (var i in settings) {\r\n                if (typeof this.context[i] !== 'undefined') {\r\n                    this.context[i] = settings[i];\r\n                }\r\n            }\r\n        };\r\n\r\n        layer.clearRect = function (pos, size) {\r\n            var layer = this;\r\n            this.context.clearRect(pos.x - layer.j2Ds.scene.view.pos.x, pos.y - layer.j2Ds.scene.view.pos.y, size.x, size.y);\r\n        };\r\n\r\n        this.layersList[id] = layer;\r\n\r\n        if (!notDOM) {\r\n            this.j2Ds.dom.attach(this.layersList[id].canvas);\r\n        }\r\n\r\n        return layer;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Layers = Layers;\r\n    if (global.j2Ds !== undefined) global.modules.core.Layers = Layers;\r\n    return Layers;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Scene', [\r\n            'nodes/BaseNode',\r\n            'nodes/CircleNode',\r\n            'nodes/LineNode',\r\n            'nodes/RectNode',\r\n            'nodes/SpriteNode',\r\n            'nodes/TextNode',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('nodes/BaseNode'),\r\n            require('nodes/CircleNode'),\r\n            require('nodes/LineNode'),\r\n            require('nodes/RectNode'),\r\n            require('nodes/SpriteNode'),\r\n            require('nodes/TextNode'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.nodes.BaseNode,\r\n            root.modules.nodes.CircleNode,\r\n            root.modules.nodes.LineNode,\r\n            root.modules.nodes.RectNode,\r\n            root.modules.nodes.SpriteNode,\r\n            root.modules.nodes.TextNode,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (BaseNode,\r\n              CircleNode,\r\n              LineNode,\r\n              RectNode,\r\n              SpriteNode,\r\n              TextNode,\r\n              TextureUtil) {\r\n        \"use strict\";\r\n\r\n        var Scene = function (j2Ds) {\r\n            j2Ds = this.j2Ds = j2Ds;\r\n\r\n            this.nodes = [];\r\n            this.layerName = 'sceneNode';\r\n            this.stylePosition = 'fixed';\r\n            this.layers = j2Ds.layers;\r\n            this.view = false;\r\n            this.gameStateName = false;\r\n            this.canFullScreen = true;\r\n\r\n            this.texture = new TextureUtil(this.j2Ds);\r\n        };\r\n\r\n        /*функции*/\r\n\r\n        Scene.prototype.setView = function (id) {\r\n            this.view = this.j2Ds.viewManager.views[id];\r\n        };\r\n\r\n        Scene.prototype.getView = function () {\r\n            return this.view;\r\n        };\r\n\r\n        Scene.prototype.setAutoDraw = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:after', function () {\r\n                    scene.drawAllNodes();\r\n                }, 'autoDraw');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:after', 'autoDraw');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setAutoClear = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:before', function () {\r\n                    scene.clear();\r\n                }, 'autoClear');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:before', 'autoClear');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setGameState = function (name) {\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name].state) {\r\n                this.j2Ds.setActiveEngine(this.j2Ds.gameStates.states[name].state);\r\n            }\r\n            this.gameStateName = name;\r\n            this.j2Ds.events.onEvent('scene:changedGameState');\r\n        };\r\n\r\n        Scene.prototype.getGameState = function () {\r\n            return this.gameStateName;\r\n        };\r\n\r\n        Scene.prototype.start = function (name, frameLimit) {\r\n            this.j2Ds.events.onEvent('scene:beforeStart');\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name]) {\r\n                this.j2Ds.start(this.j2Ds.gameStates.states[name].state, frameLimit);\r\n            }\r\n            this.j2Ds.events.onEvent('scene:afterStart');\r\n        };\r\n\r\n        Scene.prototype.fullScreen = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            var tmpCanvas = document.createElement('canvas'); // Нужны для копирования содержимого\r\n            var tmpContext = tmpCanvas.getContext('2d');      // При изменении размера\r\n            if (_true) {\r\n                this.origWidth = this.width;\r\n                this.origHeight = this.height;\r\n                this.width = this.j2Ds.getDeviceManager().width;\r\n                this.height = this.j2Ds.getDeviceManager().height;\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i];\r\n                    tmpCanvas.width = layer.width;\r\n                    tmpCanvas.height = layer.height;\r\n                    tmpContext.drawImage(layer.canvas, 0, 0);\r\n                    layer.canvas.width = this.width;\r\n                    layer.canvas.height = this.height;\r\n                    layer.width = this.width;\r\n                    layer.height = this.height;\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n\r\n                    layer.context.drawImage(tmpCanvas, 0, 0, layer.width, layer.height);\r\n                }\r\n            } else {\r\n                this.width = this.origWidth;\r\n                this.height = this.origHeight;\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i];\r\n                    layer.width = this.origWidth;\r\n                    layer.height = this.origHeight;\r\n                    layer.canvas.width = this.origWidth;\r\n                    layer.canvas.height = this.origHeight;\r\n                    this.offsetWidth = this.origWidth;\r\n                    this.offsetHeight = this.origHeight;\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.fullScale = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            if (_true) {\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i].canvas;\r\n                    layer.style.width = this.j2Ds.getDeviceManager().width + 'px';\r\n                    layer.style.height = this.j2Ds.getDeviceManager().height + 'px';\r\n                    this.offsetWidth = this.j2Ds.getDeviceManager().width;\r\n                    this.offsetHeight = this.j2Ds.getDeviceManager().height;\r\n                }\r\n            } else {\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i].canvas;\r\n                    layer.style.width = this.width + 'px';\r\n                    layer.style.height = this.height + 'px';\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.clear = function () {\r\n            this.getLayer().clear();\r\n        };\r\n\r\n        Scene.prototype.getLayer = function () {\r\n            return this.j2Ds.layers.layer(this.layerName);\r\n        };\r\n\r\n        Scene.prototype.drawAllNodes = function () {\r\n            for (var i = 0, len = this.nodes.length; i < len; i += 1) {\r\n                if (this.nodes[i].draw) {\r\n                    this.nodes[i].draw();\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.init = function (width, height, canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = width;\r\n            scene.height = height;\r\n\r\n            scene.origWidth = width;\r\n            scene.origHeight = height;\r\n\r\n            scene.offsetWidth = width;\r\n            scene.offsetHeight = height;\r\n\r\n            scene.offsetLeft = 0;\r\n            scene.offsetTop = 0;\r\n\r\n\r\n            scene.j2Ds.canDeactivate = canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add('sceneNode', 0);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(scene.layerName).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(scene.layerName).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.layersList) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        Scene.prototype.initCanvas = function (id, canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.canFullScreen = false;\r\n\r\n            scene.layerName = id;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = parseInt(scene.j2Ds.dom.id(id).width);\r\n            scene.height = parseInt(scene.j2Ds.dom.id(id).height);\r\n\r\n            scene.origWidth = scene.width;\r\n            scene.origHeight = scene.height;\r\n\r\n            scene.offsetWidth = parseInt(scene.j2Ds.dom.id(id).offsetWidth);\r\n            scene.offsetHeight = parseInt(scene.j2Ds.dom.id(id).offsetHeight);\r\n\r\n            scene.offsetLeft = parseInt(scene.j2Ds.dom.id(id).offsetLeft);\r\n            scene.offsetTop = parseInt(scene.j2Ds.dom.id(id).offsetTop);\r\n\r\n            scene.stylePosition = scene.j2Ds.dom.id(id).style.position == 'fixed' ? 'fixed' : 'absolute';\r\n\r\n            scene.j2Ds.canDeactivate = canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add(id, 0, 1);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(id).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(id).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.layersList) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        /* Nodes */\r\n        Scene.prototype.addBaseNode = function (pos, size) {\r\n            return new BaseNode(this.j2Ds, pos, size);\r\n        };\r\n\r\n        Scene.prototype.addCircleNode = function (pos, radius, color) {\r\n            return new CircleNode(this.j2Ds, pos, radius, color);\r\n        };\r\n\r\n        Scene.prototype.addLineNode = function (pos, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.j2Ds, pos, points, scale, color, width, fill, cFill);\r\n        };\r\n\r\n        Scene.prototype.addRectNode = function (pos, size, color) {\r\n            return new RectNode(this.j2Ds, pos, size, color);\r\n        };\r\n\r\n        Scene.prototype.addSpriteNode = function (pos, size, animation) {\r\n            return new SpriteNode(this.j2Ds, pos, size, animation);\r\n        };\r\n\r\n        Scene.prototype.addTextNode = function (pos, text, sizePx, color, family, width, colorL) {\r\n            return new TextNode(this.j2Ds, pos, text, sizePx, color, family, width, colorL);\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Scene = Scene;\r\n        if (global.j2Ds !== undefined) global.modules.core.Scene = Scene;\r\n        return Scene;\r\n    }));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2Ds', [\r\n            'core/Dom',\r\n            'core/Gui',\r\n            'core/Events',\r\n            'core/Layers',\r\n            'core/Scene',\r\n\r\n            'io/AudioHandler',\r\n            'io/InputHandler',\r\n            'io/TouchHandler',\r\n\r\n            'managers/DeviceManager',\r\n            'managers/ErrorManager',\r\n            'managers/FpsManager',\r\n            'managers/ResourceManager',\r\n            'managers/StorageManager',\r\n            'managers/TimeManager',\r\n            'managers/TriggerManager',\r\n            'managers/ViewManager',\r\n\r\n            'utils/MathUtil',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('core/Dom'),\r\n            require('core/Gui'),\r\n            require('core/Events'),\r\n            require('core/Layers'),\r\n            require('core/Scene'),\r\n\r\n            require('io/AudioHandler'),\r\n            require('io/InputHandler'),\r\n            require('io/TouchHandler'),\r\n\r\n            require('managers/DeviceManager'),\r\n            require('managers/ErrorManager'),\r\n            require('managers/FpsManager'),\r\n            require('managers/ResourceManager'),\r\n            require('managers/StorageManager'),\r\n            require('managers/TimeManager'),\r\n            require('managers/TriggerManager'),\r\n            require('managers/ViewManager'),\r\n\r\n            require('utils/MathUtil'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.core.Dom,\r\n            root.modules.core.Gui,\r\n            root.modules.core.Events,\r\n            root.modules.core.Layers,\r\n            root.modules.core.Scene,\r\n\r\n            root.modules.io.AudioHandler,\r\n            root.modules.io.InputHandler,\r\n            root.modules.io.TouchHandler,\r\n\r\n            root.modules.managers.DeviceManager,\r\n            root.modules.managers.ErrorManager,\r\n            root.modules.managers.FpsManager,\r\n            root.modules.managers.ResourceManager,\r\n            root.modules.managers.StorageManager,\r\n            root.modules.managers.TimeManager,\r\n            root.modules.managers.TriggerManager,\r\n            root.modules.managers.ViewManager,\r\n\r\n            root.modules.utils.MathUtil,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (DOM,\r\n              GUI,\r\n              Events,\r\n              Layers,\r\n              Scene,\r\n              AudioHandler,\r\n              InputHandler,\r\n              TouchHandler,\r\n              DeviceManager,\r\n              ErrorManager,\r\n              FPSManager,\r\n              ResourceManager,\r\n              StorageManager,\r\n              TimeManager,\r\n              TriggerManager,\r\n              ViewManager,\r\n              MathUtil) {\r\n        \"use strict\";\r\n\r\n        var frameLimit = 60;\r\n\r\n        /*------------------ 2D движок --------------------*/\r\n        var j2DsEngine = function () {\r\n            this.vector = {}; //TODO:: is need?\r\n            this.math = {}; //TODO:: is need?\r\n            this.dom = {};\r\n            this.now = Date.now();\r\n            this.dt = 0;\r\n            this.stopAll = 0;\r\n            this.frameLimit = 60;\r\n            this.sceneStartTime = 0;\r\n            this.sceneSkipTime = 0;\r\n            this.engine = function () {\r\n                this.errorManager.show('Не инициализировано ни одно игровое состояние', 'red');\r\n                this.stopEngine();\r\n            };\r\n            this.ready = false;\r\n            this.window = window;\r\n            this.canDeactivate = true;\r\n\r\n            /* Getters & Setters */\r\n\r\n            this.getInfo = function () {\r\n                return {\r\n                    'name': 'j2Ds',\r\n                    'version': '0.6.3',\r\n                    'git': 'https://github.com/SkanerSoft/j2Ds',\r\n                    'site': 'http://j2ds.ru',\r\n                    'description': 'HTML5 2D Game Engine',\r\n                    'author': 'Skaner'\r\n                };\r\n            };\r\n\r\n            this.getFPSManager = function () {\r\n                this.fpsManager.init();\r\n                return this.fpsManager;\r\n            };\r\n\r\n            this.getSceneManager = function () {\r\n                return this.scene;\r\n            };\r\n\r\n            this.getLayerManager = function () {\r\n                return this.layers;\r\n            };\r\n\r\n            this.getTextureManager = function () {\r\n                return this.scene.texture;\r\n            };\r\n\r\n            this.getAudioManager = function () {\r\n                this.audio.init();\r\n                return this.audio;\r\n            };\r\n\r\n            this.getPaintManager = function () {\r\n                return this.paint;\r\n            };\r\n\r\n            this.getIO = function () {\r\n                this.input.init();\r\n                return this.input;\r\n            };\r\n\r\n            this.getTouchIO = function () {\r\n                this.touch.init();\r\n                return this.touch;\r\n            };\r\n\r\n            this.getDOMManager = function () {\r\n                return this.dom;\r\n            };\r\n\r\n            this.getTriggerManager = function () {\r\n                this.trigger.init();\r\n                return this.trigger;\r\n            };\r\n\r\n            this.getMathManager = function () {\r\n                return MathUtil;\r\n            };\r\n\r\n            this.getGameStateManager = function () {\r\n                return this.gameStates;\r\n            };\r\n\r\n            this.getViewManager = function () {\r\n                return this.viewManager;\r\n            };\r\n\r\n            this.getDeviceManager = function () {\r\n                return this.deviceManager;\r\n            };\r\n\r\n            this.getErrorManager = function () {\r\n                this.errorManager.init();\r\n                return this.errorManager;\r\n            };\r\n\r\n            this.getTimeManager = function () {\r\n                return this.timeManager;\r\n            };\r\n\r\n            this.getResourceManager = function () {\r\n                return this.resources;\r\n            };\r\n\r\n            this.setWindow = function (_window) {\r\n                this.window = _window ? _window : window;\r\n            };\r\n\r\n            this.setFrameLimit = function (fps) {\r\n                this.frameLimit = (fps > 0 && fps <= 60) ? fps : 60;\r\n                frameLimit = this.frameLimit;\r\n            };\r\n\r\n            this.setActiveEngine = function (engine) {\r\n                this.engine = typeof engine == 'function'\r\n                    ? engine\r\n                    : this.errorManager.show('Error in \"GameStateManager\"');\r\n            };\r\n\r\n            this.events = new Events(this);\r\n            this.dom = new DOM(this);\r\n            this.gui = new GUI(this);\r\n            this.resources = new ResourceManager(this);\r\n            this.trigger = new TriggerManager(this);\r\n            this.timeManager = new TimeManager(this);\r\n            this.deviceManager = DeviceManager();\r\n            this.errorManager = new ErrorManager(this);\r\n            this.fpsManager = new FPSManager(this);\r\n            this.input = new InputHandler(this);\r\n            this.layers = new Layers(this);\r\n            this.viewManager = new ViewManager(this);\r\n            this.scene = new Scene(this);\r\n\r\n            this.createLocal = function (id) {\r\n                new StorageManager(this, id);\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.gameStates = {\r\n            states: {},\r\n\r\n            add: function (name, _state, start, end) {\r\n                var state = {};\r\n                state.state = _state;\r\n                state.start = start || false;\r\n                state.end = end || false;\r\n\r\n                this.states[name] = state;\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.start = function (engine, frameLimit) {\r\n            this.setActiveEngine(engine);\r\n            this.frameLimit = frameLimit || 60;\r\n            this.sceneSkipTime = 1000.0 / this.frameLimit;\r\n            this.lastTime = Date.now();\r\n            this.dt = 0;\r\n            this.sceneStartTime = this.lastTime;\r\n            this.gameEngine(this);\r\n        };\r\n\r\n        j2DsEngine.prototype.gameEngine = function (j2Ds) {\r\n            j2Ds.now = Date.now();\r\n            setTimeout(function () {\r\n                if (!j2Ds.stopAll) {\r\n                    j2Ds.dt = (j2Ds.now - j2Ds.lastTime) / 100.0;\r\n                    j2Ds.sceneStartTime = j2Ds.now;\r\n                    if (j2Ds.dt > j2Ds.sceneSkipTime / 2) j2Ds.dt = 0;\r\n\r\n                    j2Ds.events.onEvent('engine:before');\r\n\r\n                    try {\r\n                        j2Ds.engine();\r\n                    } catch (err) {\r\n                        j2Ds.errorManager.showError(err);\r\n                    }\r\n\r\n                    j2Ds.events.onEvent('engine:after');\r\n\r\n                    j2Ds.lastTime = j2Ds.now;\r\n\r\n                    requestAnimationFrame(function () {\r\n                        j2Ds.gameEngine(j2Ds);\r\n                    });\r\n                }\r\n            }, (j2Ds.frameLimit < 60 ? j2Ds.sceneSkipTime : 0));\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return window.requestAnimationFrame ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame ||\r\n                function (callback) {\r\n                    window.setTimeout(callback, 1000 / frameLimit);\r\n                };\r\n        })();\r\n\r\n        j2DsEngine.prototype.stopEngine = function () {\r\n            if (!this.canDeactivate) return;\r\n            this.stopAll = true;\r\n        };\r\n\r\n        j2DsEngine.prototype.runEngine = function (j2Ds) {\r\n            j2Ds = j2Ds || this;\r\n            if (!j2Ds.canDeactivate) return;\r\n            if (!j2Ds.stopAll) return;\r\n            j2Ds.stopAll = false;\r\n            requestAnimationFrame(function () {\r\n                j2Ds.gameEngine(j2Ds);\r\n            });\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.modules.core.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.j2Ds = new j2DsEngine();\r\n        return j2DsEngine;\r\n    }\r\n));\r\n"],"sourceRoot":"/source/"}