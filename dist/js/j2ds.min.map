{"version":3,"sources":["j2ds.js","MathUtil.js","TextureUtil.js","Dom.js","Gui.js","Events.js","BaseNode.js","CircleNode.js","LineNode.js","RectNode.js","SpriteNode.js","TextNode.js","DeviceManager.js","ErrorManager.js","FpsManager.js","ResourceManager.js","StorageManager.js","TimeManager.js","TriggerManager.js","ViewManager.js","AudioHandler.js","InputHandler.js","TouchHandler.js","Layers.js","Scene.js","j2Ds.js"],"names":["root","factory","define","amd","module","exports","window","global","MathUtil","v2f","x","y","v2i","toInt","number","rndColor","min","max","opacity","random","omitZero","Math","floor","rad","num","PI","undefined","j2Ds","modules","utils","TextureUtil","this","prototype","createImageMap","width","height","callback","textureUtil","resources","add","image","img","loaded","document","createElement","context","getContext","getAnimation","sourceX","sourceY","sourceW","sourceH","frameCount","imageMap","ok","loadImageMap","path","crossOrigin","src","addEventListener","templates","ellipse","size","color","fillRect","fillStyle","strokeRect","lineWidth","strokeStyle","gradientL","colors","isHorizontal","gradient","createLinearGradient","step","length","i","j","addColorStop","gradientR","pos1","r1","pos2","r2","createRadialGradient","Dom","id","_id","getElementById","name","getElementsByName","tag","_parent","finder","getElementsByTagName","goURL","_url","location","href","reloadURL","attach","dom","events","addEvent","appendChild","injectJavaScript","_code","code","toString","replace","callJava","send","_path","_func","ajax","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","core","Gui","nodes","Events","scene:deactivate","scene:activate","scene:beforeInit","scene:afterInit","scene:beforeStart","scene:afterStart","engine:before","engine:after","scene:changedGameState","writeMode:keyPress","dom:loaded","eventType","push","now","ready","onEvent","destroyEvent","len","splice","args","err","errorManager","showError","require","BaseNode","_j2Ds","pos","visible","alpha","parent","angle","layer","scene","box","offset","resizeBox","setLayer","layers","getLayer","setVisible","isVisible","setAlpha","getAlpha","moveTo","to","t","move","getPosition","setPosition","ceil","setSize","getSize","setParent","getDistance","sqrt","pow","getDistanceXY","abs","isIntersect","x1","x2","y1","y2","isCollision","result","isLookScene","view","turn","setRotation","getRotation","rotateTo","_to","_t","atan2","isOutScene","vector","all","moveDir","speed","cos","sin","drawBox","beginPath","rect","stroke","CircleNode","radius","call","Object","create","constructor","draw","tmpAlpha","globalAlpha","arc","fill","LineNode","points","scale","cFill","lineTo","RectNode","save","translate","rotate","restore","SpriteNode","animation","tmpSpeed","frame","flip","setFlip","drawFrame","show","drawImage","setAnimation","TextNode","text","sizePx","family","colorL","vAlign","hAlign","font","fullText","maxWidth","lines","split","measureText","drawSimpleText","textAlign","textBaseline","strokeText","fillText","getText","setText","DeviceManager","parseInt","documentElement","clientWidth","screen","clientHeight","managers","ErrorManager","mode","enabled","init","_true","runBtn","innerHTML","style","padding","align","position","zIndex","left","top","getDeviceManager","fontSize","backgroundColor","cursor","onmousedown","e","stopPropagation","onclick","runEngine","logListener","elems","pauseBtn","stopEngine","reloadBtn","onerror","string","console","log","setMode","debug","stack","match","file","line","decodeURI","errMess","message","domId","count","execLine","lightSyntax","_type","FpsManager","fps","frameLimit","tmp_of_fps","tmp_of_time","Date","fpsManager","update","getFPS","ResourceManager","added","failed","fail","isLoaded","getProgress","StorageManager","ls","localStorage","alert","saveNode","o","setItem","JSON","stringify","load","getItem","is","value","loadNode","parse","TimeManager","times","insert","get","TriggerManager","triggers","triggerManager","trigger","command","state","last","run","mSec","job","loop","reset","ViewManager","views","viewManager","viewport","focusNode","AudioHandler","audios","audioHandler","deactivate","activate","files","vol","audio","source","volume","sound","domEl","lock","onePlay","explicitOriginalTarget","currentSrc","setLock","play","unlock","currentTime","pause","stop","setVolume","getVolume","getState","getPlayPosition","snd","io","InputHandler","screenPos","keyDown","keyPress","keyPressed","keyUp","keyUped","mouseDown","mousePress","mousePressed","mouseUp","mouseUpped","mouseWheel","canceled","body","anyKey","anyMouse","writeMode","displayCursor","mKey","LEFT","MIDDLE","RIGHT","jKey","UP","DOWN","SPACE","CTRL","SHIFT","ALT","ESC","ENTER","MINUS","PLUS","CAPS_LOCK","BACKSPACE","TAB","Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","V","B","N","M","0","1","2","3","4","5","6","7","8","C","9","NUM_0","NUM_1","NUM_2","NUM_3","NUM_4","NUM_5","NUM_6","NUM_7","NUM_8","NUM_9","NUM_MINUS","NUM_PLUS","NUM_LOCK","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","keyList","isKeyDown","isKeyPress","isKeyUp","getScreenPosition","setWriteMode","isWriteMode","keyEvent","type","keyCode","preventDefault","char","which","charCode","String","fromCharCode","cancel","onNode","upd","dX","offsetWidth","dY","offsetHeight","onMove","offsetLeft","pageX","offsetTop","pageY","isMouseDown","isMousePress","isMouseUp","isMouseWheel","onMouseWheel","wheelDelta","detail","onMouseEvent","button","mouseUped","focus","setCursorImage","curImg","input","oncontextmenu","onselectstart","ondragstart","onmouseup","onmousemove","onkeydown","onkeyup","onkeypress","onmousewheel","TouchHandler","touchs","tapDown","tapPress","tapUp","isTapDown","isTapPress","isTapUp","getTouch","onTouchEvent","touchHandler","Layers","layersList","index","notDOM","layerName","canvas","stylePosition","shadowColor","onContext","display","setIndex","clear","clearRect","clearNode","node","setContextSettings","settings","Scene","gameStateName","canFullScreen","texture","setView","getView","setAutoDraw","toggle","drawAllNodes","setAutoClear","setGameState","gameStates","states","start","setActiveEngine","getGameState","fullScreen","tmpCanvas","tmpContext","origWidth","origHeight","list","fullScale","_w","_h","_canDeactivate","canDeactivate","cancelClear","onload","onblur","stopAll","onfocus","initCanvas","addBaseNode","addCircleNode","addLineNode","addRectNode","addSpriteNode","addTextNode","DOM","GUI","FPSManager","j2DsEngine","math","dt","sceneStartTime","sceneSkipTime","engine","getInfo","version","git","site","description","author","getFPSManager","getSceneManager","getLayerManager","getTextureManager","getAudioManager","getPaintManager","paint","getIO","getTouchIO","touch","getDOMManager","getTriggerManager","getMathManager","getGameStateManager","getViewManager","deviceManager","getErrorManager","getTimeManager","timeManager","getResourceManager","setWindow","_window","setFrameLimit","gui","createLocal","_state","end","lastTime","gameEngine","setTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame"],"mappings":"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","file":"j2ds.js","sourcesContent":[null,"/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    MathUtil.v2f = function (x, y) {\r\n        return {x: x, y: y};\r\n    };\r\n\r\n    MathUtil.v2i = function (x, y) {\r\n        return {x: (x >> 0), y: (y >> 0)};\r\n    };\r\n\r\n    MathUtil.toInt = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    MathUtil.rndColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    MathUtil.rad = function (num) {\r\n        return num * (Math.PI / 180);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.MathUtil = MathUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.MathUtil = MathUtil;\r\n    return MathUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/TextureUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TextureUtil = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    TextureUtil.prototype.createImageMap = function (width, height, callback) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            loaded: false,\r\n            width: width,\r\n            height: height\r\n        };\r\n\r\n        image.img = document.createElement('canvas');\r\n        image.context = image.img.getContext('2d');\r\n        image.img.width = image.width;\r\n        image.img.height = image.height;\r\n\r\n        callback(image.context);\r\n        image.loaded = true;\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        textureUtil.j2Ds.resources.ok('createImageMap_' + width + 'x' + height);\r\n\r\n        return image;\r\n    };\r\n\r\n    TextureUtil.prototype.loadImageMap = function (path) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            img: null,\r\n            width: 0,\r\n            height: 0,\r\n            loaded: false\r\n        };\r\n\r\n        image.img = document.createElement('img');\r\n        image.crossOrigin = 'anonymous';\r\n        image.img.src = path;\r\n\r\n        image.img.addEventListener('load', function () {\r\n            image.width = image.img.width;\r\n            image.height = image.img.height;\r\n            image.loaded = true;\r\n            textureUtil.j2Ds.resources.ok(path);\r\n        });\r\n\r\n        image.img.addEventListener('error', function () {\r\n            image.width = 0;\r\n            image.height = 0;\r\n            image.loaded = false;\r\n            //textureUtil.j2Ds.resources.fail(path);\r\n        });\r\n        /* Свойства */\r\n\r\n        /* Функции */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return image;\r\n    };\r\n\r\n    /* -------------------- */\r\n\r\n    TextureUtil.prototype.templates = {\r\n        ellipse: function (context, size, color) { // TODO??\r\n        },\r\n        fillRect: function (context, size, color) {\r\n            context.fillStyle = color;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        strokeRect: function (context, size, color, lineWidth) {\r\n            context.strokeStyle = color;\r\n            context.lineWidth = lineWidth;\r\n            context.strokeRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientL: function (context, size, colors, isHorizontal) {\r\n            var gradient = context.createLinearGradient(0, 0, size.x, 0);\r\n            var step = 1 / colors.length;\r\n            if (!isHorizontal) {\r\n                gradient = context.createLinearGradient(0, 0, 0, size.y);\r\n            }\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n        gradientR: function (context, size, pos1, r1, pos2, r2, colors) {\r\n            var gradient = context.createRadialGradient(pos1.x, pos1.y, r1, pos2.x, pos2.y, r2);\r\n            var step = 1 / colors.length;\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextureUtil = TextureUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.TextureUtil = TextureUtil;\r\n    return TextureUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Dom', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- DOM ---------------*/\r\n    var Dom = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    Dom.prototype.id = function (_id) {\r\n        return document.getElementById(_id);\r\n    };\r\n\r\n    Dom.prototype.name = function (_id) {\r\n        return document.getElementsByName(_id)[0];\r\n    };\r\n\r\n    Dom.prototype.tag = function (_id, _parent) {\r\n        var finder = _parent || document;\r\n        return finder.getElementsByTagName(_id);\r\n    };\r\n\r\n    Dom.prototype.goURL = function (_url) {\r\n        document.location.href = _url;\r\n    };\r\n\r\n    Dom.prototype.reloadURL = function () {\r\n        document.location.href = document.location.href;\r\n    };\r\n\r\n    Dom.prototype.attach = function (_id, _parent) {\r\n        var dom = this;\r\n        this.j2Ds.events.addEvent('dom:loaded', function (_parent) {\r\n            if (!_parent) {\r\n                dom.tag('body')[0].appendChild(_id);\r\n            } else {\r\n                dom.id(_parent).appendChild(_id);\r\n            }\r\n        });\r\n    };\r\n\r\n    Dom.prototype.injectJavaScript = function (_code) {\r\n        var code = _code.toString();\r\n        code = code.replace(/[\\n\\r\\t]/g, ';');\r\n        document.location.href = 'javascript: var injectFunction = (function() {setTimeout(' + code + ', 0);}); injectFunction();';\r\n    };\r\n\r\n    Dom.prototype.callJava = function (_code) {\r\n        document.location.href = 'javacall:' + _code;\r\n    };\r\n\r\n    Dom.prototype.send = function (_path, _func) {\r\n        var ajax = new XMLHttpRequest();\r\n        ajax.open('GET', _path, true);\r\n        ajax.onreadystatechange = function () {\r\n            if (ajax.readyState == 4) {\r\n                if (ajax.status == 200) {\r\n                    _func(ajax.responseText);\r\n                }\r\n            }\r\n        };\r\n        ajax.send(null);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Dom = Dom;\r\n    if (global.j2Ds !== undefined) global.modules.core.Dom = Dom;\r\n    return Dom;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Gui', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- GUI ---------------*/\r\n    var Gui = function () {\r\n        this.nodes = {};\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Gui = Gui;\r\n    if (global.j2Ds !== undefined) global.modules.core.Gui = Gui;\r\n    return Gui;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Events', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Events = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.events = {\r\n            'scene:deactivate': [],\r\n            'scene:activate': [],\r\n\r\n            'scene:beforeInit': [],\r\n            'scene:afterInit': [],\r\n            'scene:beforeStart': [],\r\n            'scene:afterStart': [],\r\n\r\n            'engine:before': [],\r\n            'engine:after': [],\r\n\r\n            'scene:changedGameState': [],\r\n\r\n            'writeMode:keyPress': [],\r\n\r\n            'dom:loaded': []\r\n        };\r\n    };\r\n\r\n\r\n    Events.prototype.addEvent = function (eventType, callback, id) {\r\n        this.events[eventType].push({\r\n            id: id || this.j2Ds.now,\r\n            callback: callback\r\n        });\r\n        if (this.j2Ds.ready && eventType == 'dom:loaded') {\r\n            this.onEvent('dom:loaded');\r\n            return true;\r\n        }\r\n    };\r\n\r\n    Events.prototype.destroyEvent = function (eventType, id) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType][i]['id'] == id) {\r\n                events.events[eventType].splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    Events.prototype.onEvent = function (eventType, args) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType]) {\r\n                try {\r\n                    events.events[eventType][i]['callback'](args || '');\r\n                } catch (err) {\r\n                    events.j2Ds.errorManager.showError(err);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Events = Events;\r\n    if (global.j2Ds !== undefined) global.modules.core.Events = Events;\r\n    return Events;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var BaseNode = function (_j2Ds, pos, size) {\r\n        j2Ds = _j2Ds;\r\n        this.visible = true;\r\n        this.alpha = 1;\r\n        this.pos = pos;\r\n        this.size = size;\r\n        this.parent = false;\r\n        this.angle = 0;\r\n        this.layer = j2Ds.scene;\r\n        this.box = {\r\n            offset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            size: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        j2Ds.scene.nodes.push(this);\r\n    };\r\n\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.box.offset = offset;\r\n        this.box.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? j2Ds.layers.layer(layer) : j2Ds.scene;\r\n    };\r\n\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.visible = !!visible;\r\n    };\r\n\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.alpha = alpha;\r\n    };\r\n\r\n    BaseNode.prototype.getAlpha = function () {\r\n        return this.alpha;\r\n    };\r\n\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(MathUtil.v2f(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    BaseNode.prototype.setPosition = function (pos) {\r\n        if (pos) {\r\n            this.pos = MathUtil.v2f(pos.x - Math.ceil(this.size.x / 2), pos.y - Math.ceil(this.size.y / 2));\r\n        } else {\r\n            return this.pos;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.move = function (pos) {\r\n        this.pos.x += pos.x;\r\n        this.pos.y += pos.y;\r\n    };\r\n\r\n    BaseNode.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x + Math.ceil(this.size.x / 2), this.pos.y + Math.ceil(this.size.y / 2));\r\n    };\r\n\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size) {\r\n            this.size = size;\r\n        } else {\r\n            return this.size;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.size;\r\n    };\r\n\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return MathUtil.v2f(Math.abs(id.getPosition().x - this.getPosition().x), Math.abs(id.getPosition().y - this.getPosition().y));\r\n    };\r\n\r\n    BaseNode.prototype.isIntersect = function (id) {\r\n        var pos = {\r\n            x1: this.pos.x + this.box.offset.x,\r\n            x2: id.pos.x + id.box.offset.x,\r\n            y1: this.pos.y + this.box.offset.y,\r\n            y2: id.pos.y + id.box.offset.y\r\n        };\r\n\r\n        var size = {\r\n            x1: this.size.x + this.box.size.x,\r\n            x2: id.size.x + id.box.size.x,\r\n            y1: this.size.y + this.box.size.y,\r\n            y2: id.size.y + id.box.size.y\r\n        };\r\n\r\n        return (\r\n                (pos.y1 + size.y1 >= pos.y2) &&\r\n                (pos.x1 + size.x1 >= pos.x2)\r\n            ) && (\r\n                (pos.x1 < pos.x2 + size.x2) &&\r\n                (pos.y1 < pos.y2 + size.y2)\r\n            );\r\n    };\r\n\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.size.x / 2 + id.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.size.y / 2 + id.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    BaseNode.prototype.isLookScene = function () {\r\n        return !((this.pos.x > j2Ds.scene.view.pos.x + j2Ds.scene.width || this.pos.x + this.size.x < j2Ds.scene.view.pos.x)\r\n        || (this.pos.y > j2Ds.scene.view.pos.y + j2Ds.scene.height || this.pos.y + this.size.y < j2Ds.scene.view.pos.y));\r\n    };\r\n\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.angle = (this.angle % 360);\r\n        this.angle += angle;\r\n    };\r\n\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.angle = angle % 360;\r\n    };\r\n\r\n    BaseNode.prototype.getRotation = function () {\r\n        return this.angle;\r\n    };\r\n\r\n    BaseNode.prototype.rotateTo = function (_to, _t) {\r\n        _t = _t ? _t : 1;\r\n        this.setRotation((Math.atan2(\r\n                (_to.y - this.getPosition().y),\r\n                (_to.x - this.getPosition().x)\r\n            ) * (180 / Math.PI)) / _t);\r\n    };\r\n\r\n    BaseNode.prototype.isOutScene = function () {\r\n        var vector = {};\r\n\r\n        if (this.pos.x + this.size.x >= j2Ds.scene.view.pos.x + j2Ds.scene.width) {\r\n            vector.x = 1;\r\n        } else if (this.pos.x <= j2Ds.scene.view.pos.x) {\r\n            vector.x = -1;\r\n        } else {\r\n            vector.x = 0;\r\n        }\r\n\r\n        if (this.pos.y + this.size.y >= j2Ds.scene.view.pos.y + j2Ds.scene.height) {\r\n            vector.y = 1;\r\n        } else if (this.pos.y <= j2Ds.scene.view.pos.y) {\r\n            vector.y = -1;\r\n        } else {\r\n            vector.y = 0;\r\n        }\r\n\r\n        vector.all = (vector.x || vector.y);\r\n\r\n        return vector;\r\n    };\r\n\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.pos.x += speed * (Math.cos(MathUtil.rad(this.angle)));\r\n        this.pos.y += speed * (Math.sin(MathUtil.rad(this.angle)));\r\n    };\r\n\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.size.x, this.size.y);\r\n        context.stroke();\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(this.box.offset.x + this.pos.x - j2Ds.scene.view.pos.x, this.box.offset.y + this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.box.size.x + this.size.x, this.box.size.y + this.size.y);\r\n        context.stroke();\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.BaseNode = BaseNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CircleNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var CircleNode = function (_j2Ds, pos, radius, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(radius * 2, radius * 2));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.radius = radius;\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.color;\r\n\r\n            context.beginPath();\r\n            context.arc(this.pos.x - j2Ds.scene.view.pos.x + this.radius,\r\n                this.pos.y - j2Ds.scene.view.pos.y + this.radius,\r\n                this.radius, 0, 2 * Math.PI, true);\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.CircleNode = CircleNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.CircleNode = CircleNode;\r\n    return CircleNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/LineNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var LineNode = function (_j2Ds, pos, points, scale, color, width, fill, cFill) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.points = points;\r\n        this.fill = fill || false;\r\n        this.scale = scale || 0;\r\n        this.cFill = cFill;\r\n        this.lineWidth = width;\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.strokeStyle = this.color;\r\n            context.lineWidth = this.lineWidth;\r\n\r\n            context.beginPath();\r\n            context.moveTo(this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y);\r\n\r\n            for (var i = 0, len = this.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.pos.x + this.points[i][0] * this.scale - j2Ds.scene.view.pos.x,\r\n                    this.pos.y + this.points[i][1] * this.scale - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.fill) {\r\n                context.fillStyle = this.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.LineNode = LineNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.LineNode = LineNode;\r\n    return LineNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/RectNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @param _j2Ds\r\n     * @param pos\r\n     * @param size\r\n     * @param color\r\n     * @constructor\r\n     */\r\n    var RectNode = function (_j2Ds, pos, size, color) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.color = color;\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    RectNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.RectNode = RectNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.RectNode = RectNode;\r\n    return RectNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/SpriteNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var SpriteNode = function (_j2Ds, pos, size, animation) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, size);\r\n\r\n        this.tmpSpeed = 0;\r\n        this.frame = 0;\r\n        this.animation = animation;\r\n        this.flip = {x: false, y: false};\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.flip = {x: x, y: y};\r\n    };\r\n\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.frame > this.animation.frameCount) {\r\n                this.frame = 0;\r\n            }\r\n            this.drawFrame(this.frame + 1);\r\n\r\n            if (this.tmpSpeed > speed) {\r\n                this.frame += 1;\r\n                this.tmpSpeed = 0;\r\n            }\r\n            else {\r\n                this.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    // отрисовка одного кадра\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        if (!this.animation.imageMap.loaded) return (err.show('Invalid ImageMap', 'red'));\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.scale(this.flip.x ? -1 : 1, this.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.animation.imageMap.img,\r\n                (this.animation.sourceX + (this.animation.sourceW * frame)), this.animation.sourceY,\r\n                this.animation.sourceW, this.animation.sourceH,\r\n                this.pos.x - j2Ds.scene.view.pos.x, this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    SpriteNode.prototype.setAnimation = function (id) {\r\n        if (this.animation != id) {\r\n            this.animation = id;\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.SpriteNode = SpriteNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.SpriteNode = SpriteNode;\r\n    return SpriteNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/TextNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    var TextNode = function (_j2Ds, pos, text, sizePx, color, family, width, colorL) {\r\n        j2Ds = _j2Ds;\r\n        BaseNode.call(this, _j2Ds, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n\r\n        this.vAlign = 'top';\r\n        this.hAlign = 'left';\r\n        this.color = color ? color : 'black';\r\n\r\n        this.family = family ? family : 'serif';\r\n        this.sizePx = sizePx ? sizePx : 20;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        this.lineWidth = width ? width : 0;\r\n        this.colorL = colorL ? colorL : 'black';\r\n\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype = Object.create(BaseNode.prototype);\r\n    TextNode.prototype.constructor = TextNode;\r\n\r\n    TextNode.prototype.setSize = function (sizePx) {\r\n        this.sizePx = sizePx;\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.getSize = function () {\r\n        return this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.drawSimpleText = function (text, pos, color, colorL) {\r\n        var context = this.layer.context;\r\n        context.fillStyle = color ? color : this.color;\r\n        context.textAlign = this.hAlign;\r\n        context.textBaseline = this.vAlign;\r\n        context.font = this.font;\r\n        context.lineWidth = this.lineWidth;\r\n        context.strokeStyle = colorL ? colorL : this.colorL;\r\n\r\n        var lines = text.split(\"\\n\");\r\n\r\n        pos = pos ? pos : this.pos;\r\n\r\n        if (this.alpha != 1) {\r\n            var tmpAlpha = context.globalAlpha;\r\n            context.globalAlpha = this.alpha;\r\n        }\r\n\r\n        for (var i = 0, len = lines.length; i < len; i += 1) {\r\n            if (this.lineWidth) {\r\n                context.strokeText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n            }\r\n            context.fillText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n        }\r\n\r\n        if (this.alpha != 1) {\r\n            context.globalAlpha = tmpAlpha;\r\n        }\r\n\r\n        context.lineWidth = 0;\r\n        context.strokeStyle = 'black';\r\n    };\r\n\r\n    TextNode.prototype.getText = function () {\r\n        return this.fullText;\r\n    };\r\n\r\n    TextNode.prototype.setText = function (text) {\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.textAlign = this.hAlign;\r\n            context.textBaseline = this.vAlign;\r\n            context.font = this.font;\r\n            context.lineWidth = this.lineWidth;\r\n            context.strokeStyle = this.colorL;\r\n\r\n            for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n                if (this.lineWidth) {\r\n                    context.strokeText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n                }\r\n                context.fillText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.strokeStyle = 'black';\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextNode = TextNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.TextNode = TextNode;\r\n    return TextNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/DeviceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var DeviceManager = function () {\r\n        return {\r\n            width: (parseInt(document.documentElement.clientWidth) < parseInt(screen.width))\r\n                ? parseInt(document.documentElement.clientWidth)\r\n                : parseInt(screen.width),\r\n            height: (parseInt(document.documentElement.clientHeight) < parseInt(screen.height))\r\n                ? parseInt(document.documentElement.clientHeight)\r\n                : parseInt(screen.height)\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.DeviceManager = DeviceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.DeviceManager = DeviceManager;\r\n    return DeviceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ErrorManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ErrorManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.mode = 'neverShow'; // values: onlyShow|stopAndShow|neverShow\r\n        this.enabled = false;\r\n    };\r\n\r\n    ErrorManager.prototype.init = function (_true) {\r\n        var errorManager = this;\r\n        errorManager.enabled = true;\r\n\r\n        var runBtn = document.createElement('div');\r\n        runBtn.innerHTML = '<b>RUN</b>';\r\n        runBtn.style.padding = '5px';\r\n        runBtn.align = 'center';\r\n        runBtn.style.position = 'fixed';\r\n        runBtn.style.zIndex = 20000;\r\n        runBtn.style.left = '0px';\r\n        runBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        runBtn.style.fontSize = '8pt';\r\n        runBtn.style.backgroundColor = '#B8FFB8';\r\n        runBtn.style.height = '12px';\r\n        runBtn.style.width = '50px';\r\n        runBtn.style.cursor = 'pointer';\r\n\r\n        runBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        runBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение продолжено');\r\n            errorManager.j2Ds.runEngine(errorManager.j2Ds);\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(runBtn);\r\n        errorManager.logListener.elems.push(runBtn);\r\n\r\n\r\n        var pauseBtn = document.createElement('div');\r\n        pauseBtn.innerHTML = '<b>PAUSE</b>';\r\n        pauseBtn.style.padding = '5px';\r\n        pauseBtn.align = 'center';\r\n        pauseBtn.style.position = 'fixed';\r\n        pauseBtn.style.zIndex = 20000;\r\n        pauseBtn.style.left = '60px';\r\n        pauseBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        pauseBtn.style.fontSize = '8pt';\r\n        pauseBtn.style.backgroundColor = '#FFFFBD';\r\n        pauseBtn.style.height = '12px';\r\n        pauseBtn.style.width = '50px';\r\n        pauseBtn.style.cursor = 'pointer';\r\n\r\n        pauseBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        pauseBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение приостановлено');\r\n            errorManager.j2Ds.stopEngine();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(pauseBtn);\r\n        errorManager.logListener.elems.push(pauseBtn);\r\n\r\n        var reloadBtn = document.createElement('div');\r\n        reloadBtn.innerHTML = '<b>RELOAD</b>';\r\n        reloadBtn.style.padding = '5px';\r\n        reloadBtn.align = 'center';\r\n        reloadBtn.style.position = 'fixed';\r\n        reloadBtn.style.zIndex = 20000;\r\n        reloadBtn.style.left = '120px';\r\n        reloadBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        reloadBtn.style.fontSize = '8pt';\r\n        reloadBtn.style.backgroundColor = '#E2E2E2';\r\n        reloadBtn.style.color = 'black';\r\n        reloadBtn.style.height = '12px';\r\n        reloadBtn.style.width = '50px';\r\n        reloadBtn.style.cursor = 'pointer';\r\n\r\n        reloadBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        reloadBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.j2Ds.dom.reloadURL();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(reloadBtn);\r\n        errorManager.logListener.elems.push(reloadBtn);\r\n\r\n        errorManager.j2Ds.events.addEvent('dom:loaded', function () {\r\n            errorManager.j2Ds.window.onerror = function (e) {\r\n                errorManager.show(e);\r\n            };\r\n        });\r\n    };\r\n\r\n    ErrorManager.prototype.show = function (string) {\r\n        console.log('[j2Ds]: ' + string);\r\n    };\r\n\r\n    ErrorManager.prototype.setMode = function (mode) {\r\n        this.mode = mode;\r\n        if (mode == 'neverShow') {\r\n            this.enabled = false;\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.debug = function (string) {\r\n        if (!this.enabled) return;\r\n        this.j2Ds.stopEngine();\r\n        if (this.mode != 'neverShow') {\r\n            this.show(string || 'Точка останова достигнута');\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.showError = function (err, _func) {\r\n        if (this.mode == 'neverShow') return;\r\n\r\n        var stack = err.stack.toString();\r\n        stack = stack.split(/\\n/);\r\n\r\n        for (var i = 0, len = stack.length; i < len; i += 1) {\r\n            if (stack[i].match(/\\:\\d/)) {\r\n                stack = stack[i].split(/\\s/);\r\n                break;\r\n            }\r\n        }\r\n\r\n        stack = stack[stack.length - 1];\r\n        stack = stack.replace(/([\\(\\)]|[\\w]+:\\/\\/)/g, '');\r\n        var file = stack.split(':'),\r\n            line = file[1],\r\n            number = file[2];\r\n        file = decodeURI(file[0]);\r\n\r\n        if (file.match(/(<anonymous>|\\bj2Ds.js)/)) {\r\n            file = '<Функция-аргумент или строка>';\r\n        }\r\n\r\n        var errMess = 'Тип ошибки: \"' + err.name + '\"' +\r\n            '\\nСообщение: \"' + err.message + '\"' +\r\n            '\\nФайл с ошибкой: \"' + file + '\"' +\r\n            '\\nСтрока: ' + line +\r\n            ', символ: ' + number;\r\n\r\n        if (_func) {\r\n            errMess += '\\nОшибка в теле функции: \\n' + _func.toString();\r\n        }\r\n\r\n        this.show(errMess);\r\n\r\n        if (this.mode == 'stopAndShow') {\r\n            this.j2Ds.stopEngine();\r\n            this.show('Выполнение приостановлено');\r\n        }\r\n\r\n    };\r\n\r\n    ErrorManager.prototype.logListener = {\r\n        domId: '',\r\n        count: 0,\r\n        execLine: '',\r\n        elems: []\r\n    };\r\n\r\n    ErrorManager.prototype.lightSyntax = function (_code, _type) {\r\n        var code = ('' + _code).toString();\r\n\r\n        if (_type == 'boolean') {\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        } else if (_type == 'code') {\r\n            code = code.replace(/(this|var|typeof|new|return|if|else|for|in|while|break|do|continue|switch|case)([^a-z0-9\\$_])/gi,\r\n                '<span style=\"color: #FFC0CB;\"><b>$1</b></span>$2')\r\n                .replace(/(function|object)/gi,\r\n                    '<span style=\"color: #FFA500;\">$1</span>')\r\n                .replace(/(width|height|window|document|scene|j2Ds|value)/gi,\r\n                    '<span style=\"color: #59B5C0;\">$1</span>')\r\n                .replace(/([a-z\\_\\$][a-z0-9_]*)\\(/gi, '<span style=\"color: #FFCD70;\">$1</span>(')\r\n                .replace(/(\\{|\\}|\\]|\\[|\\|)/gi, '<span style=\"color: #FFFF00;\">$1</span>')\r\n                .replace(/('.*?')/g, '<span style=\"color: #8FFF8F;\">$1</span>')\r\n                .replace(/(#[a-z0-9]{3,8};)/, '<b style=\"color: red;\">$1</b>')\r\n                .replace(/(\\t)/g, '&nbsp;&nbsp;');\r\n\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        }\r\n\r\n        return code;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ErrorManager = ErrorManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ErrorManager = ErrorManager;\r\n    return ErrorManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/FpsManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var FpsManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.fps = this.j2Ds.frameLimit;\r\n        this.tmp_of_fps = 1;\r\n        this.tmp_of_time = Date.now();\r\n    };\r\n\r\n    FpsManager.prototype.init = function () {\r\n        var fpsManager = this;\r\n        fpsManager.enabled = true;\r\n\r\n        this.j2Ds.events.addEvent('engine:after', function () {\r\n            fpsManager.update();\r\n        });\r\n\r\n    };\r\n\r\n    FpsManager.prototype.update = function () {\r\n        if (!this.enabled) return;\r\n        this.tmp_of_fps += 1;\r\n        if (this.j2Ds.now - this.tmp_of_time >= 1000) {\r\n            this.fps = this.tmp_of_fps;\r\n            this.tmp_of_fps = 1;\r\n            this.tmp_of_time = this.j2Ds.now;\r\n        }\r\n    };\r\n\r\n    FpsManager.prototype.getFPS = function () {\r\n        return this.fps <= this.j2Ds.frameLimit ? this.fps : this.j2Ds.frameLimit;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.FpsManager = FpsManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.FpsManager = FpsManager;\r\n    return FpsManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ResourceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ResourceManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.added = 0;\r\n        this.loaded = 0;\r\n        this.failed = 0;\r\n\r\n        this.add = function () {\r\n            this.added += 1;\r\n        };\r\n\r\n        this.ok = function (file) {\r\n            this.loaded += 1;\r\n            this.j2Ds.errorManager.show('loaded: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.fail = function (file) {\r\n            this.failed += 1;\r\n            this.j2Ds.errorManager.show('error load: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.show = function () {\r\n            return {'added': this.added, 'loaded': this.loaded, 'failed': this.failed};\r\n        };\r\n\r\n        this.isLoaded = function () {\r\n            return this.added == this.loaded;\r\n        };\r\n\r\n        this.getProgress = function () {\r\n            return Math.ceil(this.loaded / this.added * 100);\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ResourceManager = ResourceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ResourceManager = ResourceManager;\r\n    return ResourceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/StorageManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var StorageManager = function (j2Ds, id) {\r\n        this.j2Ds = j2Ds;\r\n        this.id = id;\r\n        this.ls = this.j2Ds.window.localStorage ? this.j2Ds.window.localStorage : false;\r\n        if (!this.ls) alert('j2Ds ERROR in \"createLocal(' + id + ')\" \\n' + 'Объект \"localStorage\" не поддерживается.');\r\n    };\r\n\r\n    StorageManager.prototype.saveNode = function (name, o) {\r\n        if (!this.ls) return false;\r\n        this.ls.setItem(this.id + name, JSON.stringify(o));\r\n    };\r\n\r\n    StorageManager.prototype.load = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return this.ls.getItem(this.id + name);\r\n    };\r\n\r\n    StorageManager.prototype.is = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return !!(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    StorageManager.prototype.save = function (name, value) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        this.ls.setItem(this.id + name, value);\r\n    };\r\n\r\n    StorageManager.prototype.loadNode = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return JSON.parse(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.StorageManager = StorageManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.StorageManager = StorageManager;\r\n    return StorageManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TimeManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TimeManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.times = {};\r\n\r\n        this.insert = function (id) {\r\n            if (!this.times[id]) {\r\n                this.times[id] = this.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        this.get = function (id) {\r\n            return this.times[id];\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TimeManager = TimeManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TimeManager = TimeManager;\r\n    return TimeManager;\r\n}));\r\n\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TriggerManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TriggerManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.enabled = false;\r\n        this.triggers = {};\r\n    };\r\n\r\n    TriggerManager.prototype.add = function (id, callback) {\r\n        var triggerManager = this;\r\n        var trigger = {\r\n            command: callback,\r\n            count: 0,\r\n            state: 'stop',\r\n            last: false\r\n        };\r\n\r\n        trigger.run = function (mSec) {\r\n            if (this.state == 'job') {\r\n                this.command();\r\n                return;\r\n            }\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'job';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.job = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec && this.state != 'run') {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.loop = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.reset = function () {\r\n            this.count = 0;\r\n            this.state = 'stop';\r\n            this.last = false;\r\n        };\r\n\r\n        this.triggers[id] = trigger;\r\n        return trigger;\r\n    };\r\n\r\n    TriggerManager.prototype.get = function (id) {\r\n        return this.triggers[id];\r\n    };\r\n\r\n    TriggerManager.prototype.init = function () {\r\n        this.enabled = true;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TriggerManager = TriggerManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TriggerManager = TriggerManager;\r\n    return TriggerManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ViewManager', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var ViewManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.views = {};\r\n    };\r\n\r\n    ViewManager.prototype.add = function (id, pos) {\r\n        var viewManager = this;\r\n        var viewport = {\r\n            focusNode: false\r\n        };\r\n\r\n        viewport.pos = pos ? MathUtil.v2f(pos.x, pos.y) : MathUtil.v2f(0, 0);\r\n\r\n        viewport.setPosition = function (pos) {\r\n            if (!pos) return this;\r\n            this.pos = MathUtil.v2f(pos.x - viewManager.j2Ds.scene.width / 2, pos.y - viewManager.j2Ds.scene.height / 2);\r\n        };\r\n\r\n        viewport.getPosition = function () {\r\n            return this.pos;\r\n        };\r\n\r\n        viewport.move = function (pos) {\r\n            this.pos.x += pos.x;\r\n            this.pos.y += pos.y;\r\n        };\r\n\r\n        viewManager.j2Ds.viewManager.views[id] = viewport;\r\n        return viewport;\r\n    };\r\n\r\n    ViewManager.prototype.get = function (id) {\r\n        return this.j2Ds.viewManager.views[id];\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ViewManager = ViewManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ViewManager = ViewManager;\r\n    return ViewManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/AudioHandler', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var AudioHandler = function () {\r\n        this.audios = {};\r\n        this.enabled = false\r\n    };\r\n\r\n    AudioHandler.prototype.init = function () {\r\n        var audioHandler = this;\r\n        this.enabled = true;\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:deactivate', function () {\r\n            audioHandler.deactivate();\r\n        });\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:activate', function () {\r\n            audioHandler.activate();\r\n        });\r\n\r\n    };\r\n\r\n    AudioHandler.prototype.load = function (id, files, vol) {\r\n        var audioHandler = this;\r\n        audioHandler.j2Ds.resources.add();\r\n        var audio = document.createElement('audio');\r\n\r\n        for (var i = 0, len = files.length; i < len; i += 1) {\r\n            var source = document.createElement('source');\r\n            source.src = files[i];\r\n            audio.appendChild(source);\r\n        }\r\n\r\n        audio.id = 'audio_' + id;\r\n\r\n        if (vol) {\r\n            audio.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n        }\r\n\r\n        var sound = {\r\n            id: id,\r\n            files: files,\r\n            domEl: audio, // DOMElement\r\n            ready: false,\r\n            len: 0,\r\n            state: 'stop',\r\n            lock: false,\r\n            volume: audio.volume,\r\n            onePlay: false\r\n        };\r\n\r\n        sound.domEl.addEventListener('loadeddata', function (e) {\r\n            sound.ready = true;\r\n            var file = e.explicitOriginalTarget || e.path[0];\r\n            audioHandler.j2Ds.resources.ok(file.currentSrc);\r\n        });\r\n\r\n        sound.domEl.addEventListener('error', function (e) {\r\n            sound.setLock(true);\r\n            //var file = e.srcElement || e.target;\r\n            //audioHandler.j2Ds.resources.fail(file.src);\r\n        });\r\n\r\n        sound.domEl.addEventListener('ended', function () {\r\n            sound.state = 'stop';\r\n        });\r\n\r\n        sound.play = function (unlock) {\r\n            if (unlock) {\r\n                this.setLock(false);\r\n            }\r\n            if (this.lock) return;\r\n            if (this.state == 'play') {\r\n                this.domEl.currentTime = 0;\r\n            }\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.loop = function () {\r\n            if (this.lock) return;\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.pause = function (lock) {\r\n            if (this.state == 'play') {\r\n                this.setLock(lock);\r\n                this.domEl.pause();\r\n                this.state = 'pause';\r\n            }\r\n        };\r\n\r\n        sound.stop = function (lock) {\r\n            this.domEl.pause();\r\n            this.domEl.currentTime = 0;\r\n            this.state = 'stop';\r\n            if (lock) {\r\n                this.setLock(lock);\r\n            }\r\n        };\r\n\r\n        sound.setLock = function (lock) {\r\n            this.lock = lock ? true : false;\r\n        };\r\n\r\n        sound.setVolume = function (vol) {\r\n            this.domEl.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n            this.volume = this.domEl.volume;\r\n        };\r\n\r\n        sound.getVolume = function (id) {\r\n            return this.volume;\r\n        };\r\n\r\n        sound.getState = function (id) {\r\n            return this.state;\r\n        };\r\n\r\n        sound.getPlayPosition = function () {\r\n            return this.domEl.currentTime;\r\n        };\r\n\r\n        sound.domEl.load();\r\n\r\n        this.audios[id] = sound;\r\n        return sound;\r\n    };\r\n\r\n    AudioHandler.prototype.get = function (id) {\r\n        return this.audios[id];\r\n    };\r\n\r\n    AudioHandler.prototype.pause = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].pause(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.stop = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].stop(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.play = function (unlock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].play(unlock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.deactivate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'play') {\r\n                this.audios[snd].pause();\r\n                this.audios[snd].state = 'deactivated';\r\n            }\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.activate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'deactivated') {\r\n                this.audios[snd].play();\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.AudioHandler = AudioHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.AudioHandler = AudioHandler;\r\n    return AudioHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var InputHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.pos = {x: 0, y: 0};\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.keyDown = [];\r\n        this.keyPress = [];\r\n        this.keyPressed = [];\r\n        this.keyUp = [];\r\n        this.keyUped = false;\r\n        this.mouseDown = [];\r\n        this.mousePress = [];\r\n        this.mousePressed = [];\r\n        this.mouseUp = [];\r\n        this.mouseUpped = false;\r\n        this.mouseWheel = 0;\r\n        this.canceled = false;\r\n        this.body = false;\r\n        this.anyKey = false;\r\n        this.anyMouse = false;\r\n        this.writeMode = false;\r\n        this.displayCursor = '';\r\n        this.visible = true;\r\n        this.enabled = false;\r\n    };\r\n\r\n    InputHandler.prototype.mKey = {\r\n        'LEFT': 1,\r\n        'MIDDLE': 2,\r\n        'RIGHT': 3\r\n    };\r\n\r\n    InputHandler.prototype.jKey = {\r\n        'LEFT': 37,\r\n        'RIGHT': 39,\r\n        'UP': 38,\r\n        'DOWN': 40,\r\n        'SPACE': 32,\r\n        'CTRL': 17,\r\n        'SHIFT': 16,\r\n        'ALT': 18,\r\n        'ESC': 27,\r\n        'ENTER': 13,\r\n        'MINUS': 189,\r\n        'PLUS': 187,\r\n        'CAPS_LOCK': 20,\r\n        'BACKSPACE': 8,\r\n        'TAB': 9,\r\n        'Q': 81,\r\n        'W': 87,\r\n        'E': 69,\r\n        'R': 82,\r\n        'T': 84,\r\n        'Y': 89,\r\n        'U': 85,\r\n        'I': 73,\r\n        'O': 79,\r\n        'P': 80,\r\n        'A': 65,\r\n        'S': 83,\r\n        'D': 68,\r\n        'F': 70,\r\n        'G': 71,\r\n        'H': 72,\r\n        'J': 74,\r\n        'K': 75,\r\n        'L': 76,\r\n        'Z': 90,\r\n        'X': 88,\r\n        'V': 86,\r\n        'B': 66,\r\n        'N': 78,\r\n        'M': 77,\r\n        '0': 48,\r\n        '1': 49,\r\n        '2': 50,\r\n        '3': 51,\r\n        '4': 52,\r\n        '5': 53,\r\n        '6': 54,\r\n        '7': 55,\r\n        '8': 56,\r\n        'C': 67,\r\n        '9': 57,\r\n        'NUM_0': 45,\r\n        'NUM_1': 35,\r\n        'NUM_2': 40,\r\n        'NUM_3': 34,\r\n        'NUM_4': 37,\r\n        'NUM_5': 12,\r\n        'NUM_6': 39,\r\n        'NUM_7': 36,\r\n        'NUM_8': 38,\r\n        'NUM_9': 33,\r\n        'NUM_MINUS': 109,\r\n        'NUM_PLUS': 107,\r\n        'NUM_LOCK': 144,\r\n        'F1': 112,\r\n        'F2': 113,\r\n        'F3': 114,\r\n        'F4': 115,\r\n        'F5': 116,\r\n        'F6': 117,\r\n        'F7': 118,\r\n        'F8': 119,\r\n        'F9': 120,\r\n        'F10': 121,\r\n        'F11': 122,\r\n        'F12': 123\r\n    };\r\n\r\n    InputHandler.prototype.keyList = function () {\r\n        var o = [];\r\n        for (var i in this.jKey) {\r\n            o.push(i);\r\n        }\r\n        return o;\r\n    };\r\n\r\n    InputHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n        this.keyPress = [];\r\n        this.keyUp = [];\r\n        this.mousePress = [];\r\n        this.mouseUp = [];\r\n        this.mouseWheel = 0;\r\n    };\r\n\r\n    InputHandler.prototype.isKeyDown = function (code) {\r\n        return this.keyDown[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyPress = function (code) {\r\n        return this.keyPress[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyUp = function (code) {\r\n        return this.keyUp[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    InputHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    InputHandler.prototype.setWriteMode = function (_true) {\r\n        this.writeMode = _true;\r\n    };\r\n\r\n    InputHandler.prototype.isWriteMode = function () {\r\n        return this.writeMode;\r\n    };\r\n\r\n    InputHandler.prototype.keyEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        if (e.type == 'keydown') {\r\n            if (!this.keyPressed[e.keyCode]) {\r\n                this.keyPress[e.keyCode] = true;\r\n                this.keyPressed[e.keyCode] = true;\r\n            }\r\n            if (!this.writeMode) {\r\n                e.preventDefault();\r\n            } else {\r\n                this.j2Ds.events.onEvent('writeMode:keyPress', '');\r\n            }\r\n        } else if (e.type == 'keyup') {\r\n            if (this.keyPressed[e.keyCode]) {\r\n                e.preventDefault();\r\n                this.keyPress[e.keyCode] = false;\r\n                this.keyPressed[e.keyCode] = false;\r\n                this.keyUp[e.keyCode] = true;\r\n                this.keyUped = true;\r\n            }\r\n        } else if (e.type == 'keypress' && (this.writeMode)) {\r\n            var char = '';\r\n            if (e.which != 0 && e.charCode != 0) {\r\n                if (e.which >= 32) {\r\n                    char = String.fromCharCode(e.which);\r\n                }\r\n            }\r\n            this.j2Ds.events.onEvent('writeMode:keyPress', char);\r\n        }\r\n\r\n        this.keyDown[e.keyCode] = (e.type == 'keydown') && (!this.canceled);\r\n        this.anyKey = e.keyCode;\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.cancel = function (id) {\r\n        if (!id) {\r\n            this.canceled = true;\r\n            this.keyDown = [];\r\n            this.mouseDown = [];\r\n        }\r\n        else {\r\n            this.keyDown[this.jKey[id]] = false;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.onNode = function (id) {\r\n        if (!id.layer.visible) return false;\r\n        return (this.pos.x > id.pos.x && this.pos.x < id.pos.x + id.size.x) &&\r\n            (this.pos.y > id.pos.y && this.pos.y < id.pos.y + id.size.y);\r\n    };\r\n\r\n    InputHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n        this.x = (this.screenPos.x / dX);\r\n        this.y = (this.screenPos.y / dY);\r\n        this.pos.x = this.j2Ds.scene.view.pos.x + this.x;\r\n        this.pos.y = this.j2Ds.scene.view.pos.y + this.y;\r\n    };\r\n\r\n    InputHandler.prototype.onMove = function (e) {\r\n        this.screenPos.x = -this.j2Ds.scene.offsetLeft + e.pageX;\r\n        this.screenPos.y = -this.j2Ds.scene.offsetTop + e.pageY;\r\n    };\r\n\r\n    InputHandler.prototype.isMouseDown = function (code) {\r\n        return this.mouseDown[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMousePress = function (code) {\r\n        return this.mousePress[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseUp = function (code) {\r\n        return this.mouseUp[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseWheel = function (code) {\r\n        return (code == 'UP' && this.mouseWheel > 0) ||\r\n            (code == 'DOWN' && this.mouseWheel < 0)\r\n    };\r\n\r\n    InputHandler.prototype.onMouseWheel = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        this.mouseWheel = ((e.wheelDelta) ? e.wheelDelta : -e.detail);\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.onMouseEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        if (!e.which && e.button) {\r\n            if (e.button & 1) e.which = 1;\r\n            else if (e.button & 4) e.which = 2;\r\n            else if (e.button & 2) e.which = 3;\r\n        }\r\n\r\n        if (e.type == 'mousedown') {\r\n            if (!this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = true;\r\n                this.mousePressed[e.which] = true;\r\n            }\r\n        } else if (e.type == 'mouseup') {\r\n            if (this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = false;\r\n                this.mousePressed[e.which] = false;\r\n                this.mouseUp[e.which] = true;\r\n                this.mouseUped = true;\r\n            }\r\n        }\r\n\r\n        this.mouseDown[e.which] = (e.type == 'mousedown') && (!this.canceled);\r\n\r\n        this.j2Ds.window.focus();\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.setCursorImage = function (curImg) {\r\n        this.j2Ds.dom.tag('body')[0].style.cursor = 'url(\"' + curImg + '\"), auto';\r\n    };\r\n\r\n    InputHandler.prototype.setVisible = function (_true) {\r\n        this.visible = _true;\r\n        if (!_true) {\r\n            this.displayCursor = this.j2Ds.dom.tag('body')[0].style.cursor;\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = 'none';\r\n        } else {\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = this.displayCursor;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    InputHandler.prototype.init = function () {\r\n        var input = this;\r\n        input.enabled = true;\r\n\r\n        input.j2Ds.events.addEvent('engine:before', function () {\r\n            input.upd();\r\n        });\r\n\r\n        input.j2Ds.events.addEvent('engine:after', function () {\r\n            input.reset();\r\n        });\r\n\r\n\r\n        input.j2Ds.events.addEvent('dom:loaded', function () {\r\n            input.j2Ds.window.oncontextmenu = function () {\r\n                return false;\r\n            };\r\n            input.j2Ds.window.onselectstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.ondragstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.onmousedown = input.onMouseEvent;\r\n            input.j2Ds.window.onmouseup = function (e) {\r\n                input.canceled = false;\r\n                input.onMouseEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousemove = function (e) {\r\n                input.onMove(e);\r\n            };\r\n            input.j2Ds.window.onkeydown = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeyup = function (e) {\r\n                input.canceled = false;\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeypress = function (e) {\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousewheel = function (e) {\r\n                input.onMouseWheel(e);\r\n            };\r\n\r\n            if (input.j2Ds.window.addEventListener) {\r\n                input.j2Ds.window.addEventListener(\"DOMMouseScroll\", function (e) {\r\n                    input.onMouseWheel(e);\r\n                }, false);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.InputHandler = InputHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.InputHandler = InputHandler;\r\n    return InputHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/TouchHandler', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var TouchHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.pos = {x: 0, y: 0};\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.canceled = false;\r\n        this.touchs = [];\r\n        this.tapDown = false;\r\n        this.tapPress = false;\r\n        this.tapUp = false;\r\n        this.body = false;\r\n    };\r\n\r\n    TouchHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    TouchHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.cancel = function () {\r\n        if (!this.enabled) return false;\r\n    };\r\n\r\n    TouchHandler.prototype.isTapDown = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapPress = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.isTapUp = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.getTouch = function () {\r\n\r\n    };\r\n\r\n    TouchHandler.prototype.onTouchEvent = function () {\r\n        if (!this.enabled) return false;\r\n\r\n    };\r\n\r\n\r\n    TouchHandler.prototype.init = function () {\r\n        var touchHandler = this;\r\n        touchHandler.enabled = true;\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:before', function () {\r\n            touchHandler.upd();\r\n        });\r\n\r\n        touchHandler.j2Ds.events.addEvent('engine:after', function () {\r\n            touchHandler.reset();\r\n        });\r\n\r\n\r\n        touchHandler.j2Ds.events.addEvent('dom:loaded', function () {\r\n\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TouchHandler = TouchHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.TouchHandler = TouchHandler;\r\n    return TouchHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Layers', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Layers = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.layersList = {};\r\n    };\r\n\r\n    Layers.prototype.layer = function (id) {\r\n        return this.layersList[id];\r\n    };\r\n\r\n    Layers.prototype.add = function (id, index, notDOM) {\r\n        if (!!this.layersList[id]) return false;\r\n\r\n        var layer = {\r\n            layerName: id\r\n        };\r\n\r\n        if (!notDOM) {\r\n            layer.canvas = document.createElement('canvas');\r\n        } else {\r\n            layer.canvas = this.j2Ds.dom.id(id);\r\n        }\r\n\r\n        layer.canvas.style.position = this.j2Ds.scene.stylePosition;\r\n\r\n        layer.canvas.id = id;\r\n\r\n        layer.canvas.style.zIndex = 1000 + index;\r\n        layer.canvas.style.left = this.j2Ds.scene.offsetLeft + 'px';\r\n        layer.canvas.style.top = this.j2Ds.scene.offsetTop + 'px';\r\n\r\n        layer.canvas.width = this.j2Ds.scene.width;\r\n        layer.canvas.height = this.j2Ds.scene.height;\r\n        layer.width = this.j2Ds.scene.width;\r\n        layer.height = this.j2Ds.scene.height;\r\n        layer.context = layer.canvas.getContext('2d');\r\n        layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n        layer.alpha = 1;\r\n        layer.angle = 0;\r\n        layer.visible = 1;\r\n\r\n        layer.onContext = function (callback) {\r\n            callback(this.context);\r\n        };\r\n\r\n        layer.fill = function (color) {\r\n            this.context.fillStyle = color;\r\n            this.context.fillRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.setAlpha = function (alpha) {\r\n            this.canvas.style.opacity = alpha;\r\n            this.alpha = alpha;\r\n        };\r\n\r\n        layer.getAlpha = function () {\r\n            return this.alpha;\r\n        };\r\n\r\n        layer.setVisible = function (visible) {\r\n            if (visible) {\r\n                this.canvas.style.display = 'block';\r\n                this.visible = true;\r\n            } else {\r\n                this.canvas.style.display = 'none';\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        layer.isVisible = function () {\r\n            return this.visible;\r\n        };\r\n\r\n        layer.setIndex = function (index) {\r\n            this.canvas.style.zIndex = 1000 + index;\r\n        };\r\n\r\n        layer.clear = function () {\r\n            this.context.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.clearNode = function (node) {\r\n            var layer = this;\r\n            if (node.isLookScene()) {\r\n                this.context.clearRect(\r\n                    node.pos.x - layer.j2Ds.scene.view.pos.x,\r\n                    node.pos.y - layer.j2Ds.scene.view.pos.y,\r\n                    node.size.x,\r\n                    node.size.y\r\n                );\r\n            }\r\n        };\r\n\r\n        layer.setContextSettings = function (settings) {\r\n            for (var i in settings) {\r\n                if (typeof this.context[i] !== 'undefined') {\r\n                    this.context[i] = settings[i];\r\n                }\r\n            }\r\n        };\r\n\r\n        layer.clearRect = function (pos, size) {\r\n            var layer = this;\r\n            this.context.clearRect(pos.x - layer.j2Ds.scene.view.pos.x, pos.y - layer.j2Ds.scene.view.pos.y, size.x, size.y);\r\n        };\r\n\r\n        this.layersList[id] = layer;\r\n\r\n        if (!notDOM) {\r\n            this.j2Ds.dom.attach(this.layersList[id].canvas);\r\n        }\r\n\r\n        return layer;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Layers = Layers;\r\n    if (global.j2Ds !== undefined) global.modules.core.Layers = Layers;\r\n    return Layers;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Scene', [\r\n            'nodes/BaseNode',\r\n            'nodes/CircleNode',\r\n            'nodes/LineNode',\r\n            'nodes/RectNode',\r\n            'nodes/SpriteNode',\r\n            'nodes/TextNode',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('nodes/BaseNode'),\r\n            require('nodes/CircleNode'),\r\n            require('nodes/LineNode'),\r\n            require('nodes/RectNode'),\r\n            require('nodes/SpriteNode'),\r\n            require('nodes/TextNode'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.nodes.BaseNode,\r\n            root.modules.nodes.CircleNode,\r\n            root.modules.nodes.LineNode,\r\n            root.modules.nodes.RectNode,\r\n            root.modules.nodes.SpriteNode,\r\n            root.modules.nodes.TextNode,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (BaseNode,\r\n              CircleNode,\r\n              LineNode,\r\n              RectNode,\r\n              SpriteNode,\r\n              TextNode,\r\n              TextureUtil) {\r\n        \"use strict\";\r\n\r\n        var Scene = function (j2Ds) {\r\n            j2Ds = this.j2Ds = j2Ds;\r\n\r\n            this.nodes = [];\r\n            this.layerName = 'sceneNode';\r\n            this.stylePosition = 'fixed';\r\n            this.layers = j2Ds.layers;\r\n            this.view = false;\r\n            this.gameStateName = false;\r\n            this.canFullScreen = true;\r\n\r\n            this.texture = new TextureUtil(this.j2Ds);\r\n        };\r\n\r\n        /*функции*/\r\n\r\n        Scene.prototype.setView = function (_id) {\r\n            this.view = this.j2Ds.viewManager.views[_id];\r\n        };\r\n\r\n        Scene.prototype.getView = function () {\r\n            return this.view;\r\n        };\r\n\r\n        Scene.prototype.setAutoDraw = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:after', function () {\r\n                    scene.drawAllNodes();\r\n                }, 'autoDraw');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:after', 'autoDraw');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setAutoClear = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:before', function () {\r\n                    scene.clear();\r\n                }, 'autoClear');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:before', 'autoClear');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setGameState = function (name) {\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name].state) {\r\n                this.j2Ds.setActiveEngine(this.j2Ds.gameStates.states[name].state);\r\n            }\r\n            this.gameStateName = name;\r\n            this.j2Ds.events.onEvent('scene:changedGameState');\r\n        };\r\n\r\n        Scene.prototype.getGameState = function () {\r\n            return this.gameStateName;\r\n        };\r\n\r\n        Scene.prototype.start = function (name, frameLimit) {\r\n            this.j2Ds.events.onEvent('scene:beforeStart');\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name]) {\r\n                this.j2Ds.start(this.j2Ds.gameStates.states[name].state, frameLimit);\r\n            }\r\n            this.j2Ds.events.onEvent('scene:afterStart');\r\n        };\r\n\r\n        Scene.prototype.fullScreen = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            var tmpCanvas = document.createElement('canvas'); // Нужны для копирования содержимого\r\n            var tmpContext = tmpCanvas.getContext('2d');      // При изменении размера\r\n            if (_true) {\r\n                this.origWidth = this.width;\r\n                this.origHeight = this.height;\r\n                this.width = this.j2Ds.getDeviceManager().width;\r\n                this.height = this.j2Ds.getDeviceManager().height;\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i];\r\n                    tmpCanvas.width = layer.width;\r\n                    tmpCanvas.height = layer.height;\r\n                    tmpContext.drawImage(layer.canvas, 0, 0);\r\n                    layer.canvas.width = this.width;\r\n                    layer.canvas.height = this.height;\r\n                    layer.width = this.width;\r\n                    layer.height = this.height;\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n\r\n                    layer.context.drawImage(tmpCanvas, 0, 0, layer.width, layer.height);\r\n                }\r\n            } else {\r\n                this.width = this.origWidth;\r\n                this.height = this.origHeight;\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i];\r\n                    layer.width = this.origWidth;\r\n                    layer.height = this.origHeight;\r\n                    layer.canvas.width = this.origWidth;\r\n                    layer.canvas.height = this.origHeight;\r\n                    this.offsetWidth = this.origWidth;\r\n                    this.offsetHeight = this.origHeight;\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.fullScale = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            if (_true) {\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i].canvas;\r\n                    layer.style.width = this.j2Ds.getDeviceManager().width + 'px';\r\n                    layer.style.height = this.j2Ds.getDeviceManager().height + 'px';\r\n                    this.offsetWidth = this.j2Ds.getDeviceManager().width;\r\n                    this.offsetHeight = this.j2Ds.getDeviceManager().height;\r\n                }\r\n            } else {\r\n                for (var i in this.j2Ds.layers.list) {\r\n                    layer = this.j2Ds.layers.list[i].canvas;\r\n                    layer.style.width = this.width + 'px';\r\n                    layer.style.height = this.height + 'px';\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.clear = function () {\r\n            this.getLayer().clear();\r\n        };\r\n\r\n        Scene.prototype.getLayer = function () {\r\n            return this.j2Ds.layers.layer(this.layerName);\r\n        };\r\n\r\n        Scene.prototype.drawAllNodes = function () {\r\n            for (var i = 0, len = this.nodes.length; i < len; i += 1) {\r\n                if (this.nodes[i].draw) {\r\n                    this.nodes[i].draw();\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.init = function (_w, _h, _canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = _w;\r\n            scene.height = _h;\r\n\r\n            scene.origWidth = _w;\r\n            scene.origHeight = _h;\r\n\r\n            scene.offsetWidth = _w;\r\n            scene.offsetHeight = _h;\r\n\r\n            scene.offsetLeft = 0;\r\n            scene.offsetTop = 0;\r\n\r\n\r\n            scene.j2Ds.canDeactivate = _canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add('sceneNode', 0);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(scene.layerName).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(scene.layerName).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.list) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        Scene.prototype.initCanvas = function (_id, _canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.canFullScreen = false;\r\n\r\n            scene.layerName = _id;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = parseInt(scene.j2Ds.dom.id(_id).width);\r\n            scene.height = parseInt(scene.j2Ds.dom.id(_id).height);\r\n\r\n            scene.origWidth = scene.width;\r\n            scene.origHeight = scene.height;\r\n\r\n            scene.offsetWidth = parseInt(scene.j2Ds.dom.id(_id).offsetWidth);\r\n            scene.offsetHeight = parseInt(scene.j2Ds.dom.id(_id).offsetHeight);\r\n\r\n            scene.offsetLeft = parseInt(scene.j2Ds.dom.id(_id).offsetLeft);\r\n            scene.offsetTop = parseInt(scene.j2Ds.dom.id(_id).offsetTop);\r\n\r\n            scene.stylePosition = scene.j2Ds.dom.id(_id).style.position == 'fixed' ? 'fixed' : 'absolute';\r\n\r\n            scene.j2Ds.canDeactivate = _canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add(_id, 0, 1);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(_id).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(_id).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.list) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        /* Nodes */\r\n        Scene.prototype.addBaseNode = function (pos, size) {\r\n            return new BaseNode(this.j2Ds, pos, size);\r\n        };\r\n\r\n        Scene.prototype.addCircleNode = function (pos, radius, color) {\r\n            return new CircleNode(this.j2Ds, pos, radius, color);\r\n        };\r\n\r\n        Scene.prototype.addLineNode = function (pos, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.j2Ds, pos, points, scale, color, width, fill, cFill);\r\n        };\r\n\r\n        Scene.prototype.addRectNode = function (pos, size, color) {\r\n            return new RectNode(this.j2Ds, pos, size, color);\r\n        };\r\n\r\n        Scene.prototype.addSpriteNode = function (pos, size, animation) {\r\n            return new SpriteNode(this.j2Ds, pos, size, animation);\r\n        };\r\n\r\n        Scene.prototype.addTextNode = function (pos, text, sizePx, color, family, width, colorL) {\r\n            return new TextNode(this.j2Ds, pos, text, sizePx, color, family, width, colorL);\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Scene = Scene;\r\n        if (global.j2Ds !== undefined) global.modules.core.Scene = Scene;\r\n        return Scene;\r\n    }));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2Ds', [\r\n            'core/Dom',\r\n            'core/Gui',\r\n            'core/Events',\r\n            'core/Layers',\r\n            'core/Scene',\r\n\r\n            'io/AudioHandler',\r\n            'io/InputHandler',\r\n            'io/TouchHandler',\r\n\r\n            'managers/DeviceManager',\r\n            'managers/ErrorManager',\r\n            'managers/FpsManager',\r\n            'managers/ResourceManager',\r\n            'managers/StorageManager',\r\n            'managers/TimeManager',\r\n            'managers/TriggerManager',\r\n            'managers/ViewManager',\r\n\r\n            'utils/MathUtil',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('core/Dom'),\r\n            require('core/Gui'),\r\n            require('core/Events'),\r\n            require('core/Layers'),\r\n            require('core/Scene'),\r\n\r\n            require('io/AudioHandler'),\r\n            require('io/InputHandler'),\r\n            require('io/TouchHandler'),\r\n\r\n            require('managers/DeviceManager'),\r\n            require('managers/ErrorManager'),\r\n            require('managers/FpsManager'),\r\n            require('managers/ResourceManager'),\r\n            require('managers/StorageManager'),\r\n            require('managers/TimeManager'),\r\n            require('managers/TriggerManager'),\r\n            require('managers/ViewManager'),\r\n\r\n            require('utils/MathUtil'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.core.Dom,\r\n            root.modules.core.Gui,\r\n            root.modules.core.Events,\r\n            root.modules.core.Layers,\r\n            root.modules.core.Scene,\r\n\r\n            root.modules.io.AudioHandler,\r\n            root.modules.io.InputHandler,\r\n            root.modules.io.TouchHandler,\r\n\r\n            root.modules.managers.DeviceManager,\r\n            root.modules.managers.ErrorManager,\r\n            root.modules.managers.FpsManager,\r\n            root.modules.managers.ResourceManager,\r\n            root.modules.managers.StorageManager,\r\n            root.modules.managers.TimeManager,\r\n            root.modules.managers.TriggerManager,\r\n            root.modules.managers.ViewManager,\r\n\r\n            root.modules.utils.MathUtil,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (DOM,\r\n              GUI,\r\n              Events,\r\n              Layers,\r\n              Scene,\r\n              AudioHandler,\r\n              InputHandler,\r\n              TouchHandler,\r\n              DeviceManager,\r\n              ErrorManager,\r\n              FPSManager,\r\n              ResourceManager,\r\n              StorageManager,\r\n              TimeManager,\r\n              TriggerManager,\r\n              ViewManager,\r\n              MathUtil) {\r\n        \"use strict\";\r\n\r\n        var frameLimit = 60;\r\n\r\n        /*------------------ 2D движок --------------------*/\r\n        var j2DsEngine = function () {\r\n            this.vector = {};\r\n            this.math = {};\r\n            this.dom = {};\r\n            this.now = Date.now();\r\n            this.dt = 0;\r\n            this.stopAll = 0;\r\n            this.frameLimit = 60;\r\n            this.sceneStartTime = 0;\r\n            this.sceneSkipTime = 0;\r\n            this.engine = function () {\r\n                this.errorManager.show('Не инициализировано ни одно игровое состояние', 'red');\r\n                this.stopEngine();\r\n            };\r\n            this.ready = false;\r\n            this.window = window;\r\n            this.canDeactivate = true;\r\n\r\n            /* Getters & Setters */\r\n\r\n            this.getInfo = function () {\r\n                return {\r\n                    'name': 'j2Ds',\r\n                    'version': '0.6.3',\r\n                    'git': 'https://github.com/SkanerSoft/j2Ds',\r\n                    'site': 'http://j2ds.ru',\r\n                    'description': 'HTML5 2D Game Engine',\r\n                    'author': 'Skaner'\r\n                };\r\n            };\r\n\r\n            this.getFPSManager = function () {\r\n                this.fpsManager.init();\r\n                return this.fpsManager;\r\n            };\r\n\r\n            this.getSceneManager = function () {\r\n                return this.scene;\r\n            };\r\n\r\n            this.getLayerManager = function () {\r\n                return this.layers;\r\n            };\r\n\r\n            this.getTextureManager = function () {\r\n                return this.scene.texture;\r\n            };\r\n\r\n            this.getAudioManager = function () {\r\n                this.audio.init();\r\n                return this.audio;\r\n            };\r\n\r\n            this.getPaintManager = function () {\r\n                return this.paint;\r\n            };\r\n\r\n            this.getIO = function () {\r\n                this.input.init();\r\n                return this.input;\r\n            };\r\n\r\n            this.getTouchIO = function () {\r\n                this.touch.init();\r\n                return this.touch;\r\n            };\r\n\r\n            this.getDOMManager = function () {\r\n                return this.dom;\r\n            };\r\n\r\n            this.getTriggerManager = function () {\r\n                this.trigger.init();\r\n                return this.trigger;\r\n            };\r\n\r\n            this.getMathManager = function () {\r\n                return MathUtil;\r\n            };\r\n\r\n            this.getGameStateManager = function () {\r\n                return this.gameStates;\r\n            };\r\n\r\n            this.getViewManager = function () {\r\n                return this.viewManager;\r\n            };\r\n\r\n            this.getDeviceManager = function () {\r\n                return this.deviceManager;\r\n            };\r\n\r\n            this.getErrorManager = function () {\r\n                this.errorManager.init();\r\n                return this.errorManager;\r\n            };\r\n\r\n            this.getTimeManager = function () {\r\n                return this.timeManager;\r\n            };\r\n\r\n            this.getResourceManager = function () {\r\n                return this.resources;\r\n            };\r\n\r\n            this.setWindow = function (_window) {\r\n                this.window = _window ? _window : window;\r\n            };\r\n\r\n            this.setFrameLimit = function (fps) {\r\n                this.frameLimit = (fps > 0 && fps <= 60) ? fps : 60;\r\n                frameLimit = this.frameLimit;\r\n            };\r\n\r\n            this.setActiveEngine = function (engine) {\r\n                this.engine = typeof engine == 'function'\r\n                    ? engine\r\n                    : this.errorManager.show('Error in \"GameStateManager\"');\r\n            };\r\n\r\n            this.events = new Events(this);\r\n            this.dom = new DOM(this);\r\n            this.gui = new GUI(this);\r\n            this.resources = new ResourceManager(this);\r\n            this.trigger = new TriggerManager(this);\r\n            this.timeManager = new TimeManager(this);\r\n            this.deviceManager = DeviceManager();\r\n            this.errorManager = new ErrorManager(this);\r\n            this.fpsManager = new FPSManager(this);\r\n            this.input = new InputHandler(this);\r\n            this.layers = new Layers(this);\r\n            this.viewManager = new ViewManager(this);\r\n            this.scene = new Scene(this);\r\n\r\n            this.createLocal = function (id) {\r\n                new StorageManager(this, id);\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.gameStates = {\r\n            states: {},\r\n\r\n            add: function (name, _state, start, end) {\r\n                var state = {};\r\n                state.state = _state;\r\n                state.start = start || false;\r\n                state.end = end || false;\r\n\r\n                this.states[name] = state;\r\n            }\r\n        };\r\n\r\n        j2DsEngine.prototype.start = function (engine, frameLimit) {\r\n            this.setActiveEngine(engine);\r\n            this.frameLimit = frameLimit || 60;\r\n            this.sceneSkipTime = 1000.0 / this.frameLimit;\r\n            this.lastTime = Date.now();\r\n            this.dt = 0;\r\n            this.sceneStartTime = this.lastTime;\r\n            this.gameEngine(this);\r\n        };\r\n\r\n        j2DsEngine.prototype.gameEngine = function (j2Ds) {\r\n            j2Ds.now = Date.now();\r\n            setTimeout(function () {\r\n                if (!j2Ds.stopAll) {\r\n                    j2Ds.dt = (j2Ds.now - j2Ds.lastTime) / 100.0;\r\n                    j2Ds.sceneStartTime = j2Ds.now;\r\n                    if (j2Ds.dt > j2Ds.sceneSkipTime / 2) j2Ds.dt = 0;\r\n\r\n                    j2Ds.events.onEvent('engine:before');\r\n\r\n                    try {\r\n                        j2Ds.engine();\r\n                    } catch (err) {\r\n                        j2Ds.errorManager.showError(err);\r\n                    }\r\n\r\n                    j2Ds.events.onEvent('engine:after');\r\n\r\n                    j2Ds.lastTime = j2Ds.now;\r\n\r\n                    requestAnimationFrame(function () {\r\n                        j2Ds.gameEngine(j2Ds);\r\n                    });\r\n                }\r\n            }, (j2Ds.frameLimit < 60 ? j2Ds.sceneSkipTime : 0));\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return window.requestAnimationFrame ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame ||\r\n                function (callback) {\r\n                    window.setTimeout(callback, 1000 / frameLimit);\r\n                };\r\n        })();\r\n\r\n        j2DsEngine.prototype.stopEngine = function () {\r\n            if (!this.canDeactivate) return;\r\n            this.stopAll = true;\r\n        };\r\n\r\n        j2DsEngine.prototype.runEngine = function (j2Ds) {\r\n            j2Ds = j2Ds || this;\r\n            if (!j2Ds.canDeactivate) return;\r\n            if (!j2Ds.stopAll) return;\r\n            j2Ds.stopAll = false;\r\n            requestAnimationFrame(function () {\r\n                j2Ds.gameEngine(j2Ds);\r\n            });\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.modules.core.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.j2Ds = new j2DsEngine();\r\n        return j2DsEngine;\r\n    }\r\n));\r\n"],"sourceRoot":"/source/"}